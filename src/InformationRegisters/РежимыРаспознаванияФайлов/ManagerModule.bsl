#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Выполняет обновление регистра с режимами распознавания владельцев.
// Удаляя исключенных владельцев и добавляя новых.
// Для новых владельцев всегда устанавливается режим ПоЗапросу.
//
Процедура ОбновитьРежимРаспознаванияДляВладельцев() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивВладельцев = Новый Массив;
	Для Каждого ТипВладельца Из Метаданные.ОпределяемыеТипы.ВладелецФайлов.Тип.Типы() Цикл
		МассивВладельцев.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипВладельца));
	КонецЦикла;
	
	ИменаВладельцев = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивВладельцев, "Имя");
	
	ИдентификаторыВладельцев = Новый Соответствие;
	Для Каждого Владелец Из МассивВладельцев Цикл
		ИмяВладельца = ИменаВладельцев[Владелец];
		Если СтрНачинаетсяС(ИмяВладельца, "Удалить") Тогда
			Продолжить;
		КонецЕсли;
		ИдентификаторыВладельцев[Владелец] = Истина;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РежимыРаспознаванияФайлов.Владелец КАК Владелец,
		|	РежимыРаспознаванияФайлов.Режим КАК Режим
		|ИЗ
		|	РегистрСведений.РежимыРаспознаванияФайлов КАК РежимыРаспознаванияФайлов";
	
	ТекущиеРежимы = Запрос.Выполнить().Выгрузить();
	
	РежимыДляЗаписи = СоздатьНаборЗаписей();
	
	ДобавленныеВладельцы = Новый Соответствие;
	
	ЕстьИзменения = Ложь;
	
	Для Каждого СтрокаРежим Из ТекущиеРежимы Цикл
		Если ИдентификаторыВладельцев[СтрокаРежим.Владелец] = Неопределено Тогда
			ЕстьИзменения = Истина;
			Продолжить;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(РежимыДляЗаписи.Добавить(), СтрокаРежим);
		ДобавленныеВладельцы[СтрокаРежим.Владелец] = Истина;
	КонецЦикла;
	
	Для Каждого КлючЗначение Из ИдентификаторыВладельцев Цикл
		
		Если ДобавленныеВладельцы[КлючЗначение.Ключ] = Истина Тогда
			Продолжить;
		КонецЕсли;
		
		Запись = РежимыДляЗаписи.Добавить();
		Запись.Владелец = КлючЗначение.Ключ;
		Запись.Режим = Перечисления.ВариантыРежимовРаспознаванияФайлов.ПоЗапросу;
		
		ЕстьИзменения = Истина;
		
	КонецЦикла;
	
	Если ЕстьИзменения Тогда
		РежимыДляЗаписи.Записать();
	КонецЕсли;
	
КонецПроцедуры

// Возвращает режимы распознавания файлов для владельцев.
//
// Возвращаемое значение:
//  Соотвествие
//   * Ключ - ИОМ - идентификатор владельца.
//   * Значение - ПеречислениеСсылка.ВариантыРежимовРаспознаванияФайлов - режим.
//
Функция РежимыРаспознавания() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РежимыРаспознаванияФайлов.Владелец КАК Владелец,
		|	РежимыРаспознаванияФайлов.Режим КАК Режим
		|ИЗ
		|	РегистрСведений.РежимыРаспознаванияФайлов КАК РежимыРаспознаванияФайлов";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Результат[Выборка.Владелец] = Выборка.Режим;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает режим распознования файлов для владельца.
//
// Параметры:
//  Владелец - СправочникСсылка.ИдентификаторыОбъектовМетаданных - ИОМ владельца.
//
// Возвращаемое значение:
//  ПеречислениеСсылка.ВариантыРежимовРаспознаванияФайлов
//
Функция РежимРаспознаванияФайловВладельца(Владелец) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РежимыРаспознаванияФайлов.Режим КАК Режим
		|ИЗ
		|	РегистрСведений.РежимыРаспознаванияФайлов КАК РежимыРаспознаванияФайлов
		|ГДЕ
		|	РежимыРаспознаванияФайлов.Владелец = &Владелец";
	Запрос.УстановитьПараметр("Владелец", Владелец);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Режим;
	Иначе
		ВызватьИсключение НСтр("ru = 'Для владельца не определен режим распознавания. Выполнение операции приостановлено.'");
	КонецЕсли;
	
КонецФункции

// Записывает в регистр режимы распознавания для владельцев файлов.
//
// Параметры:
//  Режимы - Соответствие - см. РежимыРаспознавания
//
Процедура ЗаписатьРежимыРаспознаванияФайлов(Режимы) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Набор = СоздатьНаборЗаписей();
	Для Каждого РежимДляВладельца Из Режимы Цикл
		Запись = Набор.Добавить();
		Запись.Владелец = РежимДляВладельца.Ключ;
		Запись.Режим = РежимДляВладельца.Значение;
	КонецЦикла;
	Набор.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли