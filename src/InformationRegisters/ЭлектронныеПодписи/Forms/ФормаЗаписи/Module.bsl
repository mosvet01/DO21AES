
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДоступнаУсовершенствованнаяЭП = ЭлектроннаяПодпись.ДоступнаУсовершенствованнаяПодпись();
	
	Элементы.ТипПодписи.Видимость = ДоступнаУсовершенствованнаяЭП;
	Элементы.СрокДействияПоследнейМеткиВремени.Видимость = ДоступнаУсовершенствованнаяЭП;
	Элементы.ФормаПродлитьСрокДействия.Видимость = ДоступнаУсовершенствованнаяЭП;
	
	ЗаполнитьПоЗаписи();
	
	ЕстьПравоНаУстановкуДоверенности = РаботаСЭП.ДоступноУказаниеДоверенностиПодписи(Запись.УникальныйИдентификатор);
	ДоверенностьНеобходима = Ложь;
	Сертификат = ПолучитьИзВременногоХранилища(АдресСертификата);
	Если ТипЗнч(Сертификат) = Тип("ДвоичныеДанные") Тогда
		СертификатКриптографии = Новый СертификатКриптографии(Сертификат);
		Если ТипЗнч(СертификатКриптографии) = Тип("СертификатКриптографии") Тогда
			ДоверенностьНеобходима = РаботаСЭП.СертификатуНужнаДоверенность(СертификатКриптографии);
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьПравоНаУстановкуДоверенности И ДоверенностьНеобходима Тогда
		Элементы.ФормаУстановитьДоверенность.Видимость = Истина;
	Иначе
		Элементы.ФормаУстановитьДоверенность.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СертификатНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ЭлектроннаяПодпись") Тогда
		Возврат;
	КонецЕсли;
	
	МодульЭлектроннаяПодписьКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ЭлектроннаяПодписьКлиент");
	
	Если Не ЗначениеЗаполнено(АдресСертификата) Тогда
		МодульЭлектроннаяПодписьКлиент.ОткрытьСертификат(Запись.Отпечаток, Истина);
	Иначе
		МодульЭлектроннаяПодписьКлиент.ОткрытьСертификат(АдресСертификата, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДоверенностьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "Доверенность" Тогда
		ПоказатьЗначение(, Доверенность);
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "Доверитель" Тогда
		ПоказатьЗначение(, ДоверительСсылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ЭлектроннаяПодписьКлиент.СохранитьПодпись(АдресПодписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродлитьСрокДействия(Команда)
	
	ОбработчикПродолжения = Новый ОписаниеОповещения("ОбработатьПродлениеПодписей", ЭтотОбъект);
	
	РаботаСЭПКлиент.ПродлитьДействиеПодписей(ЭтотОбъект, Запись.Объект,
		Запись.УникальныйИдентификатор, ОбработчикПродолжения);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоверенность(Команда)
	
	ОбработчикЗавершения = Новый ОписаниеОповещения("ОбработатьУказаниеДоверенности", ЭтотОбъект);
	
	РаботаСЭПКлиент.УказатьДоверенностьЭлектроннойПодписи(Запись.УникальныйИдентификатор, ОбработчикЗавершения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьПродлениеПодписей(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Успех <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоЗаписи();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоЗаписи()
	
	МенеджерЗаписи = Неопределено;
	
	Если Не Параметры.Ключ.Пустой()Тогда
		
		МенеджерЗаписи = РаботаСЭП.ПолучитьЭлектроннуюПодпись(Запись.Объект, Запись.УстановившийПодпись,
			Запись.ДатаПодписи, Запись.УникальныйИдентификатор);
		
	ИначеЕсли Параметры.Свойство("ДатаПодписи") И Параметры.Свойство("Объект") 
		И Параметры.Свойство("УстановившийПодпись") И Параметры.Свойство("УникальныйИдентификатор")
		И ТипЗнч(Параметры.УстановившийПодпись) = Тип("СправочникСсылка.Пользователи") Тогда
		
		МенеджерЗаписи = РаботаСЭП.ПолучитьЭлектроннуюПодпись(Параметры.Объект, Параметры.УстановившийПодпись,
			Параметры.ДатаПодписи, Параметры.УникальныйИдентификатор);
		
	ИначеЕсли ЗначениеЗаполнено(Запись.Объект) И ЗначениеЗаполнено(Запись.УникальныйИдентификатор) Тогда
		
		МенеджерЗаписи = РаботаСЭП.ПолучитьЭлектроннуюПодпись(Запись.Объект, Запись.УстановившийПодпись,
			Запись.ДатаПодписи, Запись.УникальныйИдентификатор);
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Не хватает параметров для открытия формы просмотра ЭП.'");
		
	КонецЕсли;
	
	Если МенеджерЗаписи = Неопределено Тогда
		ВызватьИсключение("Электронная подпись не найдена");
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(МенеджерЗаписи, "Запись");
	
	Если Не ЗначениеЗаполнено(Запись.Комментарий) Тогда
		Запись.Комментарий = НСтр("ru = 'Не указан'");
		Элементы.Комментарий.ЦветТекста = ЦветаСтиля.НедоступныеДанныеЦвет;
	КонецЕсли;
	
	Если ТипЗнч(Запись.Объект) = Тип("СправочникСсылка.ВерсииФайлов") Тогда
		ПодписанныйОбъект = Запись.Объект.Владелец;
	Иначе
		ПодписанныйОбъект = Запись.Объект;
	КонецЕсли;
	
	Если Параметры.Свойство("АдресПодписи") Тогда
		АдресПодписи = Параметры.АдресПодписи;
	Иначе
		ДвоичныеДанные = МенеджерЗаписи.Подпись.Получить();
		Если ДвоичныеДанные <> Неопределено Тогда 
			АдресПодписи = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("АдресСертификата") Тогда
		АдресСертификата = Параметры.АдресСертификата;
	Иначе
		ДвоичныеДанные = МенеджерЗаписи.Сертификат.Получить();
		Если ДвоичныеДанные <> Неопределено Тогда 
			АдресСертификата = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	
	Если ДоступнаУсовершенствованнаяЭП Тогда
		
		Если ЗначениеЗаполнено(Запись.ТипПодписи) Тогда
			Элементы.ТипПодписи.Видимость = Истина;
		Иначе
			Элементы.ТипПодписи.Видимость = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Запись.СрокДействияПоследнейМеткиВремени) Тогда
			Элементы.СрокДействияПоследнейМеткиВремени.Видимость = Истина;
		Иначе
			Элементы.СрокДействияПоследнейМеткиВремени.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	СтандартныеПодсистемыСервер.СброситьРазмерыИПоложениеОкна(ЭтотОбъект);
	
	НастроитьФормуПоДоверенности();
	НастроитьФормуПоРезультатамПроверки(МенеджерЗаписи.Сертификат);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоРезультатамПроверки(Сертификат)
	
	ДанныеДляСтатуса = РаботаСЭПКлиентСервер.НовыеДанныеДляПолученияСтатусаПодписи();
	ДанныеДляСтатуса.ПодписьВерна = Запись.ПодписьВерна;
	ДанныеДляСтатуса.ТекстОшибкиПроверкиПодписи = Запись.ТекстОшибкиПроверкиПодписи;
	
	ДанныеДляСтатуса.СертификатДействителен = Запись.СертификатДействителен;
	ДанныеДляСтатуса.ТекстОшибкиПроверкиСертификата = Запись.ТекстОшибкиПроверкиСертификата;
	
	Если ЗначениеЗаполнено(Доверенность) Тогда
		ДанныеДляСтатуса.ПодписьПоДоверенности = Истина;
		ДанныеДляСтатуса.ДоверенностьДействительна = ДоверенностьДействительна;
		ДанныеДляСтатуса.ПротоколПроверкиДоверенности = ПротоколПроверкиДоверенности;
	Иначе
		ДанныеДляСтатуса.ПодписьПоДоверенности = Ложь;
	КонецЕсли;
	
	ДанныеДляСтатуса.ДатаПроверки = Запись.ДатаПроверкиПодписи;
	ДанныеДляСтатуса.СрокПроверкиСертификата = РаботаСЭП.СрокПроверкиДействияСертификата(
		Сертификат.Получить(), Запись.СрокДействияПоследнейМеткиВремени);
	
	ОбщийСтатусПроверки = РаботаСЭПКлиентСервер.ОбщийСтатусПроверкиПодписи(ДанныеДляСтатуса);
	
	ОбщийСтатусПроверкиКартинка = 1;
	ОписаниеОшибокПроверки = "";
	ЦветФона = ЦветаСтиля.ЦветФонаПодсказки;
	
	Если Не Запись.ПодписьВерна Тогда
		
		ОбщийСтатусПроверкиКартинка = 3;
		ОписаниеОшибокПроверки = РаботаСЭПКлиентСервер.СтатусПроверкиПодписи(ДанныеДляСтатуса);
		ЦветФона = ЦветаСтиля.ФонПодписьНеверна;
		
	ИначеЕсли Не Запись.СертификатДействителен Тогда
		
		ОбщийСтатусПроверкиКартинка = 2;
		ОписаниеОшибокПроверки = РаботаСЭПКлиентСервер.СтатусПроверкиСертификата(ДанныеДляСтатуса);
		ЦветФона = ЦветаСтиля.ЦветФонаПодсказки;
		
	ИначеЕсли ЗначениеЗаполнено(Доверенность) Тогда
		
		Если ДоверенностьДействительна Тогда
			ОбщийСтатусПроверкиКартинка = 2;
			ЦветФона = ЦветаСтиля.ФонПодписьВерна;
		Иначе
			ОписаниеОшибокПроверки = РаботаСЭПКлиентСервер.СтатусПроверкиДоверенности(ДанныеДляСтатуса);
			ЦветФона = ЦветаСтиля.ЦветФонаПодсказки;
		КонецЕсли;
		
	Иначе
		
		ОбщийСтатусПроверкиКартинка = 2;
		ЦветФона = ЦветаСтиля.ФонПодписьВерна;
		
	КонецЕсли;
	
	Если ОписаниеОшибокПроверки = "" Тогда
		Элементы.ОписаниеОшибокПроверки.Видимость = Ложь;
	Иначе
		Элементы.ОписаниеОшибокПроверки.Видимость = Истина;
	КонецЕсли;
	
	Элементы.ГруппаОсновная.ЦветФона = ЦветФона;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоДоверенности()
	
	Элементы.НадписьДоверенность.Видимость = Ложь;
	Доверенность = Неопределено;
	
	Идентификаторы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Запись.УникальныйИдентификатор);
	ДанныеДоверенностей = РаботаСЭП.ДанныеДоверенностейПодписей(Идентификаторы);
	ДанныеДоверенности = ДанныеДоверенностей[Запись.УникальныйИдентификатор];
	Если ДанныеДоверенности = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Доверенность = ДанныеДоверенности.Доверенность;
	ПротоколПроверкиДоверенности = ДанныеДоверенности.ПротоколПроверкиДоверенности;
	ДоверенностьДействительна = ДанныеДоверенности.ДоверенностьВерна;
	
	Если Не ЗначениеЗаполнено(Доверенность) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Доверенность) = Тип("СправочникСсылка.МашиночитаемыеДоверенностиОрганизаций") Тогда
		
		Доверитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Доверенность, "Организация");
		ДоверительСсылка = Доверитель;
		
		СтрокаДоверенности = СтрШаблон("<a href=""%1"">%2</a>",
			"Доверенность", Доверенность);
		СтрокаДоверителя = СтрШаблон("<a href=""%1"">%2</a>",
			"Доверитель", Доверитель);
			
	ИначеЕсли ТипЗнч(Доверенность) = Тип("СправочникСсылка.МашиночитаемыеДоверенностиКонтрагентов") Тогда
		
		Доверитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Доверенность, "Доверитель");
		
		СтрокаДоверенности = СтрШаблон("<a href=""%1"">%2</a>",
			"Доверенность", Доверенность);
		СтрокаДоверителя = Доверитель;
		
	Иначе
		Возврат;
	КонецЕсли;
	
	Элементы.НадписьДоверенность.Видимость = Истина;
	ПояснениеДоверенности = СтрШаблон(НСтр("ru = 'Подписано по доверенности %1 (от имени %2)'"),
		СтрокаДоверенности, СтрокаДоверителя);
	Элементы.НадписьДоверенность.Заголовок =
		ИнтернетПоддержкаПользователейВызовСервера.ФорматированнаяСтрокаИзHTML(ПояснениеДоверенности);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьУказаниеДоверенности(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоЗаписи();
	
КонецПроцедуры

#КонецОбласти
