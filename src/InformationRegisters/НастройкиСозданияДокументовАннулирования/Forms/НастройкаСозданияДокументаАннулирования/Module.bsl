
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьВопросыДеятельности = ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности");
	
	ВидДокумента = Параметры.ВидДокумента;
	Направление = Параметры.Направление;
	ОбязателенОтменяющийДокумент = Параметры.ОбязателенОтменяющийДокумент;
	
	Если Не ЗначениеЗаполнено(ВидДокумента) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указан вид аннулируемого документа!'"));
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Направление) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указано направление аннулирования!'"));
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоДаннымРегистра();
	
	Если ОбязателенОтменяющийДокумент Тогда
		АннулированиеОтдельнымДокументом = Истина;
	КонецЕсли;
	
	Если Направление = Перечисления.НаправленияЭДО.Входящий Тогда
		Заголовок = НСтр("ru = 'Входящее предложение об аннулировании'");
	Иначе
		Заголовок = НСтр("ru = 'Исходящее предложение об аннулировании'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НастроитьВидимостьЭлементовФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура АннулированиеОтдельнымДокументомПриИзменении(Элемент)
	
	НастроитьВидимостьЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонНаименованияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("МаксимальнаяДлинаСтроки",   500);
	ПараметрыФормы.Вставить("РазрешенПереносСтрок",      Ложь);
	ПараметрыФормы.Вставить("ШаблонСтроки",              ШаблонНаименования);
	ПараметрыФормы.Вставить("НаименованиеПоля",          НСтр("ru = 'Наименование документа'"));
	ПараметрыФормы.Вставить("ИмяМакетаДереваПараметров", "ДеревоПараметровДокументаАннулирования");
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ЗавершениеРедактированияНаименования", ЭтаФорма);
	
	ОткрытьФорму(
		"РегистрСведений.ПравилаУчетаВидовЭДДО.Форма.ФормаШаблонаСтроковыхПолей",
		ПараметрыФормы,
		ЭтаФорма, , , ,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеРедактированияНаименования(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонНаименования = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонСодержанияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("МаксимальнаяДлинаСтроки",   0);
	ПараметрыФормы.Вставить("РазрешенПереносСтрок",      Истина);
	ПараметрыФормы.Вставить("ШаблонСтроки",              ШаблонСодержания);
	ПараметрыФормы.Вставить("НаименованиеПоля",          НСтр("ru = 'Содержание документа'"));
	ПараметрыФормы.Вставить("ИмяМакетаДереваПараметров", "ДеревоПараметровДокументаАннулирования");
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ЗавершениеРедактированияСодержания", ЭтаФорма);
	
	ОткрытьФорму(
		"РегистрСведений.ПравилаУчетаВидовЭДДО.Форма.ФормаШаблонаСтроковыхПолей",
		ПараметрыФормы,
		ЭтаФорма, , , ,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеРедактированияСодержания(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонСодержания = Результат;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	Если Не НастройкиКорректны() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьНастройкиВРегистр();
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрыть(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПоДаннымРегистра()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиСозданияДокументовАннулирования.ВидДокументаАннулирования КАК ВидДокументаАннулирования,
		|	НастройкиСозданияДокументовАннулирования.ВопросДеятельности КАК ВопросДеятельности,
		|	НастройкиСозданияДокументовАннулирования.Ответственный КАК Ответственный,
		|	НастройкиСозданияДокументовАннулирования.Папка КАК Папка,
		|	НастройкиСозданияДокументовАннулирования.ШаблонНаименования КАК ШаблонНаименования,
		|	НастройкиСозданияДокументовАннулирования.ШаблонСодержания КАК ШаблонСодержания
		|ИЗ
		|	РегистрСведений.НастройкиСозданияДокументовАннулирования КАК НастройкиСозданияДокументовАннулирования
		|ГДЕ
		|	НастройкиСозданияДокументовАннулирования.ВидДокумента = &ВидДокумента
		|	И НастройкиСозданияДокументовАннулирования.Направление = &Направление";
	Запрос.УстановитьПараметр("ВидДокумента", ВидДокумента);
	Запрос.УстановитьПараметр("Направление", Направление);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		
		АннулированиеОтдельнымДокументом = Ложь;
		
	Иначе
		
		АннулированиеОтдельнымДокументом = Истина;
		
		ВидДокументаАннулирования = Выборка.ВидДокументаАннулирования;
		ВопросДеятельности        = Выборка.ВопросДеятельности;
		Ответственный             = Выборка.Ответственный;
		Папка                     = Выборка.Папка;
		ШаблонНаименования        = Выборка.ШаблонНаименования;
		ШаблонСодержания          = Выборка.ШаблонСодержания;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВидимостьЭлементовФормы()
	
	Элементы.АннулированиеОтдельнымДокументом.Видимость = Не ОбязателенОтменяющийДокумент;
	Элементы.ГруппаОсновное.Видимость = АннулированиеОтдельнымДокументом;
	Элементы.ВопросДеятельности.Видимость = ИспользоватьВопросыДеятельности;
	
КонецПроцедуры

&НаКлиенте
Функция НастройкиКорректны()
	
	ЕстьОшибки = Ложь;
	
	Если Не АннулированиеОтдельнымДокументом Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидДокументаАннулирования) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указан вид документа аннулирования!'"), ,
			"ВидДокументаАннулирования");
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ШаблонНаименования) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнен шаблон наименования документа!'"), ,
			"ШаблонНаименования");
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	РезультатПроверкиШаблонаНаименования = ПроверитьКорректностьШаблона(ШаблонНаименования);
	
	Если Не РезультатПроверкиШаблонаНаименования.Успех Тогда
		ТекстСообщения = НСтр("ru = 'Шаблон наименования документа заполнен некорректно:'")
			+ Символы.ПС
			+ РезультатПроверкиШаблонаНаименования.Описание;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения, ,
			"ШаблонНаименования");
		
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Возврат Не ЕстьОшибки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьКорректностьШаблона(ШаблонЗаполнения)
	
	СтруктураВозврата = Новый Структура("Успех, Описание");
	
	РезультатВыделенияПараметров = ОбменСКонтрагентамиДОСервер.ПараметрыВШаблонеСтроковогоПоля(ШаблонЗаполнения);
	
	Если Не РезультатВыделенияПараметров.Успех Тогда
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, РезультатВыделенияПараметров);
		
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	ДеревоПараметров = ОбменСКонтрагентамиДОСервер.ДеревоПараметровЗаполненияСтроковыхПолей(
		"ДеревоПараметровДокументаАннулирования");
	
	Для Каждого ИмяПараметра Из РезультатВыделенияПараметров.МассивПараметров Цикл
		Если ДеревоПараметров.Строки.Найти(ИмяПараметра, "ПредставлениеПолное", Истина) = Неопределено Тогда
			
			СтруктураВозврата.Успех = Ложь;
			СтруктураВозврата.Описание = СтрШаблон(
				НСтр("ru = 'Параметр [%1] не найден в возможных параметрах заполнения.'"),
				ИмяПараметра);
			
			Возврат СтруктураВозврата;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураВозврата.Успех = Истина;
	СтруктураВозврата.Описание = НСтр("ru = 'Шаблон заполнения корректен'");
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаСервере
Процедура ЗаписатьНастройкиВРегистр()
	
	НаборЗаписей = РегистрыСведений.НастройкиСозданияДокументовАннулирования.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВидДокумента.Установить(ВидДокумента);
	НаборЗаписей.Отбор.Направление.Установить(Направление);
	
	Если Не АннулированиеОтдельнымДокументом Тогда
		НаборЗаписей.Записать();
		Возврат;
	КонецЕсли;
	
	НаборЗаписей.Очистить();
	
	НоваяЗапись = НаборЗаписей.Добавить();
	
	НоваяЗапись.ВидДокумента              = ВидДокумента;
	НоваяЗапись.Направление               = Направление;
	
	НоваяЗапись.ВидДокументаАннулирования = ВидДокументаАннулирования;
	НоваяЗапись.ВопросДеятельности        = ВопросДеятельности;
	НоваяЗапись.Ответственный             = Ответственный;
	НоваяЗапись.Папка                     = Папка;
	НоваяЗапись.ШаблонНаименования        = ШаблонНаименования;
	НоваяЗапись.ШаблонСодержания          = ШаблонСодержания;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти
