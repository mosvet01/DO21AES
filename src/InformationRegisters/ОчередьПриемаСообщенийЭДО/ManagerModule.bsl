#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработкаПереходаНаНовуюВерсию

Процедура ЗаполнитьСообщенияЭДОПоФайламОчередиПриема(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.ОчередьПриемаСообщенийЭДО;
	ПолноеИмяОбъекта = МетаданныеОбъекта.ПолноеИмя();
	
	Если ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "Справочник.СообщениеЭДОПрисоединенныеФайлы") Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
			Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	ПараметрыОтметкиВыполнения = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОчередьПриемаСообщенийЭДО.СообщениеЭДО КАК ФайлСообщения,
		|	СообщениеЭДОПрисоединенныеФайлы.ВладелецФайла КАК ВладелецФайла
		|ПОМЕСТИТЬ ФайлыВОчередиПриемаСообщений
		|ИЗ
		|	РегистрСведений.ОчередьПриемаСообщенийЭДО КАК ОчередьПриемаСообщенийЭДО
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СообщениеЭДОПрисоединенныеФайлы КАК СообщениеЭДОПрисоединенныеФайлы
		|		ПО ОчередьПриемаСообщенийЭДО.СообщениеЭДО = СообщениеЭДОПрисоединенныеФайлы.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФайлыВОчередиПриемаСообщений.ФайлСообщения КАК ФайлСообщенияЭДО,
		|	СообщениеЭДО.Ссылка КАК СообщениеЭДО
		|ИЗ
		|	ФайлыВОчередиПриемаСообщений КАК ФайлыВОчередиПриемаСообщений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СообщениеЭДО КАК СообщениеЭДО
		|		ПО ФайлыВОчередиПриемаСообщений.ВладелецФайла = СообщениеЭДО.Ссылка";
	
	СообщенияФайлов = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СообщенияФайлов.Вставить(Выборка.ФайлСообщенияЭДО, Выборка.СообщениеЭДО);
	КонецЦикла;
	
	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;
	
	НаборЗаписей = РегистрыСведений.ОчередьПриемаСообщенийЭДО.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	
	ОбъектовКОбработке = НаборЗаписей.Количество();
	
	Записать = Ложь;
	
	Для Каждого Запись Из НаборЗаписей Цикл
		
		Если ТипЗнч(Запись.СообщениеЭДО) <> Тип("СправочникСсылка.СообщениеЭДОПрисоединенныеФайлы") Тогда
			ОбъектовОбработано = ОбъектовОбработано + 1;
			Продолжить;
		КонецЕсли;
		
		СообщениеЭДО = СообщенияФайлов.Получить(Запись.СообщениеЭДО);
		
		Если Не ЗначениеЗаполнено(СообщениеЭДО) Тогда
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Для файла ЭДО %1 не найдено сообщение ЭДО'"),
				Запись.СообщениеЭДО);
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка, МетаданныеОбъекта, Запись.СообщениеЭДО, ТекстСообщения);
			
			Продолжить;
		КонецЕсли;
		
		Запись.СообщениеЭДО = СообщениеЭДО;
		
		ОбъектовОбработано = ОбъектовОбработано + 1;
		
		Записать = Истина;
		
	КонецЦикла;
	
	Если Записать Тогда
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
	Иначе
		ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей, ПараметрыОтметкиВыполнения);
	КонецЕсли;
	
	Если ОбъектовОбработано = 0 И ПроблемныхОбъектов <> 0 Тогда
		ШаблонСообщения = НСтр("ru = 'Не удалось обработать некоторые файлы из очереди очереди приема документов ЭДО (пропущены): %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ШаблонСообщения = НСтр("ru = 'Обработана очередная порция файлов из очереди приема документов ЭДО: %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ОбъектовОбработано);
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация,
			МетаданныеОбъекта,, ТекстСообщения);
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов =
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбъектовОбработано;
	
	Параметры.ОбработкаЗавершена = ОбъектовКОбработке <= ОбъектовОбработано;
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Добавляет запись.
//
Процедура ДобавитьЗапись(СообщениеЭДО) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	
	БлокировкаДанных = Новый БлокировкаДанных;
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.ОчередьПриемаСообщенийЭДО");
	ЭлементБлокировки.УстановитьЗначение("СообщениеЭДО", СообщениеЭДО);
	БлокировкаДанных.Заблокировать();
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.СообщениеЭДО = СообщениеЭДО;
	Запись.Записать();
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Функция ДобавитьПопыткуОбработки(СообщениеЭДО) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = РегистрыСведений.ОчередьПриемаСообщенийЭДО.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.СообщениеЭДО = СообщениеЭДО;
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи.КоличествоПопытокОбработки =
			МенеджерЗаписи.КоличествоПопытокОбработки + 1;
		МенеджерЗаписи.Записать();
		
		Возврат МенеджерЗаписи.КоличествоПопытокОбработки;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

// Удаляет запись.
//
Процедура УдалитьЗапись(СообщениеЭДО) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	
	БлокировкаДанных = Новый БлокировкаДанных;
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.ОчередьПриемаСообщенийЭДО");
	ЭлементБлокировки.УстановитьЗначение("СообщениеЭДО", СообщениеЭДО);
	БлокировкаДанных.Заблокировать();
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.СообщениеЭДО = СообщениеЭДО;
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		Запись.Удалить();
	КонецЕсли;	
	
	ЗафиксироватьТранзакцию();
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли