//Добавляет запись

Процедура ДобавитьЗапись(МобильноеПриложение, Ссылка, Граница) Экспорт
	
	НЗ = СоздатьНаборЗаписей();
	НЗ.ОбменДанными.Загрузка = Истина;
	НЗ.Отбор.МобильноеПриложение.Установить(МобильноеПриложение);
	НЗ.Отбор.Ссылка.Установить(Ссылка);
	
	МЗ = НЗ.Добавить();
	МЗ.МобильноеПриложение = МобильноеПриложение;
	МЗ.Ссылка = Ссылка;
	МЗ.Граница = Граница;
	
	НЗ.Записать();
	
КонецПроцедуры

//Возвращает является ли граница устаревшей для ссылочного объекта 
//	(изменение объекта на сервере было позже, чем изменения в мобильном приложении)
// Параметры:
//  МобильноеПриложение - СправочникСсылка.ПользователиМобильногоПриложения - Проверяемое моб. приложение
//  СсылочныйОбъект - ЛюбаяСсылка - Проверяемый ссылочный объект
//
Функция ЕстьИзмененияПозжеГраницыОтправленныхДанных(МобильноеПриложение, СсылочныйОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОтметкиВремениСсылочныхОбъектов.Граница КАК Граница
		|ИЗ
		|	РегистрСведений.МП_ОтправленныеСсылочныеДанные КАК МП_ОтправленныеСсылочныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтметкиВремениСсылочныхОбъектов КАК ОтметкиВремениСсылочныхОбъектов
		|		ПО МП_ОтправленныеСсылочныеДанные.Ссылка = ОтметкиВремениСсылочныхОбъектов.Ключ
		|			И МП_ОтправленныеСсылочныеДанные.Граница < ОтметкиВремениСсылочныхОбъектов.Граница
		|ГДЕ
		|	МП_ОтправленныеСсылочныеДанные.Ссылка = &СсылочныйОбъект
		|	И МП_ОтправленныеСсылочныеДанные.МобильноеПриложение = &МобильноеПриложение";
	
	Запрос.УстановитьПараметр("МобильноеПриложение", МобильноеПриложение);
	Запрос.УстановитьПараметр("СсылочныйОбъект", СсылочныйОбъект);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

//Добавляет набор записей для фиксации отправленных данных из переданной таблицы значений
// Параметры
//  МобильноеПриложение - СправочникСсылка.ПользователиМобильногоПриложения - моб. приложение, для которого фиксируются 
//		данные
//	ОтправленныеДанные - ТаблицаЗначений - ОтправленныеДанные
//	ГраницаСборки - Число(15) - Текущая граница сборки для приложения
//
Процедура ДобавитьНаборЗаписейИзТаблицы(МобильноеПриложение, ОтправленныеДанные, ГраницаСборки) Экспорт
		
	УстановитьПривилегированныйРежим(Истина);
	
	Колонки = ОтправленныеДанные.Колонки;
	
	ЕстьПометкаУдаления = (Колонки.Найти("ПометкаУдаления") <> Неопределено);
	
	ЕстьГраница = (Колонки.Найти("Граница") <> Неопределено);
	
	Для каждого Строка Из ОтправленныеДанные Цикл
		
		Если ЕстьПометкаУдаления И Строка.ПометкаУдаления = Истина Тогда
			ОчиститьОтправленныеДанныеПоСсылке(МобильноеПриложение, Строка.Ссылка);
		Иначе
			
			Если Не ЕстьГраница Или Не ЗначениеЗаполнено(Строка.Граница) Тогда
				Граница = ГраницаСборки;
			Иначе
				Граница = Строка.Граница;
			КонецЕсли;
			
			ДобавитьЗапись(Строка.Ссылка, МобильноеПриложение, Граница);
	
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//Очищает набор отправленных данных, если они были помечены на удаление
//Параметры
//  МобильноеПриложение - СправочникСсылка.ПользователиМобильногоПриложения - моб. приложение, для которого фиксируются 
//		данные
// Ссылка - ЛюбаяСсылка - Ссылочный объект отправленных данных 
//
Процедура ОчиститьОтправленныеДанныеПоСсылке(МобильноеПриложение, Ссылка) Экспорт
	
	НЗ = СоздатьНаборЗаписей();
	НЗ.ОбменДанными.Загрузка = Истина;
	НЗ.Отбор.МобильноеПриложение.Установить(МобильноеПриложение);
	НЗ.Отбор.Ссылка.Установить(Ссылка);
	НЗ.Записать();
	
КонецПроцедуры