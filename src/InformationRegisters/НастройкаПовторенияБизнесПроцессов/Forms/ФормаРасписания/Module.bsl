
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ , СтандартнаяОбработка)
	
	БизнесПроцесс = Параметры.БизнесПроцесс;
	Если Не БизнесПроцесс.Стартован Тогда 
		ТекстСообщения = НСтр("ru = 'Нельзя настроить повторение для не стартовавших процессов'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	
	
	РасписаниеЗаполнено = Ложь;
	АдресВременногоХранилища = Параметры.АдресВременногоХранилища;
	ГрафикРаботы = Параметры.ГрафикРаботы;
	Элементы.ПовторениеПрекращено.Видимость = Ложь;
	Если ЗначениеЗаполнено(АдресВременногоХранилища) Тогда
		СтруктураЗаписи = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
		
		Комментарий = СтруктураЗаписи.Комментарий;
		Расписание = СтруктураЗаписи.Расписание;
		Если Расписание <> Неопределено Тогда 
			ИзРасписанияНаФорму();
		    РасписаниеЗаполнено = Истина;
		КонецЕсли;	
		
		ПовторениеЗавершено = Параметры.ПовторениеЗавершено;
		Если ПовторениеЗавершено Тогда 
			ЭтаФорма.ТолькоПросмотр = Истина;
			Элементы.ПовторениеПрекращено.Видимость = Истина;
		КонецЕсли;
	Иначе
		МенеджерЗаписи = РегистрыСведений.НастройкаПовторенияБизнесПроцессов.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.БизнесПроцесс = БизнесПроцесс;
		МенеджерЗаписи.Прочитать();
		
		Если МенеджерЗаписи.Выбран() Тогда 
			Комментарий = МенеджерЗаписи.Комментарий;
			Расписание = МенеджерЗаписи.Расписание.Получить();
			ГрафикРаботы = МенеджерЗаписи.ГрафикРаботы;
			ИзРасписанияНаФорму();
			РасписаниеЗаполнено = Истина;
			
			ПовторениеЗавершено = МенеджерЗаписи.ПовторениеЗавершено;
			Если ПовторениеЗавершено Тогда 
				ЭтаФорма.ТолькоПросмотр = Истина;
				Элементы.ПовторениеПрекращено.Видимость = Истина;
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	
	Если Не РасписаниеЗаполнено Тогда 
		ТекущаяДата = ТекущаяДатаСеанса();
		
		Если НачалоДня(БизнесПроцесс.Дата) < НачалоДня(ТекущаяДата) Тогда 
			ДатаНачала = ТекущаяДата + 24*3600;
			ВремяНачала = ТекущаяДата - Секунда(ТекущаяДата);
		Иначе
			ДатаНачала = БизнесПроцесс.Дата + 24*3600;
			ВремяНачала = БизнесПроцесс.Дата - Секунда(БизнесПроцесс.Дата);
		КонецЕсли;	
		
		Повторять = "Ежедневно";
		
		ИнтервалПовторенияДн = 1;
		ИнтервалПовторенияНед = 1;
		
	КонецЕсли;		
		
	Если Повторять = "Ежедневно" Тогда 
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаЕжедневно;
	ИначеЕсли Повторять = "Еженедельно"	Тогда 
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаЕженедельно;
	ИначеЕсли Повторять = "Ежемесячно" Тогда 
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаЕжемесячно;
	КонецЕсли;	
	
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		НастроитьЭлементыФормыДляМобильногоУстройства();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьЕдиницуИзмеренияИнтервалаДн();
	ЗаполнитьЕдиницуИзмеренияИнтервалаНед();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда 
		ТекстВопроса = Нстр("ru = 'Данные были изменены. Сохранить измерения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		Отказ = Истина;

	КонецЕсли;	
	
КонецПроцедуры

// Продолжение процедуры ПередЗакрытием
//
&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьИзменения();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(ДатаКонца) И ДатаКонца < ДатаНачала Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Дата окончания меньше даты начала периода'"),,"ДатаКонца",,Отказ);
	КонецЕсли;	
	
	Если Повторять = "Еженедельно" Тогда  
		
		Если Пн = Ложь И Вт = Ложь И Ср = Ложь И Чт = Ложь И Пт = Ложь И Сб = Ложь И Вс = Ложь Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не указано ни одного дня недели'"),,"Пн",,Отказ);
		КонецЕсли;	
		
	ИначеЕсли Повторять = "Ежемесячно" Тогда 
		
		Если ДеньМесяца = 0 Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не указан день месяца'"),,"ДеньМесяца",,Отказ);
		КонецЕсли;	
		ПроверяемыеРеквизиты.Добавить("НаправлениеМесяца");
		
	КонецЕсли;	
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПовторятьПриИзменении(Элемент)
	
	Если Повторять = "Ежедневно" Тогда 
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаЕжедневно;
	ИначеЕсли Повторять = "Еженедельно"	Тогда 
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаЕженедельно;
		
		Если Пн = Ложь И Вт = Ложь И Ср = Ложь И Чт = Ложь И Пт = Ложь И Сб = Ложь И Вс = Ложь Тогда 
			ДеньНедели = ДеньНедели(ДатаНачала);
			Если ДеньНедели = 1 Тогда Пн = Истина КонецЕсли;
			Если ДеньНедели = 2 Тогда Вт = Истина КонецЕсли;
			Если ДеньНедели = 3 Тогда Ср = Истина КонецЕсли;
			Если ДеньНедели = 4 Тогда Чт = Истина КонецЕсли;
			Если ДеньНедели = 5 Тогда Пт = Истина КонецЕсли;
			Если ДеньНедели = 6 Тогда Сб = Истина КонецЕсли;
			Если ДеньНедели = 7 Тогда Вс = Истина КонецЕсли;
		КонецЕсли;	
		
	ИначеЕсли Повторять = "Ежемесячно" Тогда 
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаЕжемесячно;
		
		Если Не ЗначениеЗаполнено(ДеньМесяца) Тогда 
			ДеньМесяца = День(ДатаНачала);
		КонецЕсли;	
		Если Не ЗначениеЗаполнено(НаправлениеМесяца) Тогда 
			НаправлениеМесяца = "СНачала";
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалПовторенияДнПриИзменении(Элемент)
	
	ЗаполнитьЕдиницуИзмеренияИнтервалаДн();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалПовторенияНедПриИзменении(Элемент)
	
	ЗаполнитьЕдиницуИзмеренияИнтервалаНед();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	СохранитьИзменения();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть(КодВозвратаДиалога.Отмена);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет отображаемые реквизиты на форме из
// реквизита Расписание
//
&НаСервере
Процедура ИзРасписанияНаФорму()
	
	ДатаНачала 	= Расписание.ДатаНачала;
	ДатаКонца 	= Расписание.ДатаКонца;
	ВремяНачала = Расписание.ВремяНачала;
	
	ИнтервалПовторенияДн = 1;
	ИнтервалПовторенияНед = 1;
	
	Если Расписание.ДниНедели.Количество() > 0 Тогда 
		
		Повторять = "Еженедельно";
		Пн = (Расписание.ДниНедели.Найти(1) <> Неопределено);
		Вт = (Расписание.ДниНедели.Найти(2) <> Неопределено);
		Ср = (Расписание.ДниНедели.Найти(3) <> Неопределено);
		Чт = (Расписание.ДниНедели.Найти(4) <> Неопределено);
		Пт = (Расписание.ДниНедели.Найти(5) <> Неопределено);
		Сб = (Расписание.ДниНедели.Найти(6) <> Неопределено);
		Вс = (Расписание.ДниНедели.Найти(7) <> Неопределено);
		
		Если ЗначениеЗаполнено(Расписание.ПериодНедель) Тогда
			ИнтервалПовторенияНед = Расписание.ПериодНедель;
		КонецЕсли;
		
	ИначеЕсли Расписание.ДеньВМесяце <> 0 Тогда 
		
		Повторять = "Ежемесячно";
		Если Расписание.ДеньВМесяце > 0 Тогда 
			ДеньМесяца = Расписание.ДеньвМесяце;
			НаправлениеМесяца = "СНачала";
		Иначе 	
			ДеньМесяца = - Расписание.ДеньвМесяце;
			НаправлениеМесяца = "СКонца";
		КонецЕсли;
		
		КоличествоМесяцев = Расписание.Месяцы.Количество();
		
		янв = (Расписание.Месяцы.Найти(1) <> Неопределено);
		фев = (Расписание.Месяцы.Найти(2) <> Неопределено);
		мар = (Расписание.Месяцы.Найти(3) <> Неопределено);
		апр = (Расписание.Месяцы.Найти(4) <> Неопределено);
		май = (Расписание.Месяцы.Найти(5) <> Неопределено);
		июн = (Расписание.Месяцы.Найти(6) <> Неопределено);
		июл = (Расписание.Месяцы.Найти(7) <> Неопределено);
		авг = (Расписание.Месяцы.Найти(8) <> Неопределено);
		сен = (Расписание.Месяцы.Найти(9) <> Неопределено);
		окт = (Расписание.Месяцы.Найти(10) <> Неопределено);
		ноя = (Расписание.Месяцы.Найти(11) <> Неопределено);
		дек = (Расписание.Месяцы.Найти(12) <> Неопределено);
		
	Иначе
		Повторять = "Ежедневно";
		
		Если ЗначениеЗаполнено(Расписание.ПериодПовтораДней) Тогда
			ИнтервалПовторенияДн = Расписание.ПериодПовтораДней;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Сохраняет отображаемые реквизиты на форме в
// реквизит Расписание
//
&НаСервере
Процедура ИзФормыВРасписание()

	Расписание = Новый РасписаниеРегламентногоЗадания;
	Расписание.ДатаНачала = ДатаНачала;
	Если ЗначениеЗаполнено(ДатаКонца) Тогда 
		Расписание.ДатаКонца = КонецДня(ДатаКонца);
	КонецЕсли;	
	Расписание.ВремяНачала = ВремяНачала;
	Расписание.ПериодПовтораДней = 1;
	Расписание.ПериодНедель = 1;
	
	Если Повторять = "Еженедельно" Тогда  
		
		ДниНедели = Новый Массив();
		Если Пн Тогда ДниНедели.Добавить(1); КонецЕсли;
		Если Вт Тогда ДниНедели.Добавить(2); КонецЕсли;
		Если Ср Тогда ДниНедели.Добавить(3); КонецЕсли;
		Если Чт Тогда ДниНедели.Добавить(4); КонецЕсли;
		Если Пт Тогда ДниНедели.Добавить(5); КонецЕсли;
		Если Сб Тогда ДниНедели.Добавить(6); КонецЕсли;
		Если Вс Тогда ДниНедели.Добавить(7); КонецЕсли;
		Расписание.ДниНедели = ДниНедели;
		
		Расписание.ПериодНедель = ИнтервалПовторенияНед;
		
	ИначеЕсли Повторять = "Ежемесячно" Тогда 
		
		СписокМесяцев = Новый Массив;
		Если янв Тогда СписокМесяцев.Добавить(1); КонецЕсли;
		Если фев Тогда СписокМесяцев.Добавить(2); КонецЕсли;
		Если мар Тогда СписокМесяцев.Добавить(3); КонецЕсли;
		Если апр Тогда СписокМесяцев.Добавить(4); КонецЕсли;
		Если май Тогда СписокМесяцев.Добавить(5); КонецЕсли;
		Если июн Тогда СписокМесяцев.Добавить(6); КонецЕсли;
		Если июл Тогда СписокМесяцев.Добавить(7); КонецЕсли;
		Если авг Тогда СписокМесяцев.Добавить(8); КонецЕсли;
		Если сен Тогда СписокМесяцев.Добавить(9); КонецЕсли;
		Если окт Тогда СписокМесяцев.Добавить(10); КонецЕсли;
		Если ноя Тогда СписокМесяцев.Добавить(11); КонецЕсли;
		Если дек Тогда СписокМесяцев.Добавить(12); КонецЕсли;
		
		Расписание.Месяцы = СписокМесяцев;
		
		Если НаправлениеМесяца = "СНачала" Тогда 
			Расписание.ДеньВМесяце = ДеньМесяца;
		ИначеЕсли НаправлениеМесяца = "СКонца" Тогда 
			Расписание.ДеньВМесяце = - ДеньМесяца;
		КонецЕсли;
		
	Иначе
		Расписание.ПериодПовтораДней = ИнтервалПовторенияДн;
	КонецЕсли;
	
КонецПроцедуры

// Сохраняет измененое расписание во временном хранилище, если
// заполнен реквизит АдресВременногоХранилища (текущая форма открыта из формы 
// НастройкаПовторенияБизнесПроцессов.ФормаЗаписи), иначе записывает
// расписание в регистр НастройкаПовторенияБизнесПроцессов.
//
&НаКлиенте
Процедура СохранитьИзменения()
	
	ОчиститьСообщения();
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;	
	
	ИзФормыВРасписание();
	
	Если ЗначениеЗаполнено(АдресВременногоХранилища) Тогда 
		СтруктураЗаписи = Новый Структура;
		СтруктураЗаписи.Вставить("Расписание", Расписание);
		СтруктураЗаписи.Вставить("Комментарий", Комментарий);
		СтруктураЗаписи.Вставить("ГрафикРаботы", ГрафикРаботы);
		ПоместитьВоВременноеХранилище(СтруктураЗаписи, АдресВременногоХранилища);
	Иначе
		КлючЗаписи = ЗаписатьНастройки();
		ОповеститьОбИзменении(КлючЗаписи);
	КонецЕсли;	
	
	Модифицированность = Ложь;
	Закрыть(КодВозвратаДиалога.ОК);
	
КонецПроцедуры	

// Записывает расписание повторения для текущего процесса в базу.
//
&НаСервере
Функция ЗаписатьНастройки()
	
	МенеджерЗаписи = РегистрыСведений.НастройкаПовторенияБизнесПроцессов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.БизнесПроцесс = БизнесПроцесс;
	МенеджерЗаписи.Прочитать();
	Если МенеджерЗаписи.Выбран() Тогда 
		МенеджерЗаписи.Расписание = Новый ХранилищеЗначения(Расписание);
		МенеджерЗаписи.ГрафикРаботы = ГрафикРаботы;
		МенеджерЗаписи.Комментарий = Комментарий;
	Иначе
		МенеджерЗаписи.БизнесПроцесс = БизнесПроцесс;
		МенеджерЗаписи.ГрафикРаботы = ГрафикРаботы;
		МенеджерЗаписи.Расписание = Новый ХранилищеЗначения(Расписание);
		МенеджерЗаписи.Автор = ПользователиКлиентСервер.ТекущийПользователь();
		МенеджерЗаписи.Комментарий = Комментарий;
	КонецЕсли;	
	МенеджерЗаписи.Записать();
	
	ЗначенияКлюча = Новый Структура("БизнесПроцесс", БизнесПроцесс);
	КлючЗаписи = РегистрыСведений.НастройкаПовторенияБизнесПроцессов.СоздатьКлючЗаписи(ЗначенияКлюча);
	Возврат КлючЗаписи;
	
КонецФункции

// Заполняет поля отображения единиц измерения для интервала по дням
//
&НаКлиенте
Процедура ЗаполнитьЕдиницуИзмеренияИнтервалаДн()
	
	ИнтервалПовторенияДн_Заголовок = 
		ОбщегоНазначенияДокументооборотКлиентСервер.ПредметИсчисленияПрописью(
			ИнтервалПовторенияДн,
			НСтр("ru = 'каждый'") + "," + НСтр("ru = 'каждые'") + "," + НСтр("ru = 'каждые'"));
	
	ИнтервалПовторенияДн_ЕдиницаИзмеренеия = 
		ОбщегоНазначенияДокументооборотКлиентСервер.ПредметИсчисленияПрописью(
			ИнтервалПовторенияДн,
			НСтр("ru = 'день'") + "," + НСтр("ru = 'дня'") + "," + НСтр("ru = 'дней'"));
	
КонецПроцедуры

// Заполняет поля отображения единиц измерения для интервала по неделям
//
&НаКлиенте
Процедура ЗаполнитьЕдиницуИзмеренияИнтервалаНед()
	
	ИнтервалПовторенияНед_Заголовок = 
		ОбщегоНазначенияДокументооборотКлиентСервер.ПредметИсчисленияПрописью(
			ИнтервалПовторенияНед,
			НСтр("ru = 'каждую'") + "," + НСтр("ru = 'каждые'") + "," + НСтр("ru = 'каждые'"));
	
	ИнтервалПовторенияНед_ЕдиницаИзмеренеия = 
		ОбщегоНазначенияДокументооборотКлиентСервер.ПредметИсчисленияПрописью(
			ИнтервалПовторенияНед,
			НСтр("ru = 'неделю'") + "," + НСтр("ru = 'недели'") + "," + НСтр("ru = 'недель'"));
	
		КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормыДляМобильногоУстройства()
	
	Элементы.ОК.Отображение = ОтображениеКнопки.Картинка;
	Элементы.ОК.Картинка = БиблиотекаКартинок.ЗаписатьИЗакрыть;
	
	Элементы.Комментарий.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	Элементы.БизнесПроцесс.МногострочныйРежим = Истина;

	Элементы.НаправлениеМесяца.Заголовок = НСтр("ru = 'Направление'");
	Элементы.НаправлениеМесяца.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.ПовторениеПрекращеноИКомментарийГруппаМК.Видимость = Истина;
	Элементы.Переместить(
		Элементы.ПовторениеПрекращено,Элементы.ПовторениеПрекращеноИКомментарийГруппаМК,
			Элементы.ПовторениеПрекращеноИКомментарийГруппаМК);
	
	Элементы.Переместить(
		Элементы.ГрафикРаботы,Элементы.ПовторениеПрекращеноИКомментарийГруппаМК,
			Элементы.ПовторениеПрекращеноИКомментарийГруппаМК);
	
	Элементы.ГруппаКомментарий.ОтображатьЗаголовок = Истина;
	
	Элементы.ГрафикРаботы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	Элементы.ГрафикРаботы.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
	
	Элементы.ГруппаПериод.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	// День.
	Элементы.ГруппаИнтервалДн.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	Элементы.ИнтервалПовторенияДн_Заголовок.Ширина = 7;
	
	// Неделя.
	Элементы.ГруппаИнтервалНед.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	
	Элементы.ГруппаДниНедели.Заголовок = НСтр("ru = 'Дни недели'");
	Элементы.ГруппаДниНедели.ОтображатьЗаголовок = Истина;
	
	Элементы.ИнтервалПовторенияНед_Заголовок.Ширина = 6;

	Элементы.Пн.Заголовок = НСтр("ru = 'Понедельник'");
	Элементы.Пн.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.Вт.Заголовок = НСтр("ru = 'Вторник'");
	Элементы.Вт.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.Ср.Заголовок = НСтр("ru = 'Среда'");
	Элементы.Ср.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.Чт.Заголовок = НСтр("ru = 'Четверг'");
	Элементы.Чт.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.Пт.Заголовок = НСтр("ru = 'Пятница'");
	Элементы.Пт.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.Сб.Заголовок = НСтр("ru = 'Суббота'");
	Элементы.Сб.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.Вс.Заголовок = НСтр("ru = 'Воскресенье'");
	Элементы.Вс.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	// Месяц.
	Элементы.ГруппаДниМесяцаМК.Видимость = Истина;
	Элементы.ГруппаДниМесяцаМК.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	
	Элементы.Переместить(Элементы.ДекорацияДеньМесяца,Элементы.ГруппаДниМесяцаМК,Элементы.ГруппаДниМесяцаМК);
	Элементы.Переместить(Элементы.ДеньМесяца,Элементы.ГруппаДниМесяцаМК,Элементы.ГруппаДниМесяцаМК);
	Элементы.Переместить(Элементы.ДеньМесяцаЗаголовок,Элементы.ГруппаДниМесяцаМК,Элементы.ГруппаДниМесяцаМК);
	
	Элементы.Декорация1.Видимость = Ложь;
	Элементы.ГруппаЕжемесячно.ОтображатьЗаголовок = Ложь;
	
	Элементы.ГруппаМес.Заголовок = НСтр("ru = 'Месяц'");
	Элементы.ГруппаМес.ОтображатьЗаголовок = Истина;
	
	Элементы.янв.Заголовок = НСтр("ru = 'Январь'");
	Элементы.янв.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.фев.Заголовок = НСтр("ru = 'Февраль'");
	Элементы.фев.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.мар.Заголовок = НСтр("ru = 'Март'");
	Элементы.мар.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.апр.Заголовок = НСтр("ru = 'Апрель'");
	Элементы.апр.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.май.Заголовок = НСтр("ru = 'Май'");
	Элементы.май.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.июн.Заголовок = НСтр("ru = 'Июнь'");
	Элементы.июн.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.июл.Заголовок = НСтр("ru = 'Июль'");
	Элементы.июл.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.авг.Заголовок = НСтр("ru = 'Август'");
	Элементы.авг.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.сен.Заголовок = НСтр("ru = 'Сентябрь'");
	Элементы.сен.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.окт.Заголовок = НСтр("ru = 'Октябрь'");
	Элементы.окт.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.ноя.Заголовок = НСтр("ru = 'Ноябрь'");
	Элементы.ноя.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.дек.Заголовок =НСтр("ru = 'Декабрь'");
	Элементы.дек.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;

КонецПроцедуры

#КонецОбласти
