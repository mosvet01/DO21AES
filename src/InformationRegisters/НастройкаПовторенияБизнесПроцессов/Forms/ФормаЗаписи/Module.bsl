
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТипБизнесПроцесса = Параметры.ТипБизнесПроцесса;
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда 
		Если ТипБизнесПроцесса <> Неопределено Тогда 
			Запись.БизнесПроцесс = ТипБизнесПроцесса;
		КонецЕсли;	
		Запись.Автор = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;	
	
	ЗаписьРегистра = РеквизитФормыВЗначение("Запись");
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("Расписание", ЗаписьРегистра.Расписание.Получить());
	СтруктураЗаписи.Вставить("Комментарий", ЗаписьРегистра.Комментарий);
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(
		СтруктураЗаписи, УникальныйИдентификатор);
	
	Если СтруктураЗаписи.Расписание <> Неопределено Тогда
		ДатаСледующегоПовторения = ПолучитьДатуСледующегоПовторения(
			СтруктураЗаписи.Расписание, Запись.ГрафикРаботы, Запись.ДатаПоследнегоПовторения);
	КонецЕсли;
		
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		НастроитьЭлементыФормыДляМобильногоУстройства();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СтруктураЗаписи = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	ТекущийОбъект.Расписание = Новый ХранилищеЗначения(СтруктураЗаписи.Расписание);
	ТекущийОбъект.Комментарий = СтруктураЗаписи.Комментарий;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	СтруктураЗаписи = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	Если СтруктураЗаписи.Расписание = Неопределено Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указано расписание повторения'"),,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура БизнесПроцессНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТипБизнесПроцесса = Неопределено Тогда 
		
		СтандартнаяОбработка = Ложь;
		
		СписокТипов = Новый СписокЗначений;
		СписокТипов.Добавить("Поручение", НСТр("ru = 'Поручение'"));
		СписокТипов.Добавить("Исполнение", НСТр("ru = 'Исполнение'"));
		СписокТипов.Добавить("Согласование", НСТр("ru = 'Согласование'"));
		СписокТипов.Добавить("Утверждение", НСТр("ru = 'Утверждение'"));
		СписокТипов.Добавить("Ознакомление", НСТр("ru = 'Ознакомление'"));
		СписокТипов.Добавить("Рассмотрение", НСТр("ru = 'Рассмотрение'"));
		СписокТипов.Добавить("Регистрация", НСТр("ru = 'Регистрация'"));
		СписокТипов.Добавить(
			"ОбработкаВходящегоДокумента", НСТр("ru = 'Обработка входящего документа'"));
		СписокТипов.Добавить(
			"ОбработкаИсходящегоДокумента", НСТр("ru = 'Обработка исходящего документа'"));
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"БизнесПроцессНачалоВыбораПродолжение",
			ЭтотОбъект,
			Новый Структура("Элемент", Элемент));
			
		СписокТипов.ПоказатьВыборЭлемента(ОписаниеОповещения, НСТр("ru = 'Тип процесса'"), Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БизнесПроцессНачалоВыбораПродолжение(ВыбранныйЭлемент, Параметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда 
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТекущаяСтрока", Запись.БизнесПроцесс);
		
		ОткрытьФорму("БизнесПроцесс."+ВыбранныйЭлемент.Значение+".ФормаВыбора",
			ПараметрыФормы, Параметры.Элемент);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПовторениеПрекращеноПриИзменении(Элемент)
	
	Если Запись.ПовторениеЗавершено Тогда 
		ДатаСледующегоПовторения = '00010101';
	Иначе
		СтруктураЗаписи = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
		ДатаСледующегоПовторения = ПолучитьДатуСледующегоПовторения(
			СтруктураЗаписи.Расписание, Запись.ГрафикРаботы, Запись.ДатаПоследнегоПовторения);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Расписание(Команда)
	
	Если Не ЗначениеЗаполнено(Запись.БизнесПроцесс) Тогда 
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Поле ""Процесс"" не заполнено'"),,
			"Запись.БизнесПроцесс");
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"РасписаниеПродолжение",
		ЭтотОбъект);
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресВременногоХранилища", АдресВременногоХранилища);
	ПараметрыФормы.Вставить("БизнесПроцесс", Запись.БизнесПроцесс);
	ПараметрыФормы.Вставить("ПовторениеЗавершено", Запись.ПовторениеЗавершено);
	ПараметрыФормы.Вставить("ГрафикРаботы", Запись.ГрафикРаботы);
		
	ОткрытьФорму("РегистрСведений.НастройкаПовторенияБизнесПроцессов.Форма.ФормаРасписания",
		ПараметрыФормы,
		ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура РасписаниеПродолжение(Результат, Параметры) Экспорт 

	Если Результат <> КодВозвратаДиалога.ОК Тогда 
		Возврат;
	КонецЕсли;	
	Модифицированность = Истина;
	
	СтруктураЗаписи = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	Запись.ПредставлениеРасписания = ПовторениеБизнесПроцессов.ПолучитьПредставлениеРасписания(
		СтруктураЗаписи.Расписание, СтруктураЗаписи.ГрафикРаботы);
	Запись.ГрафикРаботы = СтруктураЗаписи.ГрафикРаботы;
	
	ДатаСледующегоПовторения = ПолучитьДатуСледующегоПовторения(
		СтруктураЗаписи.Расписание, Запись.ГрафикРаботы, Запись.ДатаПоследнегоПовторения);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Вычисляет дату следующего повторения процесса по расписанию
//
// Параметры:
//   Расписание - РасписаниеРегламентногоЗадания - расписание повторения процесса
//
// Возвращаемое значение:
//   Дата
//
&НаСервере
Функция ПолучитьДатуСледующегоПовторения(Расписание, ГрафикРаботы, ДатаПоследнегоПовторения)
	
	Возврат ПовторениеБизнесПроцессов.ДатаСледующегоПовторенияПроцесса(
		Расписание, ГрафикРаботы, ДатаПоследнегоПовторения);
	
КонецФункции
	
&НаСервере
Процедура НастроитьЭлементыФормыДляМобильногоУстройства()
	
	Элементы.ПовторениеПрекращено.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Элементы.ПредставлениеРасписания.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	
	Элементы.БизнесПроцесс.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	Элементы.БизнесПроцесс.МногострочныйРежим = Истина;
	
КонецПроцедуры

#КонецОбласти