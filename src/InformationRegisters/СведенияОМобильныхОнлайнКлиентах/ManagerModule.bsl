#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Удаляет порцию устаревших данных.
// 
// Возвращаемое значение:
// 	Булево - Истина, если были найдены устаревшие данные, в противном случае Ложь.
// 
Функция УдалитьПорциюУстаревшихДанных() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	СведенияОМобильныхОнлайнКлиентах.Пользователь КАК Пользователь,
		|	СведенияОМобильныхОнлайнКлиентах.ИдентификаторКлиента КАК ИдентификаторКлиента,
		|	СведенияОМобильныхОнлайнКлиентах.ДатаПоследнегоВхода КАК ДатаПоследнегоВхода
		|ИЗ
		|	РегистрСведений.СведенияОМобильныхОнлайнКлиентах КАК СведенияОМобильныхОнлайнКлиентах		
		|ГДЕ
		|	СведенияОМобильныхОнлайнКлиентах.ДатаПоследнегоВхода <> ДАТАВРЕМЯ(1,1,1)
		|	И РАЗНОСТЬДАТ(СведенияОМобильныхОнлайнКлиентах.ДатаПоследнегоВхода, &ТекущаяДата, МЕСЯЦ) > 1
		|
		|УПОРЯДОЧИТЬ ПО
		|	Пользователь,
		|	ДатаПоследнегоВхода");
			
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	Результат = Запрос.Выполнить();
	ЕстьДанныеКУдалению = Не Результат.Пустой();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.СведенияОМобильныхОнлайнКлиентах.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Удалить();
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Удаление устаревших данных'", ОбщегоНазначения.КодОсновногоЯзыка()), 
		УровеньЖурналаРегистрации.Информация,
		Метаданные.РегистрыСведений.СведенияОМобильныхОнлайнКлиентах,, 
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедура завершена успешно, обработано %1 записей'"), Выборка.Количество()));
	
	Возврат ЕстьДанныеКУдалению;
	
КонецФункции

// Устанавливает ошибку отправки уведомлений на мобильный клиент.
// Принимает параметры для определения необходимой записи в РС.
// 
// Параметры:
// Пользователь - СправочникСсылка.Пользователи.
// ИдентификаторКлиента - УникальныйИдентификатор.
// 
Процедура УстановитьОшибкуОтправкиУведомлений(Пользователь, ИдентификаторКлиента) Экспорт
	
	НачатьТранзакцию();
		
	Попытка
			
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СведенияОМобильныхОнлайнКлиентах");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();

		НаборЗаписей = РегистрыСведений.СведенияОМобильныхОнлайнКлиентах.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Пользователь.Установить(Пользователь);
		НаборЗаписей.Отбор.ИдентификаторКлиента.Установить(ИдентификаторКлиента);
		НаборЗаписей.Прочитать();
			
		Если НаборЗаписей.Количество() Тогда
			Запись = НаборЗаписей[0];
			Запись.ИдентификаторПодписчикаУстановлен = Ложь;
			НаборЗаписей.Записать();
			ЗафиксироватьТранзакцию();
		КонецЕсли;
			
	Исключение
		
		ОтменитьТранзакцию();

		ИмяСобытия = МобильныйКлиентКлиентСервер.ИмяСобытияPushУведомления();	
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,
					, , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
								
		ВызватьИсключение;
			
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
