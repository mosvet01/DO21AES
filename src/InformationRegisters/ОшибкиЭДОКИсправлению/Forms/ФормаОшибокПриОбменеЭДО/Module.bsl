
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновленоСостояниеЭДДО" Тогда
		ОбновитьСписки();
	КонецЕсли;
	
	Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		ОбновитьСписки();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСписков

&НаКлиенте
Процедура СписокВходящихВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокВходящих.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуОшибки(ТекущиеДанные.ПредметОшибки);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокИсходящихВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокИсходящих.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуОшибки(ТекущиеДанные.ПредметОшибки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормыОшибки(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьСписки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоставитьВОчередьОтправки(Команда)
	ВыделенныеСтроки = Элементы.СписокИсходящих.ВыделенныеСтроки;
	
	ВсегоВыделено = ВыделенныеСтроки.Количество();
	
	МассивДокументов = МассивВыделенныхИсходящихДокументовКИсправлению();
	
	Если ВсегоВыделено <= 0 Тогда
		ПоказатьПредупреждение(,
			НСтр("ru = 'Не выбрано ни одной строки исходящего документа.'"), ,
			НСтр("ru = 'Не выбраны строки'"));
		Возврат;
	КонецЕсли;
	
	Если МассивДокументов.Количество() <= 0 Тогда
		ПоказатьПредупреждение(,
			НСтр("ru = 'Среди выделенных строк нет документов с состоянием ""Требуется исправление"".'")
			 + Символы.ПС
			 + НСтр("ru = 'Поставить в очередь можно только такие документы.'"), ,
			НСтр("ru = 'Нет документов с нужным состоянием'"));
		Возврат;
	КонецЕсли;
	
	Если МассивДокументов.Количество() < ВсегоВыделено Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("МассивДокументов", МассивДокументов);
		
		ОбработкаОтвета = Новый ОписаниеОповещения("ПоставитьВОчередьНаОтправкуПослеОтветаНаВопрос",
				ЭтотОбъект, ДополнительныеПараметры);
		
		ТекстВопроса = СтрШаблон(
			НСтр("ru = 'Из %1 только %2 состояние ""Требуется исправление"".'")
				+ Символы.ПС
				+ НСтр("ru = 'Только %3 можно поставить в очередь отправки. Поставить в очередь только %4?'"),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 выделенного документа;;%1 выделенных документов;
							|%1 выделенных документов;%1 выделенных документов'"),
				ВсегоВыделено),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 имеет;;%1 имеют;%1 имеют;%1 имеют'"),
				МассивДокументов.Количество()),
			?(МассивДокументов.Количество() > 1, НСтр("ru = 'их'"), НСтр("ru = 'его'")),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 документ;;%1 документа;%1 документов;%1 документов'"),
				МассивДокументов.Количество()));
		
		ПоказатьВопрос(
			ОбработкаОтвета,
			ТекстВопроса,
			РежимДиалогаВопрос.ДаНет, , ,
			НСтр("ru = 'Не все документы с нужным состоянием'"));
		
		Возврат;
	Иначе
		ПоставитьОшибочныеДокументыВОчередьНаОтправку(МассивДокументов);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоставитьВОчередьНаОтправкуПослеОтветаНаВопрос(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПоставитьОшибочныеДокументыВОчередьНаОтправку(ДополнительныеПараметры.МассивДокументов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставитьОшибочныеДокументыВОчередьНаОтправку(МассивДокументов)
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ПоставитьДокументыВОчередьНаОтправкуПоЭДО(МассивДокументов);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПринудительноДокументыОтправки(Команда)
	
	ВыделенныеСтроки = Элементы.СписокИсходящих.ВыделенныеСтроки;
	
	ВсегоВыделено = ВыделенныеСтроки.Количество();
	
	МассивДокументов = МассивВыделенныхИсходящихДокументовКИсправлению();
	
	Если ВсегоВыделено <= 0 Тогда
		ПоказатьПредупреждение(,
			НСтр("ru = 'Не выбрано ни одной строки исходящего документа.'"), ,
			НСтр("ru = 'Не выбраны строки'"));
		Возврат;
	КонецЕсли;
	
	Если МассивДокументов.Количество() <= 0 Тогда
		ПоказатьПредупреждение(,
			НСтр("ru = 'Среди выделенных строк нет документов с состоянием ""Требуется исправление"".'")
			 + Символы.ПС
			 + НСтр("ru = 'Завершить обмен принудительно можно только по таким документам.'"), ,
			НСтр("ru = 'Нет документов с нужным состоянием'"));
		Возврат;
	КонецЕсли;
	
	Если МассивДокументов.Количество() < ВсегоВыделено Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("МассивДокументов", МассивДокументов);
		
		ОбработкаОтвета = Новый ОписаниеОповещения("ЗакрытьПринудительноПослеОтветаНаВопрос",
				ЭтотОбъект, ДополнительныеПараметры);
		
		ТекстВопроса = СтрШаблон(
			НСтр("ru = 'Из %1 только %2 состояние ""Требуется исправление"".'")
				+ Символы.ПС
				+ НСтр("ru = 'Только %3 можно закрыть принудительно. Завершить обмен только по %4?'"),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 выделенного документа;;%1 выделенных документов;
							|%1 выделенных документов;%1 выделенных документов'"),
				ВсегоВыделено),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 имеет;;%1 имеют;%1 имеют;%1 имеют'"),
				МассивДокументов.Количество()),
			?(МассивДокументов.Количество() > 1, НСтр("ru = 'их'"), НСтр("ru = 'его'")),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 документу;;%1 документам;%1 документам;%1 документам'"),
				МассивДокументов.Количество()));
		
		ПоказатьВопрос(
			ОбработкаОтвета,
			ТекстВопроса,
			РежимДиалогаВопрос.ДаНет, , ,
			НСтр("ru = 'Не все документы с нужным состоянием'"));
		
		Возврат;
	Иначе
		ЗакрытьПринудительноОшибочныеДокументы(МассивДокументов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПринудительноПослеОтветаНаВопрос(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗакрытьПринудительноОшибочныеДокументы(ДополнительныеПараметры.МассивДокументов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПринудительноОшибочныеДокументы(МассивДокументов)
	
	ОбработчикЗавершения =
		Новый ОписаниеОповещения("ЗакрытьПринудительноОшибочныеДокументыЗавершение", ЭтотОбъект);
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ЗакрытьДокументыПринудительно(МассивДокументов, ОбработчикЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПринудительноОшибочныеДокументыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Ошибки.Количество() > 0 Тогда
		Для Каждого Ошибка Из Результат.Ошибки Цикл
			ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставитьВОчередьПриема(Команда)
	ВыделенныеСтроки = Элементы.СписокВходящих.ВыделенныеСтроки;
	
	ВсегоВыделено = ВыделенныеСтроки.Количество();
	
	МассивДокументов = МассивВыделенныхВходящихДокументовКИсправлению();
	
	Если ВсегоВыделено <= 0 Тогда
		ПоказатьПредупреждение(,
			НСтр("ru = 'Не выбрано ни одной строки входящего документа.'"), ,
			НСтр("ru = 'Не выбраны строки'"));
		Возврат;
	КонецЕсли;
	
	Если МассивДокументов.Количество() <= 0 Тогда
		ПоказатьПредупреждение(,
			НСтр("ru = 'Среди выделенных строк нет документов с состоянием ""Требуется исправление"".'")
			 + Символы.ПС
			 + НСтр("ru = 'Поставить в очередь приема можно только такие документы.'"), ,
			НСтр("ru = 'Нет документов с нужным состоянием'"));
		Возврат;
	КонецЕсли;
	
	Если МассивДокументов.Количество() < ВсегоВыделено Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("МассивДокументов", МассивДокументов);
		
		ОбработкаОтвета = Новый ОписаниеОповещения("ПоставитьВОчередьПриемаПослеОтветаНаВопрос",
				ЭтотОбъект, ДополнительныеПараметры);
		
		ТекстВопроса = СтрШаблон(
			НСтр("ru = 'Из %1 только %2 состояние ""Требуется исправление"".'")
				+ Символы.ПС
				+ НСтр("ru = 'Только %3 можно поставить в очередь приема. Поставить в очередь только %4?'"),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 выделенного документа;;%1 выделенных документов;
							|%1 выделенных документов;%1 выделенных документов'"),
				ВсегоВыделено),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 имеет;;%1 имеют;%1 имеют;%1 имеют'"),
				МассивДокументов.Количество()),
			?(МассивДокументов.Количество() > 1, НСтр("ru = 'их'"), НСтр("ru = 'его'")),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 документ;;%1 документа;%1 документов;%1 документов'"),
				МассивДокументов.Количество()));
		
		ПоказатьВопрос(
			ОбработкаОтвета,
			ТекстВопроса,
			РежимДиалогаВопрос.ДаНет, , ,
			НСтр("ru = 'Не все документы с нужным состоянием'"));
		
		Возврат;
	Иначе
		ПоставитьВОчередьПриемаОшибочныеДокументы(МассивДокументов);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоставитьВОчередьПриемаПослеОтветаНаВопрос(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПоставитьВОчередьПриемаОшибочныеДокументы(ДополнительныеПараметры.МассивДокументов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставитьВОчередьПриемаОшибочныеДокументы(МассивДокументов)
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ПоставитьЭДВОчередьПриема(МассивДокументов);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПринудительноЭД(Команда)
	
	ВыделенныеСтроки = Элементы.СписокВходящих.ВыделенныеСтроки;
	
	ВсегоВыделено = ВыделенныеСтроки.Количество();
	
	МассивДокументов = МассивВыделенныхВходящихДокументовКИсправлению();
	
	Если ВсегоВыделено <= 0 Тогда
		ПоказатьПредупреждение(,
			НСтр("ru = 'Не выбрано ни одной строки входящего документа.'"), ,
			НСтр("ru = 'Не выбраны строки'"));
		Возврат;
	КонецЕсли;
	
	Если МассивДокументов.Количество() <= 0 Тогда
		ПоказатьПредупреждение(,
			НСтр("ru = 'Среди выделенных строк нет документов с состоянием ""Требуется исправление"".'")
			 + Символы.ПС
			 + НСтр("ru = 'Завершить обмен принудительно можно только по таким документам.'"), ,
			НСтр("ru = 'Нет документов с нужным состоянием'"));
		Возврат;
	КонецЕсли;
	
	Если МассивДокументов.Количество() < ВсегоВыделено Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("МассивДокументов", МассивДокументов);
		
		ОбработкаОтвета = Новый ОписаниеОповещения("ЗакрытьЭДПринудительноПослеОтветаНаВопрос",
				ЭтотОбъект, ДополнительныеПараметры);
		
		ТекстВопроса = СтрШаблон(
			НСтр("ru = 'Из %1 только %2 состояние ""Требуется исправление"".'")
				+ Символы.ПС
				+ НСтр("ru = 'Только %3 можно закрыть принудительно. Завершить обмен только по %4?'"),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 выделенного документа;;%1 выделенных документов;
							|%1 выделенных документов;%1 выделенных документов'"),
				ВсегоВыделено),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 имеет;;%1 имеют;%1 имеют;%1 имеют'"),
				МассивДокументов.Количество()),
			?(МассивДокументов.Количество() > 1, НСтр("ru = 'их'"), НСтр("ru = 'его'")),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 документу;;%1 документам;%1 документам;%1 документам'"),
				МассивДокументов.Количество()));
		
		ПоказатьВопрос(
			ОбработкаОтвета,
			ТекстВопроса,
			РежимДиалогаВопрос.ДаНет, , ,
			НСтр("ru = 'Не все документы с нужным состоянием'"));
		
		Возврат;
	Иначе
		ЗакрытьПринудительноОшибочныеЭД(МассивДокументов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьЭДПринудительноПослеОтветаНаВопрос(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗакрытьПринудительноОшибочныеЭД(ДополнительныеПараметры.МассивДокументов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПринудительноОшибочныеЭД(МассивДокументов)
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ЗакрытьПринудительноЭД(
			МассивДокументов,
			Новый ОписаниеОповещения("ЗакрытьПринудительноОшибочныеЭДЗавершение",ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПринудительноОшибочныеЭДЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Ошибки.Количество() > 0 Тогда
		Для Каждого Ошибка Из Результат.Ошибки Цикл
			ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьСписки()
	
	Элементы.СписокВходящих.Обновить();
	Элементы.СписокИсходящих.Обновить();
	
КонецПроцедуры

&НаКлиенте
Функция МассивВыделенныхИсходящихДокументовКИсправлению()
	
	ВыделенныеСтроки = Элементы.СписокИсходящих.ВыделенныеСтроки;
	
	МассивДокументов = Новый Массив;
	
	Для Каждого ИдентификаторСтроки Из ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.СписокИсходящих.ДанныеСтроки(ИдентификаторСтроки);
		
		Если ДанныеСтроки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДанныеСтроки.СостояниеЭДО =
				ПредопределенноеЗначение("Перечисление.СостоянияЭДОДокументооборот.ОшибкаПередачи")
			И ЗначениеЗаполнено(ДанныеСтроки.ПредметОшибки)
			И ТипЗнч(ДанныеСтроки.ПредметОшибки) = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда
			
			МассивДокументов.Добавить(ДанныеСтроки.ПредметОшибки);
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивДокументов;
	
КонецФункции

&НаКлиенте
Функция МассивВыделенныхВходящихДокументовКИсправлению()
	
	ВыделенныеСтроки = Элементы.СписокВходящих.ВыделенныеСтроки;
	
	МассивДокументов = Новый Массив;
	
	Для Каждого ИдентификаторСтроки Из ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.СписокВходящих.ДанныеСтроки(ИдентификаторСтроки);
		
		Если ДанныеСтроки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДанныеСтроки.СостояниеЭДО =
				ПредопределенноеЗначение("Перечисление.СостоянияДокументовЭДО.ТребуетсяИсправлениеОшибкиПередачи")
			И ЗначениеЗаполнено(ДанныеСтроки.ПредметОшибки)
			И ТипЗнч(ДанныеСтроки.ПредметОшибки) = Тип("ДокументСсылка.ЭлектронныйДокументВходящийЭДО") Тогда
			
			МассивДокументов.Добавить(ДанныеСтроки.ПредметОшибки);
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивДокументов;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуОшибки(ПредметОшибки)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ПредметОшибки", ПредметОшибки);
	
	ОткрытьФорму("РегистрСведений.ОшибкиЭДОКИсправлению.Форма.ФормаЗаписи",
		ПараметрыОткрытия,
		ЭтаФорма, , , ,
		Новый ОписаниеОповещения("ПослеЗакрытияФормыОшибки", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти
