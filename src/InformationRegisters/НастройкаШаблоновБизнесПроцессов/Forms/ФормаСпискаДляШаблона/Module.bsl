#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьУчетПоОрганизациям = ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям");
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Кому назначен шаблон ""%1""'"),
		Строка(Параметры.ШаблонБизнесПроцесса));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор,
		"ШаблонБизнесПроцесса",
		Параметры.ШаблонБизнесПроцесса);
	
	Список.УстановитьОграниченияИспользованияВПорядке(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("КомуНазначенПредставление"));
	
	Список.УстановитьОграниченияИспользованияВГруппировке(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("КомуНазначенПредставление"));
	
	Список.УстановитьОграниченияИспользованияВОтборе(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("КомуНазначенПредставление"));
		
	УстановитьУсловноеОформление();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ТекущийШаблонБизнесПроцесса = Элемент.ТекущиеДанные.ШаблонБизнесПроцесса; 
		ТекущийОбъектКомуНазначен = Элемент.ТекущиеДанные.КомуНазначен; 
		Если ИспользоватьУчетПоОрганизациям Тогда
			ТекущаяОрганизация = Элемент.ТекущиеДанные.Организация;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПослеУдаления(Элемент)
	
	УдалитьПодпискиНаБизнесСобытия(
		ТекущийШаблонБизнесПроцесса, 
		ТекущийОбъектКомуНазначен, 
		ТекущаяОрганизация);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	ИОМСтрок = Новый Массив;
	Для Каждого СтрокаСписка Из Строки Цикл
		Если ТипЗнч(СтрокаСписка.Значение.Данные.КомуНазначен) = 
			Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных") Тогда
			
			ИОМСтрок.Добавить(СтрокаСписка.Значение.Данные.КомуНазначен);
		КонецЕсли;
	КонецЦикла;
	
	ИОМСтрок = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ИОМСтрок);
	
	СинонымиИОМ =
		ОбщегоНазначенияДокументооборот.ЗначенияРеквизитовОбъектовВПривилегированномРежиме(
		ИОМСтрок, "Синоним");
	
	Для Каждого СтрокаСписка Из Строки Цикл
		
		Если ТипЗнч(СтрокаСписка.Значение.Данные.КомуНазначен) = 
			Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных") Тогда
			
			СтрокаСписка.Значение.Данные.КомуНазначенПредставление = 
				СинонымиИОМ[СтрокаСписка.Значение.Данные.КомуНазначен].Синоним;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаСписка.Значение.Данные.КомуНазначенПредставление) Тогда
			СтрокаСписка.Значение.Данные.КомуНазначенПредставление = 
				Строка(СтрокаСписка.Значение.Данные.КомуНазначен);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УдалитьПодпискиНаБизнесСобытия(ШаблонБизнесПроцесса, КомуНазначен, Организация)
	
	МассивВидовБизнесСобытий = 
		БизнесСобытияВызовСервера.СобытияПодходящиеДляАвтоматическогоЗапускаПроцессаПоИсточнику(КомуНазначен);
	Для Каждого ВидСобытия Из МассивВидовБизнесСобытий Цикл
		
		БизнесСобытияВызовСервера.УдалитьПравилоАвтоматическогоЗапускаБизнесПроцессов(
			ВидСобытия, ШаблонБизнесПроцесса, КомуНазначен, Организация);
		
	КонецЦикла;	
		
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Организация.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Организация");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", РедакцииКонфигурацииКлиентСервер.ДляВсехОрганизаций());

КонецПроцедуры

#КонецОбласти