#Область ПрограммныйИнтерфейс

// Возвращает значение общего реквизита из регистра.
//
// Параметры:
//  Документ - ссылка на документ, для которого возвращается реквизит.
//  Реквизит - Строка - имя реквизита.
//
// Возвращаемое значение:
//  Произвольный - значение реквизита.
//
Функция ПолучитьОбщийРеквизитДокумента(Документ, Реквизит) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = РегистрыСведений.ОбщиеРеквизитыДокументов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Документ = Документ;
	МенеджерЗаписи.Прочитать();
	
	Возврат МенеджерЗаписи[Реквизит];
	
КонецФункции

// Записывает значение общего реквизита в регистр.
//
// Параметры:
//  Документ - ссылка на документ, для которого записывается реквизит.
//  Реквизит - Строка - имя реквизита.
//  Значение - Произвольный - значение реквизита.
//
Процедура ЗаписатьОбщийРеквизитДокумента(Документ, Реквизит, Значение) Экспорт
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Набор = РегистрыСведений.ОбщиеРеквизитыДокументов.СоздатьНаборЗаписей();
	Набор.Отбор.Документ.Установить(Документ);
	Набор.Прочитать();
	
	Если Набор.Количество() = 0 Тогда
		Запись = Набор.Добавить();
		Запись.Документ = Документ;
	ИначеЕсли Набор[0][Реквизит] = Значение Тогда
		Возврат;
	КонецЕсли;
	
	Набор[0][Реквизит] = Значение;
	СписокРеквизитов = Новый Массив;
	СписокРеквизитов.Добавить(Реквизит);
	Набор.ДополнительныеСвойства.Вставить("ИзмененоЗначение", СписокРеквизитов);
	Набор.Записать();
	
	Делопроизводство.ЗаписатьДанныеДокумента(Документ, Реквизит, Значение);
	
КонецПроцедуры

// Записывает значения общих реквизитов документа в регистр.
//
// Параметры:
//   Документ - СправочникОбъект - документ, чьи реквизиты записываются.
//
Процедура ЗаписатьОбщиеРеквизитыДокумента(Документ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КонтрагентыДляСписков = "";
	Если ТипЗнч(Документ.Ссылка) = Тип("СправочникСсылка.ИсходящиеДокументы") Тогда
		КонтрагентыДляСписков = Делопроизводство.ПолучитьКонтрагентовДляСписков(
			Документ.Получатели.Выгрузить(), "Получатель");
	ИначеЕсли ТипЗнч(Документ.Ссылка) = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда
		КонтрагентыДляСписков = Делопроизводство.ПолучитьКонтрагентовДляСписков(
			Документ.Контрагенты.Выгрузить());
	КонецЕсли;
	
	РегистрационныйНомерИДата = "";
	Если ЗначениеЗаполнено(Документ.РегистрационныйНомер)
		И ЗначениеЗаполнено(Документ.ДатаРегистрации) Тогда
		РегистрационныйНомерИДата =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 от %2'"),
			СокрЛП(Документ.РегистрационныйНомер),
			Формат(Документ.ДатаРегистрации, "ДЛФ=D"));
	КонецЕсли;
	
	ИсходящийНомерИДата	= "";
	Если ТипЗнч(Документ.Ссылка) = Тип("СправочникСсылка.ВходящиеДокументы")
		И ЗначениеЗаполнено(Документ.ИсходящийНомер)
		И ЗначениеЗаполнено(Документ.ИсходящаяДата) Тогда
		ИсходящийНомерИДата =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 от %2'"),
			СокрЛП(Документ.ИсходящийНомер),
			Формат(Документ.ИсходящаяДата, "ДЛФ=D"));
	КонецЕсли;
	
	ДатаСортировки = '00010101';
	Если ЗначениеЗаполнено(Документ.ДатаРегистрации) Тогда 
		ДатаСортировки = Документ.ДатаРегистрации;
	Иначе
		ДатаСортировки = Документ.ДатаСоздания;
	КонецЕсли;
	
	// Запись в регистр ОбщиеРеквизитыДокументов
	НаборЗаписей = РегистрыСведений.ОбщиеРеквизитыДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Документ.Ссылка);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() > 0 Тогда
		ЗаписьРегистра = НаборЗаписей[0];
	Иначе
		ЗаписьРегистра = НаборЗаписей.Добавить();
	КонецЕсли;
	
	ЗаписьРегистра.Документ					= Документ.Ссылка;
	ЗаписьРегистра.РегистрационныйНомер		= Документ.РегистрационныйНомер;
	ЗаписьРегистра.ДатаРегистрации			= Документ.ДатаРегистрации;
	ЗаписьРегистра.РегистрационныйНомерИДата= РегистрационныйНомерИДата;
	ЗаписьРегистра.ИсходящийНомерИДата		= ИсходящийНомерИДата;
	ЗаписьРегистра.Сумма					= Документ.Сумма;
	ЗаписьРегистра.Валюта					= Документ.Валюта;
	ЗаписьРегистра.СрокИсполнения			= Документ.СрокИсполнения;
	ЗаписьРегистра.Заголовок				= Документ.Заголовок;
	ЗаписьРегистра.КонтрагентыДляСписков	= КонтрагентыДляСписков;
	ЗаписьРегистра.ДатаСортировки			= ДатаСортировки;
	
	СписокРеквизитов = Новый Массив;
	СписокРеквизитов.Добавить("РегистрационныйНомер");
	СписокРеквизитов.Добавить("ДатаРегистрации");
	СписокРеквизитов.Добавить("РегистрационныйНомерИДата");
	СписокРеквизитов.Добавить("ИсходящийНомерИДата");
	СписокРеквизитов.Добавить("Сумма");
	СписокРеквизитов.Добавить("Валюта");
	СписокРеквизитов.Добавить("СрокИсполнения");
	СписокРеквизитов.Добавить("Заголовок");
	СписокРеквизитов.Добавить("КонтрагентыДляСписков");
	СписокРеквизитов.Добавить("ДатаСортировки");
	
	НаборЗаписей.ДополнительныеСвойства.Вставить("ИзмененоЗначение", СписокРеквизитов);
	НаборЗаписей.Записать();
	
	// Запись в регистры ДанныеДокументов
	Если ТипЗнч(Документ.Ссылка) = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда
		ИмяРегистра = "ДанныеВнутреннихДокументов";
	ИначеЕсли ТипЗнч(Документ.Ссылка) = Тип("СправочникСсылка.ВходящиеДокументы") Тогда
		ИмяРегистра = "ДанныеВходящихДокументов";
	ИначеЕсли ТипЗнч(Документ.Ссылка) = Тип("СправочникСсылка.ИсходящиеДокументы") Тогда
		ИмяРегистра = "ДанныеИсходящихДокументов";
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Документ.Ссылка);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() > 0 Тогда
		ЗаписьРегистра = НаборЗаписей[0];
	Иначе
		ЗаписьРегистра = НаборЗаписей.Добавить();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЗаписьРегистра, Документ);
	ЗаписьРегистра.Документ = Документ.Ссылка;
	ЗаписьРегистра.ДатаСортировки = ДатаСортировки;
	ЗаписьРегистра.РегистрационныйНомерИДата = РегистрационныйНомерИДата;
	ЗаписьРегистра.КонтрагентыДляСписков = КонтрагентыДляСписков;
	Если ТипЗнч(Документ.Ссылка) = Тип("СправочникСсылка.ВходящиеДокументы") Тогда
		ЗаписьРегистра.ИсходящийНомерИДата = ИсходящийНомерИДата;
	КонецЕсли;
	
	Если ТипЗнч(Документ.Ссылка) = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда
		Для Н = 1 По 2 Цикл
			Если Документ.Стороны.Количество() >= Н Тогда
				ЗаписьРегистра["Сторона" + Н] = Документ.Стороны[Н - 1].Сторона;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Записывает отметку о получении оригинала документа в регистр.
//
// Параметры:
//  Документ - ссылка на документ, для которого записывается реквизит.
//  Значение - Булево - значение реквизита.
//
Процедура ЗаписатьОтметкуОПолученииОригиналаДокумента(Документ, Значение) Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = РегистрыСведений.ОбщиеРеквизитыДокументов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Документ = Документ;
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.Выбран() И МенеджерЗаписи.ОригиналПолучен = Значение Тогда 
		Возврат;
	КонецЕсли;
	
	МенеджерЗаписи.Документ = Документ;
	МенеджерЗаписи.ОригиналПолучен = Значение;
	Если Значение = Истина Тогда 
		МенеджерЗаписи.ОригиналПолучил = ПользователиКлиентСервер.ТекущийПользователь();
		МенеджерЗаписи.ДатаПолученияОригинала = ТекущаяДатаСеанса();
	Иначе 
		МенеджерЗаписи.ОригиналПолучил = Справочники.Пользователи.ПустаяСсылка();
		МенеджерЗаписи.ДатаПолученияОригинала = Неопределено;
	КонецЕсли;
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

#КонецОбласти