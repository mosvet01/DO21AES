#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записывает набор записей в регистр сведений с отбором по объекту
//
Процедура ЗаписатьНаборПоОбъекту(Объект, ТаблицаИсточник, ОбновитьПраваДоступа) Экспорт
	
	Если Не ЗначениеЗаполнено(Объект) Тогда
		Возврат;
	КонецЕсли;
	
	Набор = РегистрыСведений.РабочиеГруппы.СоздатьНаборЗаписей();
	Набор.Отбор.Объект.Установить(Объект);
	
	Для каждого ИсточникСтрока Из ТаблицаИсточник Цикл
		
		Если Не ЗначениеЗаполнено(ИсточникСтрока.Участник) Тогда
			Продолжить;
		КонецЕсли;
		
		Запись = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ИсточникСтрока);
		ЗаполнитьУстаревшиеИзмерения(Запись);
		Запись.Объект = Объект;
		
	КонецЦикла;
	
	Набор.Записать(Истина);
	
	// Обновление прав доступа.
	Если ОбновитьПраваДоступа Тогда
		ТипыОбъектовВходящихВМеханизмПрав =
			ДокументооборотПраваДоступаПовтИсп.ТипыСсылокИспользующихДоступПоДескрипторам();
		Если ТипыОбъектовВходящихВМеханизмПрав.Найти(ТипЗнч(Объект)) <> Неопределено Тогда
			ДокументооборотПраваДоступа.ОпределитьДескрипторыОбъекта(Объект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает таблицу участников рабочей группы по объекту.
//
Функция ПолучитьУчастниковПоОбъекту(Объект) Экспорт
	
	Набор = РегистрыСведений.РабочиеГруппы.СоздатьНаборЗаписей();
	
	ТаблицаУчастников = Набор.ВыгрузитьКолонки();
	
	ТаблицаУчастников.Колонки.Удалить("УдалитьУчастник");
	ТаблицаУчастников.Колонки.Удалить("УдалитьОсновнойОбъектАдресации");
	ТаблицаУчастников.Колонки.Удалить("УдалитьДополнительныйОбъектАдресации");
	
	ТаблицаУчастников.Колонки.Добавить("Недействителен", Новый ОписаниеТипов("Булево"));
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РабочиеГруппы.Объект КАК Объект,
		|	РабочиеГруппы.Участник КАК Участник,
		|	РабочиеГруппы.Участник.ПометкаУдаления КАК ПометкаУдаления,
		|	ВЫБОР
		|		КОГДА РабочиеГруппы.Участник ССЫЛКА Справочник.Пользователи
		|			ТОГДА РабочиеГруппы.Участник.Недействителен
		|		КОГДА РабочиеГруппы.Участник ССЫЛКА Справочник.РабочиеГруппы
		|			ТОГДА РабочиеГруппы.Участник.Недействительна
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК Недействителен,
		|	РабочиеГруппы.Изменение КАК Изменение
		|ИЗ
		|	РегистрСведений.РабочиеГруппы КАК РабочиеГруппы
		|ГДЕ
		|	Объект = &Объект");
		
	Запрос.УстановитьПараметр("Объект", Объект);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаУчастников.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат ТаблицаУчастников;
	
КонецФункции

// Возвращает пустую таблицу участников рабочей группы.
//
Функция ПолучитьПустуюТаблицуУчастников() Экспорт
	
	Возврат РегистрыСведений.РабочиеГруппы.СоздатьНаборЗаписей().ВыгрузитьКолонки(
		"Участник, Изменение");
	
КонецФункции

// Заполняет устаревшие измерения записи регистра.
//
Процедура ЗаполнитьУстаревшиеИзмерения(Запись) Экспорт
	
	Если ТипЗнч(Запись.Участник) = Тип("СправочникСсылка.ПолныеРоли") Тогда
		
		РеквизитыРоли = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Запись.Участник,
			"Владелец, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации");
		Запись.УдалитьУчастник = РеквизитыРоли.Владелец;
		Запись.УдалитьОсновнойОбъектАдресации = РеквизитыРоли.ОсновнойОбъектАдресации;
		Запись.УдалитьДополнительныйОбъектАдресации = РеквизитыРоли.ДополнительныйОбъектАдресации;
		
	Иначе
		
		Запись.УдалитьУчастник = Запись.Участник;
		Запись.УдалитьОсновнойОбъектАдресации = Неопределено;
		Запись.УдалитьДополнительныйОбъектАдресации = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
