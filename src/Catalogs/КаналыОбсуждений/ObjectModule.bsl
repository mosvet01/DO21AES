
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

Перем ЭтоНовый;
Перем ПредыдущиеЗначенияРеквизитов;

#КонецОбласти
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Создал = ТекущийПользователь;
	СтрокаУчастника = Участники.Добавить();
	СтрокаУчастника.Участник = ТекущийПользователь;
	СтрокаУчастника.Роль = Перечисления.РолиУчастниковКаналовОбсуждений.Администратор;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоНовый = ЭтоНовый();
	ПредыдущиеЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ПометкаУдаления, Наименование, Участники");
	
	Если ЭтоНовый Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		// Создание пользователя.
		ОписаниеПользователяИБ = Пользователи.НовоеОписаниеПользователяИБ();
		УстановитьСсылкуНового(Справочники.КаналыОбсуждений.ПолучитьСсылку());
		ОписаниеПользователяИБ.Имя = СтрШаблон(
			"КаналОбсуждений_%1", ПолучитьСсылкуНового().УникальныйИдентификатор());
		ОписаниеПользователяИБ.ПолноеИмя = Наименование;
		ОписаниеПользователяИБ.АутентификацияСтандартная = Истина;
		ОписаниеПользователяИБ.ПоказыватьВСпискеВыбора = Ложь;
		ОписаниеПользователяИБ.Вставить("Действие", "Записать");
		ОписаниеПользователяИБ.Вставить("ВходВПрограммуРазрешен", Истина);
		ОписаниеПользователяИБ.ЗапрещеноИзменятьПароль = Истина;
		ОписаниеПользователяИБ.Пароль = Пользователи.СоздатьПароль(8, Истина, "ДляПользователей");;
		ОписаниеПользователяИБ.Роли = Новый Массив;
		ОписаниеПользователяИБ.Роли.Добавить(Метаданные.Роли.ЧатБот.Имя);
		
		НовыйПользователь = Справочники.Пользователи.СоздатьЭлемент();
		НовыйПользователь.Наименование = ОписаниеПользователяИБ.ПолноеИмя;
		НовыйПользователь.Служебный = Истина;
		НовыйПользователь.ДополнительныеСвойства.Вставить(
			"ОписаниеПользователяИБ", ОписаниеПользователяИБ);
		НовыйПользователь.Записать();
		
		ПользовательДляСВ = НовыйПользователь.Ссылка;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Обновление свойств пользователя.
	Если Не ЭтоНовый Тогда
		Если ПометкаУдаления <> ПредыдущиеЗначенияРеквизитов.ПометкаУдаления
			Или Наименование <> ПредыдущиеЗначенияРеквизитов.Наименование Тогда
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Справочник.Пользователи");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ПользовательДляСВ);
			Блокировка.Заблокировать();
			ПользовательДляСВОбъект = ПользовательДляСВ.ПолучитьОбъект();
			ПользовательДляСВОбъект.Наименование = Наименование;
			ПользовательДляСВОбъект.Недействителен = ПометкаУдаления;
			ПользовательДляСВОбъект.ПометкаУдаления = ПометкаУдаления;
			Если Наименование <> ПредыдущиеЗначенияРеквизитов.Наименование Тогда
				ОписаниеПользователяИБ = Новый Структура;
				ОписаниеПользователяИБ.Вставить("Действие", "Записать");
				ОписаниеПользователяИБ.Вставить("ПолноеИмя", Наименование);
				ПользовательДляСВОбъект.ДополнительныеСвойства.Вставить(
					"ОписаниеПользователяИБ", ОписаниеПользователяИБ);
			КонецЕсли;
			ПользовательДляСВОбъект.Записать();
		КонецЕсли;
		ОбсужденияДокументооборот.ОбновитьПользователя(ПользовательДляСВ); // Могло измениться фото.
	КонецЕсли;
	
	// Отправка приветственных сообщений для новых авторов и администраторов.
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СтарыеУчастники.Участник КАК Участник,
		|	СтарыеУчастники.Роль КАК Роль
		|ПОМЕСТИТЬ СтарыеУчастники
		|ИЗ
		|	&СтарыеУчастники КАК СтарыеУчастники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПользователиВКонтейнерах.Пользователь КАК Пользователь
		|ПОМЕСТИТЬ ПользователиИсключения
		|ИЗ
		|	СтарыеУчастники КАК СтарыеУчастники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|		ПО СтарыеУчастники.Участник = ПользователиВКонтейнерах.Контейнер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВложенныйЗапрос.ПриоритетРоли = 1
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РолиУчастниковКаналовОбсуждений.Автор)
		|		КОГДА ВложенныйЗапрос.ПриоритетРоли = 2
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РолиУчастниковКаналовОбсуждений.Администратор)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РолиУчастниковКаналовОбсуждений.Читатель)
		|	КОНЕЦ КАК Роль,
		|	ВложенныйЗапрос.Пользователь КАК Пользователь
		|ИЗ
		|	(ВЫБРАТЬ
		|		МАКСИМУМ(ВЫБОР
		|				КОГДА КаналыОбсужденийУчастники.Роль = ЗНАЧЕНИЕ(Перечисление.РолиУчастниковКаналовОбсуждений.Автор)
		|					ТОГДА 1
		|				КОГДА КаналыОбсужденийУчастники.Роль = ЗНАЧЕНИЕ(Перечисление.РолиУчастниковКаналовОбсуждений.Администратор)
		|					ТОГДА 2
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ПриоритетРоли,
		|		ПользователиВКонтейнерах.Пользователь КАК Пользователь
		|	ИЗ
		|		Справочник.КаналыОбсуждений.Участники КАК КаналыОбсужденийУчастники
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|			ПО КаналыОбсужденийУчастники.Участник = ПользователиВКонтейнерах.Контейнер
		|			ЛЕВОЕ СОЕДИНЕНИЕ ПользователиИсключения КАК ПользователиИсключения
		|			ПО (ПользователиВКонтейнерах.Пользователь = ПользователиИсключения.Пользователь)
		|	ГДЕ
		|		КаналыОбсужденийУчастники.Ссылка = &Ссылка
		|		И ПользователиИсключения.Пользователь ЕСТЬ NULL
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПользователиВКонтейнерах.Пользователь) КАК ВложенныйЗапрос");
	
	СтарыеУчастники = Участники.ВыгрузитьКолонки();
	Если ПредыдущиеЗначенияРеквизитов.Участники <> Неопределено Тогда
		СтарыеУчастники = ПредыдущиеЗначенияРеквизитов.Участники.Выгрузить();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("СтарыеУчастники", СтарыеУчастники);
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Оповещения для добавления в кэш.
	Событие = "ДобавлениеВКанал";
	Параметры = Новый Структура("ИдентификаторСВКанала",
		ОбсужденияДокументооборот.ИдентификаторПользователяСВ(ПользовательДляСВ));
	Пока Выборка.Следующий() Цикл
		ОбсужденияДокументооборот.ОтправитьСлужебноеОповещение(Событие, Выборка.Пользователь, Параметры);
	КонецЦикла;
	
	// Приветственные сообщения.
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		КаналыОбсуждений.ОтправитьПриветственноеСообщение(Ссылка, Выборка.Пользователь, Выборка.Роль);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
