#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("Документ", Документ) Тогда
		ВызватьИсключение НСтр("ru = 'Отсутствует обязательный параметр открытия формы <Документ>.'");
	КонецЕсли;
	
	Если ТипЗнч(Параметры.Документ) <> Тип("СправочникСсылка.ВнутренниеДокументы") Тогда
		ВызватьИсключение НСтр("ru = 'Передан некорректный параметр открытия формы <Документ>.'");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Документ) Тогда 
		Элементы.Документ.Видимость = Ложь;
		Элементы.ГруппаИстория.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаполнитьРеквизиты") И Параметры.ЗаполнитьРеквизиты = Истина Тогда
		Если Не Справочники.ВнутренниеДокументы.ИмеетСрокДействия(Параметры.Документ) Тогда
			ВызватьИсключение НСтр("ru = 'По документу не ведется учет сроков действия.'");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ПолучитьРеквизитыСрокаДействия(Документ));
	КонецЕсли;
	
	Параметры.Свойство("ДатаНачалаДействия", ДатаНачалаДействия);
	Параметры.Свойство("ДатаОкончанияДействия", ДатаОкончанияДействия);
	Параметры.Свойство("Бессрочный", Бессрочный);
	Параметры.Свойство("ПорядокПродления", ПорядокПродления);
	Параметры.Свойство("Пользователь", Пользователь);
	Параметры.Свойство("ДокументИсточникИзменения", ДокументИсточникИзменения);
	Параметры.Свойство("Комментарий", Комментарий);
	Параметры.Свойство("ИзменятьСрокДействия", ИзменятьСрокДействия);
	Параметры.Свойство("РежимПереносСрока", РежимПереносСрока);
	
	ДокументЗарегистрирован = ЗначениеЗаполнено(
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Документ,
			"РегистрационныйНомер"));
	
	ОбновитьСвойстваЭлементовФормы();
	
	Если Параметры.Свойство("НеИзменятьСрокДействия") И Параметры.НеИзменятьСрокДействия Тогда 
		ТолькоПросмотр = Истина;
		Элементы.Закрыть.Видимость = Истина;
		Элементы.Закрыть.КнопкаПоУмолчанию = Истина;
		Элементы.ФормаПрименить.Видимость = Ложь;
		Элементы.ФормаОтмена.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура БессрочныйПриИзменении(Элемент)
	
	Если Бессрочный Тогда
		ДатаОкончанияДействия = '00010101';
		ПорядокПродления = Неопределено;
	КонецЕсли;
	
	ОбновитьСвойстваЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияНажатие(Элемент)
	
	Если Документ.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Новый Структура("Документ", Документ));
	ОткрытьФорму("РегистрСведений.ИсторияСроковДействияДокументов.ФормаСписка", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументИсточникИзмененияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("ВходящиеДокументы", НСтр("ru = 'Входящий документ'"));
	СписокВыбора.Добавить("ИсходящиеДокументы", НСтр("ru = 'Исходящий документ'"));
	СписокВыбора.Добавить("ВнутренниеДокументы", НСтр("ru = 'Внутренний документ'"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДокументИсточникИзмененияПослеВыбора", ЭтотОбъект);
	ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбора, Элемент);
	
КонецПроцедуры	

&НаКлиенте
Процедура ДокументИсточникИзмененияПослеВыбора(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт 
		
	Если ВыбранныйЭлемент = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяСтрока", ДокументИсточникИзменения);
	
	ОткрытьФорму("Справочник." + ВыбранныйЭлемент.Значение + ".ФормаВыбора", 
		ПараметрыФормы, Элементы.ДокументИсточникИзменения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьСрокДействия(Команда)
	
	Если ИзменятьСрокДействия И Не ЭтаФорма.Модифицированность
		И Не РежимПереносСрока Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Данные не были изменены'"));
		Возврат;
	КонецЕсли;
	
	Если Не СрокВведенНеКорректно() Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьСрокДействияДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьРеквизитыСрокаДействия(ДокументСсылка)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВнутренниеДокументы.ДатаНачалаДействия КАК ДатаНачалаДействия,
		|	ВнутренниеДокументы.ДатаОкончанияДействия КАК ДатаОкончанияДействия,
		|	ВнутренниеДокументы.Бессрочный КАК Бессрочный,
		|	ВнутренниеДокументы.ПорядокПродления КАК ПорядокПродления
		|ИЗ
		|	Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
		|ГДЕ
		|	ВнутренниеДокументы.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Возврат Запрос.Выполнить().Выгрузить()[0];
		
КонецФункции

&НаКлиенте
Функция СрокВведенНеКорректно()
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	
	Если ЗначениеЗаполнено(ДатаНачалаДействия)
		И ЗначениеЗаполнено(ДатаОкончанияДействия)
		И ДатаНачалаДействия > ДатаОкончанияДействия Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Дата окончания действия договора меньше даты начала действия.'"),,
			"ДатаОкончанияДействия",,
			Отказ);
		Возврат Не Отказ;
	КонецЕсли;
	
	Если ДокументЗарегистрирован Тогда
		ПроверитьЗначениеЗаполнено(
			ДатаНачалаДействия,
			Отказ,
			"ДатаНачалаДействия",
			НСтр("ru = 'Поле ""Дата начала"" не заполнено'"));
	
		Если Не Бессрочный Тогда
			ПроверитьЗначениеЗаполнено(
				ДатаОкончанияДействия,
				Отказ,
				"ДатаОкончанияДействия",
				НСтр("ru = 'Поле ""Дата окончания"" не заполнено'"));
				
			ПроверитьЗначениеЗаполнено(
				ПорядокПродления,
				Отказ,
				"ПорядокПродления",
				НСтр("ru = 'Поле ""Порядок продления"" не заполнено'"));
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(ДатаНачалаДействия) И Не Бессрочный Тогда 
		
		ТекстВопроса = "";
		Если Не ЗначениеЗаполнено(ДатаОкончанияДействия) И Не ЗначениеЗаполнено(ПорядокПродления) Тогда 
			ТекстВопроса = НСтр("ru = '""Дата окончания"" и ""Порядок продления"" не заполнены. 
				|Продолжить?'");
		ИначеЕсли Не ЗначениеЗаполнено(ДатаОкончанияДействия) Тогда 
			ТекстВопроса = НСтр("ru = '""Дата окончания"" не заполнена.
				|Продолжить?'");
		ИначеЕсли Не ЗначениеЗаполнено(ПорядокПродления) Тогда 
			ТекстВопроса = НСтр("ru = '""Порядок продления"" не заполнен.
				|Продолжить?'");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекстВопроса) Тогда 
			ОписаниеОповещения = Новый ОписаниеОповещения(
				"СрокВведенНеКорректноПродолжение",
				ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
			
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

&НаКлиенте
Процедура СрокВведенНеКорректноПродолжение(Результат, Параметры) Экспорт 
	
	Если Результат <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;
	
	ИзменитьСрокДействияДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСрокДействияДокумента()
	
	Результат = Новый Структура;
	Результат.Вставить("Документ", Документ);
	Результат.Вставить("ДатаНачалаДействия", ДатаНачалаДействия);
	Результат.Вставить("ДатаОкончанияДействия", ДатаОкончанияДействия);
	Результат.Вставить("Бессрочный", Бессрочный);
	Результат.Вставить("ПорядокПродления", ПорядокПродления);
	Результат.Вставить("ДокументИсточникИзменения", ДокументИсточникИзменения);
	Результат.Вставить("Комментарий", Комментарий);
	
	Если ИзменятьСрокДействия Тогда
		ИзменитьСрокДействияДокументаНаСервере(Результат);
		ОповеститьОбИзменении(Документ);
		Закрыть();
	Иначе
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗначениеЗаполнено(Значение, Отказ, Знач Поле = Неопределено, Знач ТекстСообщения = Неопределено)
	
	Если ЗначениеЗаполнено(Значение) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекстСообщения = Неопределено Тогда
		Если ЗначениеЗаполнено(Поле) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Поле ""%1"" не заполнено'"),
				Поле);
		Иначе
			ТекстСообщения = НСтр("ru = 'Найдено незаполненное поле'");
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстСообщения,,
		Поле,,
		Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьСрокДействияДокументаНаСервере(ПараметрыЗаписи)
	
	ДокументОбъект = Документ.ПолучитьОбъект();
	ДокументОбъект.ИзменитьСрокДействия(ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваЭлементовФормы()
	
	Если Бессрочный Тогда
		Элементы.ДатаОкончанияДействия.Доступность = Ложь;
		Элементы.ДатаОкончанияДействия.АвтоОтметкаНезаполненного = Ложь;
		Элементы.ПорядокПродления.Доступность = Ложь;
		Элементы.ПорядокПродления.АвтоОтметкаНезаполненного = Ложь;
	Иначе
		Элементы.ДатаОкончанияДействия.Доступность = Истина;
		Элементы.ДатаОкончанияДействия.АвтоОтметкаНезаполненного = ДокументЗарегистрирован;
		Элементы.ПорядокПродления.Доступность = Истина;
		Элементы.ПорядокПродления.АвтоОтметкаНезаполненного = ДокументЗарегистрирован;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
