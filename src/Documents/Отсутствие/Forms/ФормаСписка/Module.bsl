#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УчитыватьИерархиюПодразделений = Истина;
	
	// Отбора по дате отсутствия.
	УстановитьОтборДатаОтсутствия();
	
	// Отображать удаленные - при первом открытии формы нужно не отображать удаленные.
	УстановитьОтборПоказыватьУдаленные();
	
	// Отбор по подразделению
	УстановитьОтборПодразделение();
	
	УстановитьОтборПричина();
	
	УстановитьОтборУдаленнаяРабота();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаПечать;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Элементы.Список.РежимВыбора = Параметры.РежимВыбора;
	
	ЭтоМобильныйКлиент = ПараметрыСеанса.ЭтоМобильныйКлиент;
	МК_НастроитьЭлементыФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	// Отбора по дате отсутствия.
	УстановитьОтборДатаОтсутствия();
	
	// Отображать удаленные
	УстановитьОтборПоказыватьУдаленные();
	
	// Отбор по подразделению
	УстановитьОтборПодразделение();
	
	УстановитьОтборПричина();
	
	УстановитьОтборУдаленнаяРабота();
	
	Если ЭтоМобильныйКлиент Тогда
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.МК_ВариантОтбора, ВариантОтбора, "ЗаДень");
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.МК_ОтборПодразделение, ОтборПодразделение);
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.МК_ОтборПричина, ОтборПричина);
	Иначе	
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.ВариантОтбора, ВариантОтбора, "ЗаДень");
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.ОтборПодразделение, ОтборПодразделение);
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.ОтборПричина, ОтборПричина);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЭтоМобильныйКлиент Тогда
		СписокПриАктивизацииСтроки(Элементы.Список);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборДатаОтсутствияПриИзменении(Элемент)
	
	УстановитьОтборДатаОтсутствия();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолноеОписаниеОтсутствияПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВстроеннаяПочтаКлиент.ОткрытьСсылку(ДанныеСобытия.Href, ДанныеСобытия.Element, , Элемент.Документ);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтбораПриИзменении(Элемент)
	
	УстановитьОтборДатаОтсутствия();
	
	Если ЭтоМобильныйКлиент Тогда
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.МК_ВариантОтбора,
			ВариантОтбора,
			"ЗаДень");
	Иначе
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.ВариантОтбора,
			ВариантОтбора,
			"ЗаДень");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборУдаленнаяРаботаПриИзменении(Элемент)
	
	УстановитьОтборУдаленнаяРабота();
	
	Если ЭтоМобильныйКлиент Тогда
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.МК_ОтборУдаленнаяРабота,
			ОтборУдаленнаяРабота,
			"Все");
	Иначе
			
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.ОтборУдаленнаяРабота,
			ОтборУдаленнаяРабота,
			"Все");
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтборПричинаПриИзменении(Элемент)
	
	УстановитьОтборПричина();
	
	Если ЭтоМобильныйКлиент Тогда
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.МК_ОтборПричина,
			ОтборПричина);
	Иначе
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.ОтборПричина,
			ОтборПричина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	
	УстановитьОтборПодразделение();
	
	Если ЭтоМобильныйКлиент Тогда
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.МК_ОтборПодразделение,
			ОтборПодразделение);
	Иначе
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.ОтборПодразделение,
				ОтборПодразделение);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	ПриИзмененииПараметровЭкранаНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		ТекущееОтсутствие = Неопределено;
	ИначеЕсли Элемент.ТекущиеДанные.Ссылка <> ТекущееОтсутствие Тогда
		ТекущееОтсутствие = Элемент.ТекущиеДанные.Ссылка;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ОбновитьОтсутствие", 0.2, Истина);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	ОтсутствияКлиент.СоздатьОтсутствие(ОтборДатаОтсутствия);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Для Каждого КлючИЗначение Из Строки Цикл
		
		ДанныеСтроки = КлючИЗначение.Значение.Данные;
		
		// Период строкой
		Если ДанныеСтроки.Свойство("ПериодСтрокой") Тогда
			ДанныеСтроки.ПериодСтрокой = Отсутствия.МестныйПериодСтрокой(
				ДанныеСтроки.ДатаНачала,
				ДанныеСтроки.ДатаОкончания,
				ДанныеСтроки.ВесьДень);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаЗапросаОбновления(Элемент)
	
	Элементы.Список.Обновить();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УчитыватьИерархиюПодразделений(Команда)
	
	УчитыватьИерархиюПодразделений = Не УчитыватьИерархиюПодразделений;
	УстановитьОтборПодразделение();
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	УстановитьОтборПоказыватьУдаленные();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчеты(Команда)
	
	ПараметрыФормы = Новый Структура("Раздел, ЗаголовокФормы, НеОтображатьИерархию, РазделГипперссылка");
	ПараметрыФормы.Раздел = ПредопределенноеЗначение("Перечисление.РазделыОтчетов.ОтсутствияСписок");
	ПараметрыФормы.ЗаголовокФормы = НСтр("ru = 'Отчеты об отсутствиях'");
	ПараметрыФормы.НеОтображатьИерархию = Истина;
	ПараметрыФормы.РазделГипперссылка = НастройкиВариантовОтчетовДокументооборот.ПолучитьРазделОтчетаПоИмени("СовместнаяРабота");
	
	ОткрытьФорму(
		"Обработка.ВсеОтчеты.Форма.ФормаПоКатегориям",
		ПараметрыФормы,
		ЭтотОбъект,
		"ОтсутствияСписок");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборДатаОтсутствия()
	
	Если Не ЗначениеЗаполнено(ВариантОтбора) Тогда
		ВариантОтбора = "ЗаДень";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОтборДатаОтсутствия) Тогда
		ПериодСегодня = Новый СтандартныйПериод(ВариантСтандартногоПериода.Сегодня);
		ОтборДатаОтсутствия = ПериодСегодня.ДатаНачала;
	КонецЕсли;
	
	// Установка отбора в соответствии с вариантом отбора по датам
	Если ВариантОтбора = "Все" Тогда
		
		Заголовок = НСтр("ru = 'Все отсутствия сотрудников'");
		ПараметрНачалоДняОтбора = Список.Параметры.НайтиЗначениеПараметра(
			Новый ПараметрКомпоновкиДанных("НачалоДняОтбора"));
		ПараметрНачалоДняОтбора.Использование = Ложь;
		ПараметрКонецДняОтбора = Список.Параметры.НайтиЗначениеПараметра(
			Новый ПараметрКомпоновкиДанных("КонецДняОтбора"));
		ПараметрКонецДняОтбора.Использование = Ложь;
		Элементы.Список.ТекущаяСтрока = Отсутствия.ПолучитьБлижайшееОтсутствие(
			ОтборДатаОтсутствия, ПоказыватьУдаленные);
			
		Если ЭтоМобильныйКлиент Тогда
			Элементы.МК_ОтборДатаОтсутствияПолеВвода.Видимость = Ложь;
		КонецЕсли;	
			
	ИначеЕсли ВариантОтбора = "ЗаДень" Тогда
		
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствия за %1 года'"),
			Формат(ОтборДатаОтсутствия, "ДФ='dd MMMM yyyy'"));
		Список.Параметры.УстановитьЗначениеПараметра("НачалоДняОтбора", НачалоДня(ОтборДатаОтсутствия));
		Список.Параметры.УстановитьЗначениеПараметра("КонецДняОтбора", КонецДня(ОтборДатаОтсутствия));
		
		Если ЭтоМобильныйКлиент Тогда
			Элементы.МК_ОтборДатаОтсутствияПолеВвода.Видимость = Истина;
			Элементы.МК_ОтборДатаОтсутствияПолеВвода.ФорматРедактирования = НСтр("ru='ДФ=''dd MMMM yyyy'''");
		КонецЕсли;
		
	ИначеЕсли ВариантОтбора = "ЗаНеделю" Тогда
		
		НачалоДняОтбора = НачалоНедели(ОтборДатаОтсутствия);
		КонецДняОтбора = КонецНедели(ОтборДатаОтсутствия);
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствия с %1 по %2'"),
			Формат(НачалоДняОтбора, "ДФ='dd MMMM yyyy'"),
			Формат(КонецДняОтбора, "ДФ='dd MMMM yyyy'"));
		Список.Параметры.УстановитьЗначениеПараметра("НачалоДняОтбора", НачалоДняОтбора);
		Список.Параметры.УстановитьЗначениеПараметра("КонецДняОтбора", КонецДняОтбора);
		
		Если ЭтоМобильныйКлиент Тогда
			Элементы.МК_ОтборДатаОтсутствияПолеВвода.Видимость = Истина;
			Элементы.МК_ОтборДатаОтсутствияПолеВвода.ФорматРедактирования = НСтр("ru='ДФ=''dd MMMM yyyy'''");
		КонецЕсли;
		
	ИначеЕсли ВариантОтбора = "ЗаМесяц" Тогда
		
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствия за %1 года'"),
			НРег(Формат(ОтборДатаОтсутствия, "ДФ='MMMM yyyy'")));
		Список.Параметры.УстановитьЗначениеПараметра("НачалоДняОтбора", НачалоМесяца(ОтборДатаОтсутствия));
		Список.Параметры.УстановитьЗначениеПараметра("КонецДняОтбора", КонецМесяца(ОтборДатаОтсутствия));
		
		Если ЭтоМобильныйКлиент Тогда
			Элементы.МК_ОтборДатаОтсутствияПолеВвода.Видимость = Истина;
			Элементы.МК_ОтборДатаОтсутствияПолеВвода.ФорматРедактирования = НСтр("ru='ДФ=''MM yyyy'''");
		
		КонецЕсли;
		
	ИначеЕсли ВариантОтбора = "ЗаГод" Тогда
		
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отсутствия за %1 год'"),
			НРег(Формат(ОтборДатаОтсутствия, "ДФ='yyyy'")));
		Список.Параметры.УстановитьЗначениеПараметра("НачалоДняОтбора", НачалоГода(ОтборДатаОтсутствия));
		Список.Параметры.УстановитьЗначениеПараметра("КонецДняОтбора", КонецГода(ОтборДатаОтсутствия));
		
		Если ЭтоМобильныйКлиент Тогда
			Элементы.МК_ОтборДатаОтсутствияПолеВвода.Видимость = Истина;
			Элементы.МК_ОтборДатаОтсутствияПолеВвода.ФорматРедактирования = НСтр("ru='ДФ=''yyyy'''");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПодразделение()
	
	ПараметрПодразделение = Список.Параметры.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("Подразделение"));
	ПараметрПодразделение.Использование = Ложь;
	
	ПараметрПодразделениеВИерархии = Список.Параметры.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("ПодразделениеВИерархии"));
	ПараметрПодразделениеВИерархии.Использование = Ложь;
	
	Элементы.УчитыватьИерархиюПодразделений.Пометка = УчитыватьИерархиюПодразделений;
	
	Если ЗначениеЗаполнено(ОтборПодразделение) И УчитыватьИерархиюПодразделений = Ложь Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Подразделение", ОтборПодразделение);
	ИначеЕсли ЗначениеЗаполнено(ОтборПодразделение) И УчитыватьИерархиюПодразделений = Истина Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ПодразделениеВИерархии", ОтборПодразделение);
	КонецЕсли;
	
	Если ЭтоМобильныйКлиент Тогда
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.МК_ОтборПодразделение,
			ОтборПодразделение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПричина()
	
	ПараметрПричина = Список.Параметры.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("ВидОтсутствия"));
	ПараметрПричина.Использование = Ложь;
	
	ЭтоУдаленнаяРабота = Ложь;
	Если ЗначениеЗаполнено(ОтборПричина) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ВидОтсутствия", ОтборПричина);
		ЭтоУдаленнаяРабота = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтборПричина, "ЭтоУдаленнаяРабота");
	КонецЕсли;
	
	Если ЭтоМобильныйКлиент Тогда
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.МК_ОтборПричина,
			ОтборПричина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоказыватьУдаленные()
	
	Параметр = Список.Параметры.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("ОтборПоказыватьУдаленные"));
	Параметр.Использование = Ложь;
	
	Элементы.ФормаПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	
	Если Не ПоказыватьУдаленные Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ОтборПоказыватьУдаленные", Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтсутствие()
	
	Если Не ЗначениеЗаполнено(ТекущееОтсутствие) Тогда
		ПолноеОписаниеОтсутствия = ОтсутствияКлиентСервер.ПолучитьПустоеHTMLПредставление();
		Возврат;
	КонецЕсли;
	
	ОбновитьДанныеОтсутствия(ТекущееОтсутствие, ПолноеОписаниеОтсутствия);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьДанныеОтсутствия(Отсутствие, ПолноеОписаниеОтсутствия)
	
	ПолноеОписаниеОтсутствия = Документы.Отсутствие.ПолучитьПредставлениеHTML(Отсутствие);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборУдаленнаяРабота()
	
	Если Не ЗначениеЗаполнено(ОтборУдаленнаяРабота) Тогда
		ОтборУдаленнаяРабота = "Все";
	КонецЕсли;
	
	ПараметрыВыбораПричины = Новый Массив;
	ПараметрыВыбораПричины.Добавить(Новый ПараметрВыбора("Отбор.ПометкаУдаления", Ложь));
	
	Если ОтборУдаленнаяРабота = "Все" Тогда
		
		ПараметрНачалоДняОтбора = Список.Параметры.НайтиЗначениеПараметра(
			Новый ПараметрКомпоновкиДанных("ВидыОтсутствия"));
		ПараметрНачалоДняОтбора.Использование = Ложь;
		
	ИначеЕсли ОтборУдаленнаяРабота = "ТолькоРаботающиеУдаленно" Тогда
		
		Список.Параметры.УстановитьЗначениеПараметра(
			"ВидыОтсутствия",
			Справочники.ВидыОтсутствий.ВидыУдаленнойРаботы());
		ПараметрыВыбораПричины.Добавить(Новый ПараметрВыбора("Отбор.ЭтоУдаленнаяРабота", Истина));
		
		Если ЗначениеЗаполнено(ОтборПричина) Тогда
			ЭтоУдаленнаяРабота = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтборПричина, "ЭтоУдаленнаяРабота");
			Если Не ЭтоУдаленнаяРабота Тогда
				ОтборПричина = Неопределено;
				УстановитьОтборПричина();
				ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элементы.ОтборПричина, ОтборПричина);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ОтборУдаленнаяРабота = "ТолькоНеРаботающиеУдаленно" Тогда
		
		Список.Параметры.УстановитьЗначениеПараметра(
			"ВидыОтсутствия",
			Справочники.ВидыОтсутствий.ВидыОбычногоОтсутствия());
		ПараметрыВыбораПричины.Добавить(Новый ПараметрВыбора("Отбор.ЭтоУдаленнаяРабота", Ложь));
		
		Если ЗначениеЗаполнено(ОтборПричина) Тогда
			ЭтоУдаленнаяРабота = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтборПричина, "ЭтоУдаленнаяРабота");
			Если ЭтоУдаленнаяРабота Тогда
				ОтборПричина = Неопределено;
				УстановитьОтборПричина();
				ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элементы.ОтборПричина, ОтборПричина);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ОтборПричина.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПричины);
	
	Если ЭтоМобильныйКлиент Тогда
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.МК_ОтборУдаленнаяРабота,
			ОтборУдаленнаяРабота,
			"Все");
	КонецЕсли;
	
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции_МобильныйКлиент

&НаСервере
Процедура МК_НастроитьЭлементыФормы()
	
	Если Не ЭтоМобильныйКлиент Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоНеТелефон = МК_ПовтИсп.ЭтоНеТелефон();
	
	СворачиваниеЭлементовПоВажности = СворачиваниеЭлементовФормыПоВажности.НеИспользовать;
	ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	
	Элементы.ФормаСправка.Видимость = Ложь;
	Элементы.ФормаОбновить.Видимость = Ложь;
	Элементы.Ссылка.Видимость = Ложь;
	Элементы.ПолноеОписаниеОтсутствия.Видимость = Ложь;

	Элементы.Переместить(Элементы.ГруппаПечать, Элементы.Список.КонтекстноеМеню);
	
	Элементы.ГруппаБыстрыеОтборы.Видимость = Ложь;
	Элементы.МК_ГруппаОтборыСписок.Видимость = Истина;

	Элементы.Список.Шапка = Ложь;
	Элементы.МК_ГруппаКолонок.Видимость = Истина;
	Элементы.ГруппаКомментарий.Видимость = Ложь;
	Элементы.БудуРазбиратьЗадачи.Видимость = Ложь;
	Элементы.Ссылка.Видимость = Ложь;
	Элементы.ГруппаПериодСтрокой.Видимость = Ложь;
	
	Элементы.Сотрудник.Высота = 2;
	Элементы.Сотрудник.РастягиватьПоГоризонтали = Истина;
	
	Элементы.Переместить(Элементы.Список, Элементы.МК_ГруппаОтборыСписок);
	Элементы.Переместить(Элементы.Сотрудник, Элементы.МК_ГруппаСотрудник);
	Элементы.Переместить(Элементы.ПериодСтрокой, Элементы.МК_ГруппаПериод);
	
	Если ЭтоНеТелефон Тогда
		Элементы.ПериодСтрокой.Ширина = 7;
	Иначе 
		Элементы.ПериодСтрокой.Ширина = 10;	
	КонецЕсли;
	
	ПриИзмененииПараметровЭкранаНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПриИзмененииПараметровЭкранаНаСервере()
	
	ЭтоМобильныйСБольшимЭкраном = МобильныйКлиентВызовСервера.ЭтоМобильныйСБольшимЭкраном();
	ЭтоМобильныйВПортретномРежиме = МобильныйКлиентВызовСервера.ЭтоМобильныйВПортретномРежиме();
	
	Если ЭтоМобильныйСБольшимЭкраном И Не ЭтоМобильныйВПортретномРежиме Тогда
		МК_НастроитьФормуВАльбомномРежиме();
	Иначе
		МК_НастроитьФормуВПортретномРежиме();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура МК_НастроитьФормуВПортретномРежиме()
	
	Элементы.Список.ИспользованиеТекущейСтроки = ИспользованиеТекущейСтрокиТаблицы.Выбор;
	Элементы.ГруппаСписокИДополнительныеДанные.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	Элементы.МК_ОтборДатаОтсутствияПолеВвода.Видимость = Истина;
	Элементы.ГруппаДополнительныеДанные.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура МК_НастроитьФормуВАльбомномРежиме()
	
	Элементы.Список.ИспользованиеТекущейСтроки = ИспользованиеТекущейСтрокиТаблицы.ОтображениеВыделенияИВыбор;
	Элементы.ГруппаСписокИДополнительныеДанные.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	Элементы.ГруппаДополнительныеДанные.Видимость = Истина;
	Элементы.ГруппаДополнительныеДанные.ЦветФона = ЦветаСтиля.МК_ЦветФонаГруппы;
	Элементы.ГруппаДополнительныеДанные.РастягиватьПоВертикали = Истина;

КонецПроцедуры

#КонецОбласти

#КонецОбласти