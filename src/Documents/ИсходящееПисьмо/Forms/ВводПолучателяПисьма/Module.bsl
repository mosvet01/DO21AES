
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче 
	// параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Если Параметры.Свойство("ОсновнойАдресПочты") Тогда		
		Если ЗначениеЗаполнено(Параметры.ОсновнойАдресПочты) Тогда
			ОсновнойАдресПочты = Параметры.ОсновнойАдресПочты;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ТекущийПользователь") Тогда
		Если ЗначениеЗаполнено(Параметры.ТекущийПользователь) Тогда
			ТекущийПользователь = Параметры.ТекущийПользователь;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаполненыПараметрыEmailУчетнойЗаписи") Тогда
		Если ЗначениеЗаполнено(Параметры.ЗаполненыПараметрыEmailУчетнойЗаписи) Тогда
			ЗаполненыПараметрыEmailУчетнойЗаписи = Параметры.ЗаполненыПараметрыEmailУчетнойЗаписи;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("УчетнаяЗапись") Тогда
		Если ЗначениеЗаполнено(Параметры.УчетнаяЗапись) Тогда
			УчетнаяЗапись = Параметры.УчетнаяЗапись;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("АвтоподборАдресатовПриВводе") Тогда
		Если ЗначениеЗаполнено(Параметры.АвтоподборАдресатовПриВводе) Тогда
			АвтоподборАдресатовПриВводе = Параметры.АвтоподборАдресатовПриВводе;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 10
		|	ИспользованиеАдресатовПользователями.Адресат КАК Адресат,
		|	АдресатыПочтовыхСообщений.Адрес КАК Адрес,
		|	ИспользованиеАдресатовПользователями.ДатаПоследнегоИспользования КАК ДатаПоследнегоИспользования
		|ИЗ
		|	РегистрСведений.ИспользованиеАдресатовПользователями КАК ИспользованиеАдресатовПользователями
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АдресатыПочтовыхСообщений КАК АдресатыПочтовыхСообщений
		|		ПО ИспользованиеАдресатовПользователями.Адресат = АдресатыПочтовыхСообщений.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбАдресатах КАК СведенияОбАдресатах
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЛичныеАдресаты КАК ЛичныеАдресаты
		|			ПО СведенияОбАдресатах.Контакт = ЛичныеАдресаты.Ссылка
		|		ПО ИспользованиеАдресатовПользователями.Адресат = СведенияОбАдресатах.АдресатСообщения
		|ГДЕ
		|	ИспользованиеАдресатовПользователями.Пользователь = &Пользователь
		|	И (ЛичныеАдресаты.Пользователь ЕСТЬ NULL
		|			ИЛИ ЛичныеАдресаты.Пользователь = &Пользователь)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаПоследнегоИспользования УБЫВ";
	
	Запрос.УстановитьПараметр("Пользователь", ПользователиКлиентСервер.ТекущийПользователь());
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = НедавниеАдресаты.Добавить();
		НоваяСтрока.Выбран = Ложь;
		
		ДанныеАдресата = 
			РаботаСоСтрокамиКлиентСервер.РазложитьПредставлениеАдресаЭлектроннойПочты(
				Строка(Выборка.Адресат));
		
		ДанныеАдресата =
			РаботаСоСтрокамиКлиентСервер.РазложитьПредставлениеАдресаЭлектроннойПочты(Выборка.Адресат);
		
		НоваяСтрока.Адресат = Выборка.Адресат;
		НоваяСтрока.Адрес = ДанныеАдресата.Адрес;
		
		Если ЗначениеЗаполнено(ДанныеАдресата.ОтображаемоеИмя) Тогда
			НоваяСтрока.Представление = ДанныеАдресата.ОтображаемоеИмя;
		Иначе
			НоваяСтрока.Представление = ДанныеАдресата.Адрес;
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.НедавниеАдресаты.Видимость = НедавниеАдресаты.Количество() > 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПодключитьОбработчикОжидания("УстановитьФокусНаПолучателя", 0.2, Истина);

	ЭтаФорма.ТекущийЭлемент = Элементы.ПолучательПредставление;
#Если МобильныйКлиент Тогда	
	ЭтаФорма.НачатьРедактированиеЭлемента();
#КонецЕсли
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НедавниеАдресатыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.НедавниеАдресаты.ТекущиеДанные;
	ТекущиеДанные.Выбран = Не ТекущиеДанные.Выбран;
	
	Готово(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПолучательПредставление = ВыбранноеЗначение.Представление;
	ПолучательАдрес = ВыбранноеЗначение.Адрес;
	ПолучательАдресат = ВыбранноеЗначение.Адресат;
	
	ЗакрытьФормуИВернутьСписокВыбранных();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПредставлениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание,
	СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрДлина(Текст) < 2 Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоВебКлиент = Ложь;
#Если ВебКлиент Тогда
	ЭтоВебКлиент = Истина;
#КонецЕсли
	
	ИскатьПоГруппам = Истина;

	ДанныеВыбора = ВстроеннаяПочтаСервер.ПолучитьДанныеВыбораДляЭлектронногоПисьма(Текст,
		ТекущийПользователь,
		ЭтоВебКлиент,
		ИскатьПоГруппам);

	ВстроеннаяПочтаКлиент.ЗаполнитьКартинкиВСпискеВыбора(ДанныеВыбора);
	
	Если ДанныеВыбора.Количество() <> 0 Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)

	ЗакрытьФормуИВернутьСписокВыбранных();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьФокусНаПолучателя()

	ТекущийЭлемент = Элементы.ПолучательПредставление;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоляАдреса(ДанныеАдресата)
	
	ПолучательАдресат = ДанныеАдресата.ПолноеИмя;
	Если Не ЗначениеЗаполнено(ДанныеАдресата.ОтображаемоеИмя) Тогда
		ПолучательПредставление = ДанныеАдресата.Адрес;
	Иначе
		ПолучательПредставление = ДанныеАдресата.ОтображаемоеИмя;
	КонецЕсли;
	
	ПолучательАдрес = ДанныеАдресата.Адрес;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФормуИВернутьСписокВыбранных()

	ОчиститьСообщения();
	МассивДляВозврата = Новый Массив;

	Для Каждого Строка Из НедавниеАдресаты Цикл
		Если (Строка.Выбран) Тогда
			
			АдресатИнфо = ПолучитьАдресатИнфо(Строка.Адрес);
			
			СтруктураВозврата = НоваяСтруктураСведенийОбАдресате();
			ЗаполнитьЗначенияСвойств(СтруктураВозврата, АдресатИнфо);
			СтруктураВозврата.Представление = АдресатИнфо.Наименование;
			СтруктураВозврата.Адрес = Строка.Адрес;
			
			Если МассивДляВозврата.Найти(СтруктураВозврата) = Неопределено Тогда
				МассивДляВозврата.Добавить(СтруктураВозврата);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ПолучательПредставление) Тогда

		Если Не ЗначениеЗаполнено(ПолучательАдресат) Тогда

			// Пытаемся получить адрес электронной почты.
			ДанныеАдресата = 
				РаботаСоСтрокамиКлиентСервер.РазложитьПредставлениеАдресаЭлектроннойПочты(
					ПолучательПредставление);

			Если РаботаСоСтрокамиКлиентСервер.ЭтоАдресЭлектроннойПочты(ДанныеАдресата.Адрес) Тогда
				ЗаполнитьПоляАдреса(ДанныеАдресата);

			Иначе
				ТекстСообщения = 
					СтрШаблон(
						НСтр("ru = 'Некорректный адрес электронной почты ""%1""'"),
						ПолучательПредставление);

				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,, "ПолучательПредставление");

				Возврат;

			КонецЕсли;

		КонецЕсли;
		
		АдресатИнфо = ПолучитьАдресатИнфо(ПолучательАдрес);
		
		СтруктураВозврата = НоваяСтруктураСведенийОбАдресате();
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, АдресатИнфо);
		СтруктураВозврата.Адрес = ПолучательАдрес;
		
		Если (АдресатИнфо.Свойство("Наименование")) Тогда
			СтруктураВозврата.Представление = АдресатИнфо.Наименование;
		Иначе
			СтруктураВозврата.Представление = ПолучательПредставление;
		КонецЕсли;
		
		МассивДляВозврата.Добавить(СтруктураВозврата);
		
	КонецЕсли;
	
	Оповестить("ВыбраныПолучатели", МассивДляВозврата);
	
	// В МК форма уже может быть закрыта.
	Если ЭтотОбъект.Открыта() Тогда
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьАдресатИнфо(Адрес)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	АдресатыПочтовыхСообщений.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(МИНИМУМ(СведенияОбАдресатах.Контакт), НЕОПРЕДЕЛЕНО) КАК Контакт,
		|	АдресатыПочтовыхСообщений.Наименование КАК Наименование,
		|	АдресатыПочтовыхСообщений.ВидМаршрутизации КАК ВидМаршрутизации
		|ИЗ
		|	Справочник.АдресатыПочтовыхСообщений КАК АдресатыПочтовыхСообщений
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбАдресатах КАК СведенияОбАдресатах
		|		ПО АдресатыПочтовыхСообщений.Ссылка = СведенияОбАдресатах.АдресатСообщения
		|			И (СведенияОбАдресатах.Активна)
		|ГДЕ
		|	АдресатыПочтовыхСообщений.Адрес = &Адрес
		|	И НЕ АдресатыПочтовыхСообщений.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	АдресатыПочтовыхСообщений.Ссылка,
		|	АдресатыПочтовыхСообщений.Наименование,
		|	АдресатыПочтовыхСообщений.ВидМаршрутизации");
	
	Запрос.УстановитьПараметр("Адрес", Адрес);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	АдресатИнфо = Новый Структура();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		АдресатИнфо.Вставить("Адресат", ВыборкаДетальныеЗаписи.Ссылка);
		АдресатИнфо.Вставить("Контакт", ВыборкаДетальныеЗаписи.Контакт);
		АдресатИнфо.Вставить("Наименование", ВыборкаДетальныеЗаписи.Наименование);
		
		Внутренний = ТипЗнч(ВыборкаДетальныеЗаписи.Контакт) = Тип("СправочникСсылка.Пользователи")
				Или ТипЗнч(ВыборкаДетальныеЗаписи.Контакт) = Тип("СправочникСсылка.РолиИсполнителей");
		АдресатИнфо.Вставить("Внешний", Не Внутренний);
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Контакт) Тогда
			
			Если ТипЗнч(ВыборкаДетальныеЗаписи.Контакт) = Тип("СправочникСсылка.Пользователи") Тогда
				ОписаниеОтсутствия =
					Отсутствия.ПолучитьОписаниеТекущегоОтсутствияСотрудника(ВыборкаДетальныеЗаписи.Контакт);
				АдресатИнфо.Вставить("ОписаниеОтсутствия", ОписаниеОтсутствия);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат АдресатИнфо;
	
КонецФункции

Функция НоваяСтруктураСведенийОбАдресате()
	
	СтруктураВозврата = Новый Структура();
	
	СтруктураВозврата.Вставить("Адресат", Справочники.АдресатыПочтовыхСообщений.ПустаяСсылка());
	СтруктураВозврата.Вставить("ВидМаршрутизации", Перечисления.ВидыМаршрутизацииПисем.Внешняя);
	СтруктураВозврата.Вставить("Представление", Неопределено);
	СтруктураВозврата.Вставить("Контакт", Неопределено);
	СтруктураВозврата.Вставить("Адрес", Неопределено);
	СтруктураВозврата.Вставить("Внешний", Истина);
	СтруктураВозврата.Вставить("ДеньРожденияСегодня", Ложь);
	СтруктураВозврата.Вставить("ОписаниеОтсутствия", Неопределено);
	
	Возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти
