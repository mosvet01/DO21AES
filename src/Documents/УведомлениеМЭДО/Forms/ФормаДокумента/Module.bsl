
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПриСозданииНаСервереРедакцииКонфигурации();
	
	// Открытие, как ответ на входящий документ:
	Если Объект.Ссылка.Пустая()
		И (Параметры.Свойство("ОткрытиеИзФормы") И Параметры.ОткрытиеИзФормы = Истина)
		И (Параметры.Свойство("ЭтоСоздание") И Параметры.ЭтоСоздание) Тогда
		
		Если Не ИнтеграцияСМЭДО.ЭтоВходящийДокумент(Параметры.Документ) Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Отменено. Уведомление можно создать только на входящий документ, на исходящий и др. нельзя!'"),
				, , , Истина);
			Возврат;
		КонецЕсли;
		
		// Создается новое исходящее уведомление на входящий документ:
		Объект.Дата = ТекущаяДатаСеанса();
		Объект.Документ = Параметры.Документ;
		СтруктураСостояния = РегистрыСведений.СостоянияДокументовМЭДО.ПолучитьСостояниеДокумента(
			Объект.Документ,
			Перечисления.СостоянияДокументовМЭДО.ДокументПолучен,
			"ИдентификаторДокумента, ИдентификаторСообщения",
			Объект.Дата);
		Объект.ИдентификаторДокумента = СтруктураСостояния.ИдентификаторДокумента;
		Объект.ИдентификаторУведомления = СтруктураСостояния.ИдентификаторСообщения;
		Объект.ТипУведомления = Параметры.ТипУведомления;
		Объект.Направление = Перечисления.НаправленияСообщенийМЭДО.Исходящее;
		Реквизиты = ИнтеграцияСМЭДО.ПолучитьТребуемыеДанныеВходящегоДокумента(
			Объект.Документ, "Организация, Контрагент", МЭДОСтруктурыДанных.НовыйЛегкийОтвет());
		Объект.Организация = Реквизиты.Организация;
		Объект.Контрагент = Реквизиты.Контрагент;
		Объект.ВерсияМЭДО = ПолучитьВерсиюМЭДО(Объект.Контрагент);
		
		Модифицированность = Истина;
	КонецЕсли;
	
	ЗаполнитьПоляПоТипуУведомления();
	
	УправлениеДоступностьюВидимостью();
	УстановитьВидимостьЗакладок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ЗаписаноУведомлениеМЭДО", Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
	
&НаКлиенте
Процедура ДанныеКонвертаНажатие(Элемент)
	ТекстовыйДокумент = ТекстовыйДокументСДаннымиКонверта(Объект.Ссылка);
	ТекстовыйДокумент.Показать("envelope.ini");
КонецПроцедуры

&НаКлиенте
Процедура ДанныеСообщенияНажатие(Элемент)
	ТекстовыйДокумент = ТекстовыйДокументСДаннымиСообщения(Объект.Ссылка);
	ТекстовыйДокумент.Показать(Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ТипУведомленияПриИзменении(Элемент)
	
	СообщениеОбОшибке = "";
	ТипУведомленияПриИзмененииНаСервере(СообщениеОбОшибке);
	Если ЗначениеЗаполнено(СообщениеОбОшибке) Тогда
		ПоказатьПредупреждение(, СообщениеОбОшибке);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	Объект.ВерсияМЭДО = ПолучитьВерсиюМЭДО(Объект.ВерсияМЭДО);
	
КонецПроцедуры

#Область ТЧ_ПринятиеКИсполнению

// Работа с полями Комментарий
&НаКлиенте
Процедура КомментарийРуководителяСекретаряНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Комментарий", Элемент.ТекстРедактирования);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводКомментарияРуководителяСекретаряЗавершение", ЭтотОбъект);
	РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФорму("ОбщаяФорма.ВводКомментария", ПараметрыФормы,,,,, ОписаниеОповещения, РежимОткрытияОкна);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийРуководителяПодразделенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Комментарий", Элемент.ТекстРедактирования);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводКомментарияРуководителяПодразделенияЗавершение", ЭтотОбъект);
	РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФорму("ОбщаяФорма.ВводКомментария", ПараметрыФормы,,,,, ОписаниеОповещения, РежимОткрытияОкна);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийИсполнителяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Комментарий", Элемент.ТекстРедактирования);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводКомментарияИсполнителяЗавершение", ЭтотОбъект);
	РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФорму("ОбщаяФорма.ВводКомментария", ПараметрыФормы,,,,, ОписаниеОповещения, РежимОткрытияОкна);
	
КонецПроцедуры

// Работа с полями Юрлицо
&НаКлиенте
Процедура ЮрлицоИсполнительПриИзменении(Элемент)
	
	ЮрлицоИсполнительПриИзмененииНаСервере();
	
КонецПроцедуры

// Работа с полями, зависящими от Юр.лиц
&НаКлиенте
Процедура РуководительСекретарьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТипЗнч(Объект.ПринятиеКИсполнению[0].Юрлицо) = МЭДОВызовСервера.ТипКонтрагенты() Тогда
		СтандартнаяОбработка = Ложь;
		ИнтеграцияСМЭДОКлиент.ОткрытьВыборКонтактногоЛица(
			Объект.ПринятиеКИсполнению[0].Юрлицо,
			Объект.ПринятиеКИсполнению[0].РуководительСекретарь,
			Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РуководительПодразделенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТипЗнч(Объект.ПринятиеКИсполнению[0].Юрлицо) = МЭДОВызовСервера.ТипКонтрагенты() Тогда
		СтандартнаяОбработка = Ложь;
		ИнтеграцияСМЭДОКлиент.ОткрытьВыборКонтактногоЛица(
			Объект.ПринятиеКИсполнению[0].Юрлицо,
			Объект.ПринятиеКИсполнению[0].РуководительПодразделения,
			Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТипЗнч(Объект.ПринятиеКИсполнению[0].Юрлицо) = МЭДОВызовСервера.ТипКонтрагенты() Тогда
		СтандартнаяОбработка = Ложь;
		ИнтеграцияСМЭДОКлиент.ОткрытьВыборКонтактногоЛица(
			Объект.ПринятиеКИсполнению[0].Юрлицо,
			Объект.ПринятиеКИсполнению[0].Исполнитель,
			Элемент);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ЮрлицоПодготовкаДокладаПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.ПодготовкаДоклада[0].Юрлицо) = МЭДОВызовСервера.ТипКонтрагенты() Тогда
		Объект.ПодготовкаДоклада[0].Ответственный = МЭДОВызовСервера.КонтактноеЛицоПустаяСсылка();
	Иначе
		Объект.ПодготовкаДоклада[0].Ответственный = МЭДОВызовСервера.СотрудникПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЮрлицоНаправлениеДокладаПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.НаправлениеДоклада[0].Юрлицо) = Тип("СправочникСсылка.Контрагенты") Тогда
		Объект.НаправлениеДоклада[0].Ответственный = МЭДОВызовСервера.КонтактноеЛицоПустаяСсылка();
	Иначе
		Объект.НаправлениеДоклада[0].Ответственный = МЭДОВызовСервера.СотрудникПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЮрлицоХодИсполненияПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.ХодИсполнения[0].Юрлицо) = Тип("СправочникСсылка.Контрагенты") Тогда
		Объект.ХодИсполнения[0].Ответственный = МЭДОВызовСервера.КонтактноеЛицоПустаяСсылка();
	Иначе
		Объект.ХодИсполнения[0].Ответственный = МЭДОВызовСервера.СотрудникПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОтветственныйПодготовкаДокладаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТипЗнч(Объект.ПодготовкаДоклада[0].Юрлицо) = МЭДОВызовСервера.ТипКонтрагенты() Тогда
		СтандартнаяОбработка = Ложь;
		ИнтеграцияСМЭДОКлиент.ОткрытьВыборКонтактногоЛица(
			Объект.ПодготовкаДоклада[0].Юрлицо,
			Объект.ПодготовкаДоклада[0].Ответственный,
			Элемент,
			НСтр("ru = 'Юрлицо'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйНаправлениеДокладаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТипЗнч(Объект.НаправлениеДоклада[0].Юрлицо) = МЭДОВызовСервера.ТипКонтрагенты() Тогда
		СтандартнаяОбработка = Ложь;
		ИнтеграцияСМЭДОКлиент.ОткрытьВыборКонтактногоЛица(
			Объект.НаправлениеДоклада[0].Юрлицо,
			Объект.НаправлениеДоклада[0].Ответственный,
			Элемент,
			НСтр("ru = 'Юрлицо'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйХодИсполненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТипЗнч(Объект.ХодИсполнения[0].Юрлицо) = МЭДОВызовСервера.ТипКонтрагенты() Тогда
		СтандартнаяОбработка = Ложь;
		ИнтеграцияСМЭДОКлиент.ОткрытьВыборКонтактногоЛица(
			Объект.ХодИсполнения[0].Юрлицо,
			Объект.ХодИсполнения[0].Ответственный,
			Элемент,
			НСтр("ru = 'Юрлицо'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПостановкаНаКонтроль_КонтрольныеПунктыДокумента

&НаКлиенте
Процедура ПостановкаНаКонтроль_КонтрольныеПунктыДокументаЮрлицоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПостановкаНаКонтроль_КонтрольныеПунктыДокумента.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ТекущиеДанные.Юрлицо) = МЭДОВызовСервера.ТипКонтрагенты() Тогда
		ТекущиеДанные.Ответственный = МЭДОВызовСервера.КонтактноеЛицоПустаяСсылка();
	Иначе
		ТекущиеДанные.Ответственный = МЭДОВызовСервера.СотрудникПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПостановкаНаКонтроль_КонтрольныеПунктыДокументаОтветственныйНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ПостановкаНаКонтроль_КонтрольныеПунктыДокумента.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ТекущиеДанные.Юрлицо) = МЭДОВызовСервера.ТипКонтрагенты() Тогда
		СтандартнаяОбработка = Ложь;
		ИнтеграцияСМЭДОКлиент.ОткрытьВыборКонтактногоЛица(
			ТекущиеДанные.Юрлицо,
			ТекущиеДанные.Ответственный,
			Элемент,
			НСтр("ru = 'Юрлицо'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьПоМЭДО(Команда)
	
	Если Объект.Ссылка.Пустая() Или Модифицированность Тогда 
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Не Объект.ГотовоКОтправке Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Необходимо установить флаг ""Готово к отправке""'"),
			Объект.Ссылка,
			"ГотовоКОтправке",
			"Объект");
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	ДанныеОтвета = МЭДОКлиент.НовыйЛегкийОтвет();
	МЭДОВызовСервера.ОтправитьИсходящиеУведомления(
		Объект.Организация,
		ДанныеОтвета,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.Ссылка));
	
	ТекстОтвета = НСтр("ru = 'Уведомление отправлено'");
	Если Не ДанныеОтвета.Успех Тогда
		ТекстОтвета = НСтр("ru = 'При отправке возникли ошибки'");
	КонецЕсли;
	ПоказатьПредупреждение(, ТекстОтвета);
	Прочитать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ТипУведомленияПриИзмененииНаСервере(СообщениеОбОшибке)
	
	УстановитьВидимостьЗакладок();
	СообщениеОбОшибке = ЗаполнитьПоляПоТипуУведомления();
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПоляПоТипуУведомления()
	
	Если Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОПостановкеНаКонтроль Тогда
		
		Элементы.ГруппаУведомленияПоТипам.ТекущаяСтраница = Элементы.ГруппаПостановкаНаКонтроль;
		Если Объект.ПостановкаНаКонтроль.Количество() = 0 Тогда
			Объект.ПостановкаНаКонтроль.Добавить();
		КонецЕсли;
		
	ИначеЕсли Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОРегистрации Тогда
		
		Элементы.ГруппаУведомленияПоТипам.ТекущаяСтраница = Элементы.ГруппаРегистрация;
		Если Объект.Регистрация.Количество() = 0 Тогда
			Объект.Регистрация.Добавить();		
		КонецЕсли;
		
		Если Объект.Направление = Перечисления.НаправленияСообщенийМЭДО.Исходящее Тогда
			// Если документ уже зарегистрирован, то проставим те же данные, если же нет, то запретим это делать.
			Реквизиты = ИнтеграцияСМЭДО.ПолучитьТребуемыеДанныеВходящегоДокумента(
				Объект.Документ, "ДатаРегистрации, РегистрационныйНомер", МЭДОСтруктурыДанных.НовыйЛегкийОтвет());
			Если Не ЗначениеЗаполнено(Реквизиты.ДатаРегистрации)
				Или Не ЗначениеЗаполнено(Реквизиты.РегистрационныйНомер) Тогда
				
				Возврат НСтр("ru = 'Документ еще не зарегистрирован. Перед отправкой уведомления о регистрации нужно сначала зарегистрировать его'");
			КонецЕсли;
			
			СтрокаТЧ = Объект.Регистрация[0];
			Если МЭДО.ПрисвоитьОтличающееся(СтрокаТЧ.ДатаРегистрации, Реквизиты.ДатаРегистрации) Тогда
				Модифицированность = Истина;
			КонецЕсли;
			Если МЭДО.ПрисвоитьОтличающееся(СтрокаТЧ.РегистрационныйНомер, Реквизиты.РегистрационныйНомер) Тогда
				Модифицированность = Истина;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОбОтказеВРегистрации Тогда
		
		Элементы.ГруппаУведомленияПоТипам.ТекущаяСтраница = Элементы.ГруппаОтказВРегистрации;
		Если Объект.ОтказВРегистрации.Количество() = 0 Тогда
			Объект.ОтказВРегистрации.Добавить();
		КонецЕсли;
	
	ИначеЕсли Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОПринятииКИсполнению Тогда
		
		Элементы.ГруппаУведомленияПоТипам.ТекущаяСтраница = Элементы.ГруппаПринятиеКИсполнению;
		Если Объект.ПринятиеКИсполнению.Количество() = 0 Тогда
			Объект.ПринятиеКИсполнению.Добавить();
			Объект.ПринятиеКИсполнению[0].Юрлицо = МЭДОВызовСервера.КонтрагентПустаяСсылка();
			ЮрлицоИсполнительПриИзмененииНаСервере();
		КонецЕсли;
	
	ИначеЕсли Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОПодготовкеДоклада Тогда
		
		Элементы.ГруппаУведомленияПоТипам.ТекущаяСтраница = Элементы.ГруппаПодготовкаДоклада;
		Если Объект.ПодготовкаДоклада.Количество() = 0 Тогда
			Объект.ПодготовкаДоклада.Добавить();
			Объект.ПодготовкаДоклада[0].Юрлицо = МЭДОВызовСервера.КонтрагентПустаяСсылка();
			Объект.ПодготовкаДоклада[0].Ответственный = МЭДОВызовСервера.КонтактноеЛицоПустаяСсылка();
		КонецЕсли;
	
	ИначеЕсли Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОНаправленииДоклада Тогда
		
		Элементы.ГруппаУведомленияПоТипам.ТекущаяСтраница = Элементы.ГруппаНаправлениеДоклада;
		Если Объект.НаправлениеДоклада.Количество() = 0 Тогда
			Объект.НаправлениеДоклада.Добавить();
			Объект.НаправлениеДоклада[0].Юрлицо = МЭДОВызовСервера.КонтрагентПустаяСсылка();
			Объект.НаправлениеДоклада[0].Ответственный = МЭДОВызовСервера.КонтактноеЛицоПустаяСсылка();
		КонецЕсли;
		
	ИначеЕсли Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОХодеИсполнения Тогда
		
		Элементы.ГруппаУведомленияПоТипам.ТекущаяСтраница = Элементы.ГруппаХодИсполнения;
		Если Объект.ХодИсполнения.Количество() = 0 Тогда
			Объект.ХодИсполнения.Добавить();
			Объект.ХодИсполнения[0].Юрлицо = МЭДОВызовСервера.КонтрагентПустаяСсылка();
			Объект.ХодИсполнения[0].Ответственный = МЭДОВызовСервера.КонтактноеЛицоПустаяСсылка();
		КонецЕсли;
		
	ИначеЕсли Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОбОпубликовании Тогда
		
		Элементы.ГруппаУведомленияПоТипам.ТекущаяСтраница = Элементы.ГруппаОпубликование;
		Если Объект.Опубликование.Количество() = 0 Тогда
			Объект.Опубликование.Добавить();		
		КонецЕсли;
		
		Если Объект.Направление = Перечисления.НаправленияСообщенийМЭДО.Исходящее Тогда
			// Если документ уже зарегистрирован, то проставим те же данные, если же нет, то запретим это делать.
			Реквизиты = ИнтеграцияСМЭДО.ПолучитьТребуемыеДанныеВходящегоДокумента(
				Объект.Документ, "ДатаРегистрации, РегистрационныйНомер", МЭДОСтруктурыДанных.НовыйЛегкийОтвет());
			Если Не ЗначениеЗаполнено(Реквизиты.ДатаРегистрации)
				Или Не ЗначениеЗаполнено(Реквизиты.РегистрационныйНомер) Тогда
				
				Возврат НСтр("ru = 'Документ еще не зарегистрирован. Перед отправкой уведомления об опубликовании нужно сначала зарегистрировать его'");
			КонецЕсли;
			
			СтрокаТЧ = Объект.Опубликование[0];
			Если МЭДО.ПрисвоитьОтличающееся(СтрокаТЧ.ДатаРегистрации, Реквизиты.ДатаРегистрации) Тогда
				Модифицированность = Истина;
			КонецЕсли;
			Если МЭДО.ПрисвоитьОтличающееся(СтрокаТЧ.РегистрационныйНомер, Реквизиты.РегистрационныйНомер) Тогда
				Модифицированность = Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаСервере
Процедура УправлениеДоступностьюВидимостью()
	
	ЕстьПолныеПрава = ИнтеграцияСМЭДО.ЕстьПолныеПрава();
	
	// Эти поля изменяются только программно:
	Элементы.Направление.ТолькоПросмотр = Не ЕстьПолныеПрава;
	Элементы.Документ.ТолькоПросмотр = Не ЕстьПолныеПрава;
	Элементы.Ответственный.ТолькоПросмотр = Не ЕстьПолныеПрава;
	// Флаг "Отправлено" можно принудительно только снять, поставить нельзя:
	Элементы.Отправлено.ТолькоПросмотр = Не ЕстьПолныеПрава;
	
	ЭтоИсходящее = (Объект.Направление = Перечисления.НаправленияСообщенийМЭДО.Исходящее);
	Элементы.Отправлено.Видимость = ЭтоИсходящее;
	Элементы.ГотовоКОтправке.Видимость = ЭтоИсходящее;
	Элементы.ОтправитьПоМЭДО.Видимость = ЭтоИсходящее;
	// Поля "Подробно" только во входящем:
	Элементы.ПостановкаНаКонтроль_КонтрольныеПунктыДокументаОтветственныйПредставление.Видимость = Не ЭтоИсходящее;
	Элементы.РуководительСекретарьПредставление.Видимость = Не ЭтоИсходящее;
	Элементы.РуководительПодразделенияПредставление.Видимость = Не ЭтоИсходящее;
	Элементы.ИсполнительПредставление.Видимость = Не ЭтоИсходящее;
	Элементы.ОтветственныйПредставлениеПодготовкаДоклада.Видимость = Не ЭтоИсходящее;
	Элементы.ОтветственныйПредставлениеНаправлениеДоклада.Видимость = Не ЭтоИсходящее;
	Элементы.ОтветственныйПредставлениеХодИсполнения.Видимость = Не ЭтоИсходящее;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЗакладок()
	
	Элементы.ГруппаПостановкаНаКонтроль.Видимость = 
		(Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОПостановкеНаКонтроль);
	Элементы.ГруппаРегистрация.Видимость =
		(Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОРегистрации);
	Элементы.ГруппаОтказВРегистрации.Видимость =
		(Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОбОтказеВРегистрации);
	Элементы.ГруппаПринятиеКИсполнению.Видимость =
		(Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОПринятииКИсполнению);
	Элементы.ГруппаПодготовкаДоклада.Видимость =
		(Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОПодготовкеДоклада);
	Элементы.ГруппаНаправлениеДоклада.Видимость =
		(Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОНаправленииДоклада);
	Элементы.ГруппаХодИсполнения.Видимость =
		(Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОХодеИсполнения);
	Элементы.ГруппаОпубликование.Видимость =
		(Объект.ТипУведомления = Перечисления.ТипыУведомленийМЭДО.ОбОпубликовании);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстовыйДокументСДаннымиСообщения(Уведомление)
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	Хранилище = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Уведомление, "ДанныеСообщения");
	Если Хранилище = Неопределено Тогда
		Возврат ТекстовыйДокумент;
	КонецЕсли;
	
	ДвоичныеДанные = Хранилище.Получить();
	Если ДвоичныеДанные = Неопределено Тогда
		Возврат ТекстовыйДокумент;
	КонецЕсли;
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	ТекстовыйДокумент.Прочитать(ИмяВременногоФайла, "UTF-8");
	УдалитьФайлы(ИмяВременногоФайла);
	Возврат ТекстовыйДокумент;
	
КонецФункции

&НаСервереБезКонтекста
Функция ТекстовыйДокументСДаннымиКонверта(Уведомление)
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	Хранилище = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Уведомление, "ДанныеКонверта");
	Если Хранилище = Неопределено Тогда
		Возврат ТекстовыйДокумент;
	КонецЕсли;
	
	ДвоичныеДанные = Хранилище.Получить();
	Если ДвоичныеДанные = Неопределено Тогда
		Возврат ТекстовыйДокумент;
	КонецЕсли;
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("ini");
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	ТекстовыйДокумент.Прочитать(ИмяВременногоФайла, "windows-1251");
	УдалитьФайлы(ИмяВременногоФайла);
	Возврат ТекстовыйДокумент;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервереРедакцииКонфигурации()
	
	Элементы.Организация.Заголовок = ИнтеграцияСМЭДО.Организация();
	
КонецПроцедуры

#Область ТЧ_ПринятиеКИсполнению

&НаКлиенте
Процедура ВводКомментарияРуководителяСекретаряЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ПринятиеКИсполнению[0].КомментарийРуководителяСекретаря = Результат;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВводКомментарияРуководителяПодразделенияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ПринятиеКИсполнению[0].КомментарийРуководителяПодразделения = Результат;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВводКомментарияИсполнителяЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ПринятиеКИсполнению[0].КомментарийИсполнителя = Результат;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЮрлицоИсполнительПриИзмененииНаСервере()
	
	Если ТипЗнч(Объект.ПринятиеКИсполнению[0].Юрлицо) = ИнтеграцияСМЭДО.ТипКонтрагенты() Тогда
		ПустойТип = ИнтеграцияСМЭДО.КонтактноеЛицоПустаяСсылка();
	Иначе
		ПустойТип = ИнтеграцияСМЭДО.СотрудникПустаяСсылка();
	КонецЕсли;
	
	Объект.ПринятиеКИсполнению[0].РуководительСекретарь = ПустойТип;
	Объект.ПринятиеКИсполнению[0].РуководительПодразделения = ПустойТип;
	Объект.ПринятиеКИсполнению[0].Исполнитель = ПустойТип;
	
КонецПроцедуры

#КонецОбласти

&НаСервереБезКонтекста
Функция ПолучитьВерсиюМЭДО(Контрагент)
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Возврат Перечисления.ВерсииФорматаМЭДО.ПоследняяВерсия();
	КонецЕсли;
	
	Настройки = РегистрыСведений.НастройкиКонтрагентовМЭДО.ПолучитьНастройки(
		Контрагент, МЭДОСтруктурыДанных.НовыйЛегкийОтвет());
	Возврат МЭДО.ЗаполненноеЗначение(
		Настройки.ВерсияФорматаМЭДО, Перечисления.ВерсииФорматаМЭДО.ПоследняяВерсия());
	
КонецФункции

#КонецОбласти