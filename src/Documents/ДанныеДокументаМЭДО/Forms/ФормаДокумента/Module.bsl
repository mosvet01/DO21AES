
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПриСозданииНаСервереРедакцииКонфигурации();
	
	// Открытие из формы:
	Если Объект.Ссылка.Пустая()
		И (Параметры.Свойство("ОткрытиеИзФормы") И Параметры.ОткрытиеИзФормы = Истина) Тогда
		
		Объект.Документ = Параметры.Документ;
		Если ИнтеграцияСМЭДО.ЭтоИсходящийДокумент(Объект.Документ) Тогда
			Объект.ИдентификаторДокумента = "" + Объект.Документ.УникальныйИдентификатор();
			Объект.Направление = Перечисления.НаправленияСообщенийМЭДО.Исходящее;
		ИначеЕсли ИнтеграцияСМЭДО.ЭтоВходящийДокумент(Объект.Документ) Тогда 
			Объект.Направление = Перечисления.НаправленияСообщенийМЭДО.Входящее;
		КонецЕсли;
		Реквизиты = ИнтеграцияСМЭДО.ПолучитьТребуемыеДанныеВходящегоДокумента(
			Объект.Документ, "Организация", МЭДОСтруктурыДанных.НовыйЛегкийОтвет());
		Объект.Организация = Реквизиты.Организация;
		
		Модифицированность = Истина;
	КонецЕсли;
	
	УправлениеДоступностьюВидимостью();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ЗаписанДанныеДокументаМЭДО", Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьНаДиск(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Заголовок = НСтр("ru = 'Укажите каталог для сохранения файла'");
	Если Не Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;

	ИмяФайла = ?(ЗначениеЗаполнено(Объект.ИмяАрхиваЭСД), Объект.ИмяАрхиваЭСД, НСтр("ru = 'имя-файла-по-умолчанию.zip'"));
	
	Файл = Новый Файл(Диалог.Каталог);
	Если Не Файл.Существует() Тогда
		ПоказатьПредупреждение( , 
			СтрШаблон(НСтр("ru = 'Каталог %1 не существует или не доступен!'"), Диалог.Каталог));
		Возврат;
	КонецЕсли;
	
	ПолноеИмяФайла = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(Диалог.Каталог) + ИмяФайла;
	Файл = Новый Файл(ПолноеИмяФайла);
	ДопПараметры = Новый Структура("ПолноеИмяФайла", ПолноеИмяФайла);
	Если Файл.Существует() Тогда
		Оповещение = Новый ОписаниеОповещения("ЗаписатьФайлЭсдНаДиск", ЭтотОбъект, ДопПараметры);
		ПоказатьВопрос(Оповещение , НСтр("ru = 'Файл существует, перезаписать?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаписатьФайлЭсдНаДиск(КодВозвратаДиалога.Да, ДопПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоМЭДО(Команда)
	
	Если Объект.Ссылка.Пустая() Или Модифицированность Тогда 
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Не Объект.ГотовКОтправке Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Необходимо установить флаг ""Готов к отправке""'"),
			Объект.Ссылка,
			"ГотовКОтправке",
			"Объект");
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	ДанныеОтвета = МЭДОКлиент.НовыйЛегкийОтвет();
	МЭДОВызовСервера.ОтправитьИсходящиеДокументы(
		Объект.Организация,
		ДанныеОтвета,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.Документ));
	
	ТекстОтвета = НСтр("ru = 'Документ отправлен'");
	Если Не ДанныеОтвета.Успех Тогда
		ТекстОтвета = НСтр("ru = 'При отправке возникли ошибки'");
	КонецЕсли;
	ПоказатьПредупреждение(, ТекстОтвета);
	Прочитать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеДоступностьюВидимостью()
	
	ЭтоИсходящее = (Объект.Направление = Перечисления.НаправленияСообщенийМЭДО.Исходящее);
	Элементы.ОтправитьПоМЭДО.Видимость = ЭтоИсходящее;
	
КонецПроцедуры

// Записать файл ЭСД на диск.
// 
// Параметры:
//  РезультатВопроса - КодВозвратаДиалога
//  ДопПараметры - Структура 
&НаКлиенте
Процедура ЗаписатьФайлЭсдНаДиск(РезультатВопроса, ДопПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанные = ПрочитатьДвоичныеДанныеФайлаЭсд();
	Если ТипЗнч(ДвоичныеДанные) <> Тип("ДвоичныеДанные") Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'В данном контейнере не обнаружен файл.'"));
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанные.Записать(ДопПараметры.ПолноеИмяФайла);
	
КонецПроцедуры

// Прочитать двоичные данные файла.
// 
// Возвращаемое значение:
//  ДвоичныеДанные - Прочитать двоичные данные файла
&НаСервере
Функция ПрочитатьДвоичныеДанныеФайлаЭсд()
	
	Если Объект.Документ.Пустая() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Данные = Документы.ДанныеДокументаМЭДО.ПолучитьДанныеДокументаМЭДО(
		Объект.Документ, "АрхивЭСД", МЭДОСтруктурыДанных.НовыйЛегкийОтвет());
	Если Данные.АрхивЭСД = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Данные.АрхивЭСД.Получить();
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервереРедакцииКонфигурации()
	
	Элементы.Организация.Заголовок = ИнтеграцияСМЭДО.Организация();
	
КонецПроцедуры

#КонецОбласти
