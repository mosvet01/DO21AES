#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получить все данные для МЭДО по документу. Или часть данных, если указано в параметре "Поля".
// 
// Параметры:
//  Документ - ОпределяемыйТип.ПредметМЭДО - Документ
//  Поля - Строка - Поля документа, через запятую, которые нужно получить, можно указать * - т.е. все, включая Ссылка.
//  				Можно получать поля через точку, т.е. передавать Поля, как часть запроса для ВЫБРАТЬ.
//  ДанныеОтвета - см. МЭДОСтруктурыДанных.НовыйОтвет.
// 
// Возвращаемое значение:
//  Структура - Поля зависят переданного параметра Поля 
Функция ПолучитьДанныеДокументаМЭДО(Документ, Поля, ДанныеОтвета) Экспорт
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		МЭДО.ЗаписьВЖурналСобытий(
			Перечисления.УровниСобытийМЭДО.Ошибка, 
			НСтр("ru = 'Пустой документ'"),
			НСтр("ru = 'Не указан документ'"),
			НСтр("ru = 'Для получения данных МЭДО по документу не указан сам документ'"),
			ДанныеОтвета);
		Возврат Новый Структура();
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	*
		|ИЗ
		|	Документ.ДанныеДокументаМЭДО КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Документ = &Документ");
	Если Поля <> "*" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "*", Поля);
	КонецЕсли;
	Запрос.УстановитьПараметр("Документ", Документ);
	
	Возврат МЭДОСтруктурыДанных.РезультатЗапросаВСтруктуру(Запрос.Выполнить());
	
КонецФункции

// Обертка - Получить объект данных документа, если он есть, если нет, то создается новый.
// 
// Параметры:
//  Документ - ОпределяемыйТип.ПредметМЭДО - Документ
//  ДанныеОтвета - см. МЭДОСтруктурыДанных.НовыйОтвет.
// 
// Возвращаемое значение:
//  ДокументОбъект.ДанныеДокументаМЭДО
Функция ПолучитьОбъектДанныхДокумента(Документ, ДанныеОтвета) Экспорт
	
	ДанныеДокументаВИБ = ПолучитьДанныеДокументаМЭДО(Документ, "Ссылка", ДанныеОтвета);
	Если Не ДанныеОтвета.Успех Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеДокументаВИБ.Ссылка) Тогда
		Возврат ДанныеДокументаВИБ.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	ДанныеОбъект = СоздатьДокумент();
	ДанныеОбъект.Документ = Документ;
	
	Возврат ДанныеОбъект;
	
КонецФункции

// Записать объект данных документа, в случае ошибке в ДанныеОтвета выдать подробное описание и записать в лог.
// На вход из ДанныеОтвета может придти файл контейнера, который будет тогда тоже записан.
// 
// Параметры:
//  ДанныеОбъект - ДокументОбъект.ДанныеДокументаМЭДО
//  ДанныеОтвета - см. МЭДОСтруктурыДанных.НовыйОтвет.
// 
Процедура ЗаписатьОбъектДанныхДокумента(ДанныеОбъект, ДанныеОтвета) Экспорт
	
	Если ДанныеОтвета.Свойство("Файл") И ЗначениеЗаполнено(ДанныеОтвета.Файл.ЛокальноеИмя) 
		И ТипЗнч(ДанныеОтвета.Файл.ДвоичныеДанные) = Тип("ДвоичныеДанные") Тогда
		ДанныеОбъект.АрхивЭСД = Новый ХранилищеЗначения(ДанныеОтвета.Файл.ДвоичныеДанные);
		ДанныеОбъект.ИмяАрхиваЭСД = ДанныеОтвета.Файл.ЛокальноеИмя;
	КонецЕсли;
	
	Если ДанныеОбъект.Модифицированность() Или ДанныеОбъект.ЭтоНовый() Тогда
		Попытка
			ДанныеОбъект.Записать();
		Исключение
			МЭДО.ЗаписьВЖурналСобытий(
				Перечисления.УровниСобытийМЭДО.Ошибка,
				ДанныеОбъект.Документ,
				Текст_ОшибкаЗаписиДанныхДокумента(),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),
				ДанныеОтвета);
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция Текст_ОшибкаЗаписиДанныхДокумента()
	Возврат НСтр("ru = 'Ошибка записи ""Данных документа МЭДО""'");
КонецФункции

#КонецОбласти

#КонецЕсли
