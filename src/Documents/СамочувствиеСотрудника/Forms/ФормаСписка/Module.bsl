#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("РежимМоеСамочувствие") И Параметры.РежимМоеСамочувствие Тогда 
		РежимМоеСамочувствие = Истина;
		Список.Параметры.УстановитьЗначениеПараметра(
			"ОтборСотрудник", ПользователиКлиентСервер.ТекущийПользователь());
		
		Элементы.ОтборПодразделение.Видимость = Ложь;
		Элементы.Сотрудник.Видимость = Ложь;
		Элементы.Подразделение.Видимость = Ложь;
	КонецЕсли;
	
	ВариантОтбора = "ЗаДень";
	// Отбор по дате.
	УстановитьОтборПоДате();
	
	Если Не РежимМоеСамочувствие Тогда 
		// Отбор по подразделению
		УстановитьОтборПодразделение();
	КонецЕсли;
	
	// Отображать удаленные - при первом открытии формы нужно не отображать удаленные.
	УстановитьОтборПоказыватьУдаленные();
	Делопроизводство.СписокДокументовУсловноеОформлениеПомеченныхНаУдаление(Список);
	
	ОтборПоТемпературе = "Все";
	// Отбор по температуре.
	УстановитьОтборПоТемпературе();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	// Отбор по дате.
	УстановитьОтборПоДате();
	// Отбор по подразделению
	УстановитьОтборПодразделение();
	// Отображать удаленные - при первом открытии формы нужно не отображать удаленные.
	УстановитьОтборПоказыватьУдаленные();
	
	// Отбор по температуре.
	УстановитьОтборПоТемпературе();
	
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
		Элементы.ВариантОтбора, ВариантОтбора, "ЗаДень");
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
		Элементы.ОтборПодразделение, ОтборПодразделение);
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
		Элементы.ОтборПоТемпературе, ОтборПоТемпературе, "Все");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантОтбораПриИзменении(Элемент)
	
	УстановитьОтборПоДате();
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
		Элементы.ВариантОтбора, ВариантОтбора, "ЗаДень");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборДатаПриИзменении(Элемент)
	
	УстановитьОтборПоДате();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	
	УстановитьОтборПодразделение();
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
		Элементы.ОтборПодразделение, ОтборПодразделение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоТемпературеПриИзменении(Элемент)
	
	УстановитьОтборПоТемпературе();
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
		Элементы.ОтборПоТемпературе, ОтборПоТемпературе, "Все");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьОтчеты(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда 
		КлючУникальности = ТекущиеДанные.Ссылка;
	Иначе 
		КлючУникальности = "";
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыФормы.Вставить("КлючВарианта", "Самочувствие сотрудников");
	ОткрытьФорму("Отчет.КонтрольСамочувствияСотрудников.ФормаОбъекта", 
		ПараметрыФормы, ЭтаФорма, ПараметрыФормы.КлючВарианта + КлючУникальности);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	УстановитьОтборПоказыватьУдаленные();
	
КонецПроцедуры

&НаКлиенте
Процедура УчитыватьИерархиюПодразделений(Команда)
	
	УчитыватьИерархиюПодразделений = Не УчитыватьИерархиюПодразделений;
	УстановитьОтборПодразделение();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборПоДате()
	
	Если Не ЗначениеЗаполнено(ВариантОтбора) Тогда
		ВариантОтбора = "ЗаДень";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОтборДата) Тогда
		ПериодСегодня = Новый СтандартныйПериод(ВариантСтандартногоПериода.Сегодня);
		ОтборДата = ПериодСегодня.ДатаНачала;
	КонецЕсли;
	
	// Установка отбора в соответствии с вариантом отбора по датам
	Если ВариантОтбора = "Все" Тогда
		
		Если РежимМоеСамочувствие Тогда 
			Заголовок = НСтр("ru = 'Мое самочувствие'");
		Иначе 
			Заголовок = НСтр("ru = 'Все самочувствия сотрудников'");
		КонецЕсли;
		
		ПараметрНачалоДняОтбора = Список.Параметры.НайтиЗначениеПараметра(
			Новый ПараметрКомпоновкиДанных("НачалоДняОтбора"));
		ПараметрНачалоДняОтбора.Использование = Ложь;
		ПараметрКонецДняОтбора = Список.Параметры.НайтиЗначениеПараметра(
			Новый ПараметрКомпоновкиДанных("КонецДняОтбора"));
		ПараметрКонецДняОтбора.Использование = Ложь;
			
	ИначеЕсли ВариантОтбора = "ЗаДень" Тогда
		
		Если РежимМоеСамочувствие Тогда 
			ТекстЗаголовок = НСтр("ru = 'Мое самочувствие за %1 года'");
		Иначе 
			ТекстЗаголовок = НСтр("ru = 'Самочувствие сотрудников за %1 года'");
		КонецЕсли;
		
		Заголовок = СтрШаблон(ТекстЗаголовок, Формат(ОтборДата, "ДФ='dd MMMM yyyy'"));
		Список.Параметры.УстановитьЗначениеПараметра("НачалоДняОтбора", НачалоДня(ОтборДата));
		Список.Параметры.УстановитьЗначениеПараметра("КонецДняОтбора", КонецДня(ОтборДата));
		
	ИначеЕсли ВариантОтбора = "ЗаНеделю" Тогда
		Если РежимМоеСамочувствие Тогда 
			ТекстЗаголовок = НСтр("ru = 'Мое самочувствие с %1 по %2'");
		Иначе 
			ТекстЗаголовок = НСтр("ru = 'Самочувствие сотрудников с %1 по %2'");
		КонецЕсли;
		
		НачалоДняОтбора = НачалоНедели(ОтборДата);
		КонецДняОтбора = КонецНедели(ОтборДата);
		Заголовок = СтрШаблон(ТекстЗаголовок,
			Формат(НачалоДняОтбора, "ДФ='dd MMMM yyyy'"),
			Формат(КонецДняОтбора, "ДФ='dd MMMM yyyy'"));
		Список.Параметры.УстановитьЗначениеПараметра("НачалоДняОтбора", НачалоДняОтбора);
		Список.Параметры.УстановитьЗначениеПараметра("КонецДняОтбора", КонецДняОтбора);
		
	ИначеЕсли ВариантОтбора = "ЗаМесяц" Тогда
		
		Если РежимМоеСамочувствие Тогда 
			ТекстЗаголовок = НСтр("ru = 'Мое самочувствие за %1 года'");
		Иначе 
			ТекстЗаголовок = НСтр("ru = 'Самочувствие сотрудников за %1 года'");
		КонецЕсли;
		
		Заголовок = СтрШаблон(ТекстЗаголовок, НРег(Формат(ОтборДата, "ДФ='MMMM yyyy'")));
		Список.Параметры.УстановитьЗначениеПараметра("НачалоДняОтбора", НачалоМесяца(ОтборДата));
		Список.Параметры.УстановитьЗначениеПараметра("КонецДняОтбора", КонецМесяца(ОтборДата));
		
	ИначеЕсли ВариантОтбора = "ЗаГод" Тогда
		
		Если РежимМоеСамочувствие Тогда 
			ТекстЗаголовок = НСтр("ru = 'Мое самочувствие за %1 год'");
		Иначе 
			ТекстЗаголовок = НСтр("ru = 'Самочувствие сотрудников за %1 год'");
		КонецЕсли;
		Заголовок = СтрШаблон(ТекстЗаголовок, НРег(Формат(ОтборДата, "ДФ='yyyy'")));
		Список.Параметры.УстановитьЗначениеПараметра("НачалоДняОтбора", НачалоГода(ОтборДата));
		Список.Параметры.УстановитьЗначениеПараметра("КонецДняОтбора", КонецГода(ОтборДата));
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПодразделение()
	
	ПараметрПодразделение = Список.Параметры.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("Подразделение"));
	ПараметрПодразделение.Использование = Ложь;
	
	ПараметрПодразделениеВИерархии = Список.Параметры.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("ПодразделениеВИерархии"));
	ПараметрПодразделениеВИерархии.Использование = Ложь;
	
	Элементы.УчитыватьИерархиюПодразделений.Пометка = УчитыватьИерархиюПодразделений;
	
	Если ЗначениеЗаполнено(ОтборПодразделение) И УчитыватьИерархиюПодразделений = Ложь Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Подразделение", ОтборПодразделение);
	ИначеЕсли ЗначениеЗаполнено(ОтборПодразделение) И УчитыватьИерархиюПодразделений = Истина Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ПодразделениеВИерархии", ОтборПодразделение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоказыватьУдаленные()
	
	Параметр = Список.Параметры.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("ОтборПоказыватьУдаленные"));
	Параметр.Использование = Ложь;
	
	Элементы.ФормаПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	
	Если Не ПоказыватьУдаленные Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ОтборПоказыватьУдаленные", Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоТемпературе()
	
	Если Не ЗначениеЗаполнено(ОтборПоТемпературе) Тогда
		ОтборПоТемпературе = "Все";
	КонецЕсли;
	
	Если ОтборПоТемпературе = "Все" Тогда
		
		ПараметрОтборПоТемпературе = Список.Параметры.НайтиЗначениеПараметра(
			Новый ПараметрКомпоновкиДанных("ПовышеннаяТемпература"));
		ПараметрОтборПоТемпературе.Использование = Ложь;
		
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("ПовышеннаяТемпература", Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

