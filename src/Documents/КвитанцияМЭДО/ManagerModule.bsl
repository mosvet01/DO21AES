// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("ИдентификаторКвитанции");
	Поля.Добавить("ИдентификаторСообщения");
	Поля.Добавить("Предмет");
	Поля.Добавить("Направление");
	
КонецПроцедуры

// Обработка получения представления.
// 
// Параметры:
//  Данные - Структура - Данные:
//   * ИдентификаторКвитанции - Строка
//   * ИдентификаторСообщения - Строка
//   * Предмет - ОпределяемыйТип.ПредметКвитанцииМЭДО
//   * Направление - ПеречислениеСсылка.НаправленияСообщенийМЭДО
//  Представление - Строка - Представление
//  СтандартнаяОбработка - Булево - Стандартная обработка
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Представление = СтрШаблон(
		НСтр("ru = '%1 квитанция МЭДО %2 (на %3)'"), 
		Перечисления.НаправленияСообщенийМЭДО.ЖенскийРод(Данные.Направление),
		Данные.ИдентификаторКвитанции,
		?(ЗначениеЗаполнено(Данные.Предмет), Данные.Предмет, Данные.ИдентификаторСообщения));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Найти квитанцию по предмету и идентификатору.
// 
// Параметры:
//  ИдентификаторСообщения - Строка - Идентификатор сообщения.
//  Направление - ПеречислениеСсылка.НаправленияСообщенийМЭДО
// 
// Возвращаемое значение:
//  ДокументСсылка.КвитанцияМЭДО
Функция НайтиКвитанцию(ИдентификаторСообщения, Направление) Экспорт

	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Квитанции.Ссылка КАК Квитанция
		|ИЗ
		|	Документ.КвитанцияМЭДО КАК Квитанции
		|ГДЕ
		|	Квитанции.ИдентификаторСообщения = &ИдентификаторСообщения
		|	И Квитанции.Направление = &Направление
		|	И НЕ Квитанции.Ссылка.ПометкаУдаления");
	// Помеченные на удаление пусть остаются, перезаписывать не будем, могут пригодиться при расследовании ошибок.
	Запрос.УстановитьПараметр("Направление", Направление);
	Запрос.УстановитьПараметр("ИдентификаторСообщения", ИдентификаторСообщения);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Квитанция;
	КонецЕсли;
	
	Возврат ПустаяСсылка();
	
КонецФункции

#КонецОбласти

#КонецЕсли