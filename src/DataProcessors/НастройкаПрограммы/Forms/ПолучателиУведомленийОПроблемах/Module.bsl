
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(Параметры.НастраиваемыеРазделы) = Тип("Массив")
		И Параметры.НастраиваемыеРазделы.Количество() > 0 Тогда
		
		НастраиваемыеРазделы.ЗагрузитьЗначения(Параметры.НастраиваемыеРазделы);
		
	Иначе
		
		МассивРазделов = Новый Массив;
		Если ПолучитьФункциональнуюОпцию("ИспользованиеВстроеннойПочты") Тогда
			МассивРазделов.Добавить(Перечисления.РазделыУведомленийОПроблемах.Почта);
		КонецЕсли;
		Если ПолучитьФункциональнуюОпцию("ИспользоватьМобильныеКлиенты") Тогда
			МассивРазделов.Добавить(Перечисления.РазделыУведомленийОПроблемах.ОбменСМобильными);
		КонецЕсли;
		МассивРазделов.Добавить(Перечисления.РазделыУведомленийОПроблемах.Администрирование);
		Если ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭД") Тогда
			МассивРазделов.Добавить(Перечисления.РазделыУведомленийОПроблемах.ПриемПоЭДО);
			МассивРазделов.Добавить(Перечисления.РазделыУведомленийОПроблемах.ОтправкаПоЭДО);
		КонецЕсли;
		Если РаботаСФайламиВызовСервера.ПолучитьИспользоватьРаспознавание() Тогда
			МассивРазделов.Добавить(Перечисления.РазделыУведомленийОПроблемах.Распознавание);
		КонецЕсли;
		
		НастраиваемыеРазделы.ЗагрузитьЗначения(МассивРазделов);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ЗаголовокФормы) Тогда
		Заголовок = Параметры.ЗаголовокФормы;
	КонецЕсли;
	
	ЗаполнитьТаблицуПолучателей();
	
	УстановитьВидимостьЭлементовФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыПолучателей

&НаКлиенте
Процедура ПолучателиУведомленийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущиеДанные.Получатель = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	
	Для Каждого Раздел Из НастраиваемыеРазделы.ВыгрузитьЗначения() Цикл
		ИмяКолонки = ИмяКолонкиПоРазделу(Раздел);
		ТекущиеДанные[ИмяКолонки] = Истина;
	КонецЦикла;
	
	ЗаполнитьДополнительныеПараметрыСтрокиПолучателя(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиУведомленийПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПодобратьПолучателей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиУведомленийПолучательАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СформироватьДанныеВыбораПолучателя(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиУведомленийПолучательОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	СформироватьДанныеВыбораПолучателя(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиУведомленийПолучательПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПолучателиУведомлений.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ЗаполнитьДополнительныеПараметрыСтрокиПолучателя(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаПодобратьПолучателей(Команда)
	
	ПодобратьПолучателей();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранитьНастройки(Команда)
	
	Если Не ЗаписьВозможна() Тогда
		Возврат;
	КонецЕсли;
	
	РазделыБезПолучателей = НастраиваемыеРазделы.ВыгрузитьЗначения();
	
	Для Каждого СтрокаПолучателя Из ПолучателиУведомлений Цикл
		Для Каждого Раздел Из НастраиваемыеРазделы.ВыгрузитьЗначения() Цикл
			ИмяКолонки = ИмяКолонкиПоРазделу(Раздел);
			Если СтрокаПолучателя[ИмяКолонки] Тогда
				ИндексРаздела = РазделыБезПолучателей.Найти(Раздел);
				Если ИндексРаздела <> Неопределено Тогда
					РазделыБезПолучателей.Удалить(ИндексРаздела);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если РазделыБезПолучателей.Количество() = 0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если РазделыБезПолучателей.Количество() > 0 Тогда
		
		НазванияРазделов = Новый Массив;
		
		Для Каждого Раздел Из РазделыБезПолучателей Цикл
			НазванияРазделов.Добавить(СтрШаблон(НСтр("ru = '""%1""'"), Раздел));
		КонецЦикла;
		
		ТекстВопроса = 
			СтрШаблон(НСтр("ru = 'Для следующих разделов не выбрано ни одного получателя уведомлений о проблемах: %1.'"),
				СтрСоединить(НазванияРазделов, ", "))
			+ Символы.ПС
			+ НСтр("ru = 'Сохранить настройки в таком виде?'");
		
		ОповещениеООтветеНаВопрос = Новый ОписаниеОповещения(
			"ЗаписатьИЗакрытьПослеОтветаООтсутсвииПолучателей", ЭтотОбъект);
		
		ПоказатьВопрос(
			ОповещениеООтветеНаВопрос,
			ТекстВопроса,
			РежимДиалогаВопрос.ДаНет, , ,
			НСтр("ru = 'Нет получателей'"));
		
	Иначе
		
		ЗаписатьИЗакрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьПослеОтветаООтсутсвииПолучателей(Результат, ДопПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть()
	
	ЗаписатьСписокПолучателей();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуПолучателей()
	
	ПолучателиУведомлений.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПолучателиУведомленийОПроблемах.Получатель КАК Получатель,
		|	ПолучателиУведомленийОПроблемах.Раздел КАК Раздел
		|ИЗ
		|	РегистрСведений.ПолучателиУведомленийОПроблемах КАК ПолучателиУведомленийОПроблемах
		|ГДЕ
		|	ПолучателиУведомленийОПроблемах.Раздел В(&НастраиваемыеРазделы)
		|ИТОГИ ПО
		|	Получатель";
	Запрос.УстановитьПараметр("НастраиваемыеРазделы", НастраиваемыеРазделы.ВыгрузитьЗначения());
	
	ВыборкаПолучателей = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПолучателей.Следующий() Цикл
		
		СтрокаПолучателя = ПолучателиУведомлений.Добавить();
		
		СтрокаПолучателя.Получатель = ВыборкаПолучателей.Получатель;
		
		ВыборкаРазделов = ВыборкаПолучателей.Выбрать();
		
		Пока ВыборкаРазделов.Следующий() Цикл
			
			ИмяКолонки = ИмяКолонкиПоРазделу(ВыборкаРазделов.Раздел);
			СтрокаПолучателя[ИмяКолонки] = Истина;
			
		КонецЦикла;
		
		ЗаполнитьДополнительныеПараметрыСтрокиПолучателя(СтрокаПолучателя);
		
	КонецЦикла;
	
	ПолучателиУведомлений.Сортировать("НомерКартинки, ПредставлениеПолучателя");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДополнительныеПараметрыСтрокиПолучателя(СтрокаПолучателя)
	
	СтрокаПолучателя.НомерКартинки = 10;
	Если ЗначениеЗаполнено(СтрокаПолучателя.Получатель) Тогда
		Если ТипЗнч(СтрокаПолучателя.Получатель) = Тип("СправочникСсылка.Пользователи") Тогда
			СтрокаПолучателя.НомерКартинки = 5;
		ИначеЕсли ТипЗнч(СтрокаПолучателя.Получатель) = Тип("СправочникСсылка.ПолныеРоли") Тогда
			СтрокаПолучателя.НомерКартинки = 4;
		КонецЕсли;
	КонецЕсли;
	
	СтрокаПолучателя.ПредставлениеПолучателя = Строка(СтрокаПолучателя.Получатель);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовФормы()
	
	МассивРазделов = НастраиваемыеРазделы.ВыгрузитьЗначения();
	
	Если МассивРазделов.Найти(Перечисления.РазделыУведомленийОПроблемах.Почта) = Неопределено Тогда
		Элементы.ПолучателиУведомленийУведомлятьОПроблемахПочты.Видимость = Ложь;
	КонецЕсли;
	Если МассивРазделов.Найти(Перечисления.РазделыУведомленийОПроблемах.ОбменСМобильными) = Неопределено Тогда
		Элементы.ПолучателиУведомленийУведомлятьОПроблемахОбменаСМобильными.Видимость = Ложь;
	КонецЕсли;
	Если МассивРазделов.Найти(Перечисления.РазделыУведомленийОПроблемах.Администрирование) = Неопределено Тогда
		Элементы.ПолучателиУведомленийУведомлятьОПроблемахАдминистрирования.Видимость = Ложь;
	КонецЕсли;
	Если МассивРазделов.Найти(Перечисления.РазделыУведомленийОПроблемах.ОтправкаПоЭДО) = Неопределено Тогда
		Элементы.ПолучателиУведомленийУведомлятьОПроблемахОтправкиЭДО.Видимость = Ложь;
	КонецЕсли;
	Если МассивРазделов.Найти(Перечисления.РазделыУведомленийОПроблемах.ПриемПоЭДО) = Неопределено Тогда
		Элементы.ПолучателиУведомленийУведомлятьОПроблемахПриемаЭДО.Видимость = Ложь;
	КонецЕсли;
	Если МассивРазделов.Найти(Перечисления.РазделыУведомленийОПроблемах.Распознавание) = Неопределено Тогда
		Элементы.ПолучателиУведомленийУведомлятьОПроблемахРаспознавания.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьПолучателей()
	
	ВыбранныеАдресаты = Новый Массив;
	
	Для Каждого СтрокаПолучателя Из ПолучателиУведомлений Цикл
		Если ЗначениеЗаполнено(СтрокаПолучателя.Получатель) Тогда
			ВыбранныеАдресаты.Добавить(СтрокаПолучателя.Получатель);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", 2);
	ПараметрыФормы.Вставить("УпрощенныйИнтерфейс", Истина);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Истина);
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Подбор получателей оповещений о проблемах'"));
	ПараметрыФормы.Вставить("ЗаголовокСпискаВыбранных", НСтр("ru = 'Выбранные пользователи и роли:'"));
	ПараметрыФормы.Вставить("ЗаголовокСпискаАдреснойКниги", НСтр("ru = 'Все пользователи и роли:'"));
	ПараметрыФормы.Вставить("ВыбранныеАдресаты", ВыбранныеАдресаты);
	ПараметрыФормы.Вставить("КонтролироватьДублиАдресатов", Истина);
	
	ОписаниеОповещенияОПодборе = Новый ОписаниеОповещения(
		"ЗавершениеПодбораПолучателей", ЭтотОбъект);
	
	РаботаСАдреснойКнигойКлиент.ВыбратьАдресатов(ПараметрыФормы, ЭтотОбъект, ОписаниеОповещенияОПодборе);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеПодбораПолучателей(Получатели, ДополнительныеПараметры) Экспорт
	
	Если Получатели = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Получатель Из Получатели Цикл
		СтрокиПолучателя = 
			ПолучателиУведомлений.НайтиСтроки(Новый Структура("Получатель", Получатель));
		
		Если СтрокиПолучателя.Количество() = 0 Тогда
			НоваяСтрокаПолучателя = ПолучателиУведомлений.Добавить();
			
			НоваяСтрокаПолучателя.Получатель = Получатель;
			
			Для Каждого Раздел Из НастраиваемыеРазделы.ВыгрузитьЗначения() Цикл
				ИмяКолонки = ИмяКолонкиПоРазделу(Раздел);
				НоваяСтрокаПолучателя[ИмяКолонки] = Истина;
			КонецЦикла;
			
			ЗаполнитьДополнительныеПараметрыСтрокиПолучателя(НоваяСтрокаПолучателя);
		КонецЕсли;
	КонецЦикла;
	
	СтрокиКУдалению = Новый Массив;
	
	Для каждого СтрокаПолучателя Из ПолучателиУведомлений Цикл
		Если Получатели.Найти(СтрокаПолучателя.Получатель) = Неопределено Тогда
			СтрокиКУдалению.Добавить(СтрокаПолучателя);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		ПолучателиУведомлений.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
	СтрокиСНезаполненнымПолучателем =
		ПолучателиУведомлений.НайтиСтроки(
			Новый Структура(
				"Получатель",
				ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка")));
	
	Для Каждого СтрокаПустая Из СтрокиСНезаполненнымПолучателем Цикл
		ПолучателиУведомлений.Удалить(СтрокаПустая);
	КонецЦикла;
	
	ПолучателиУведомлений.Сортировать("НомерКартинки, ПредставлениеПолучателя");
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДанныеВыбораПолучателя(Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ДополнениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПолныеРоли");
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбора(Текст, ДополнениеТипа);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ЗаписьВозможна()
	
	МожноЗаписать = Истина;
	
	ВстреченныеПолучатели = Новый Соответствие;
	
	Для Каждого СтрокаПолучателя Из ПолучателиУведомлений Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаПолучателя.Получатель) Тогда
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Есть пустые получатели уведомлений. Заполните получателя или удалите строку.'"), ,
				СтрШаблон("ПолучателиУведомлений[%1].Получатель",
					ПолучателиУведомлений.Индекс(СтрокаПолучателя)));
			
			МожноЗаписать = Ложь;
			
		Иначе
			
			Если ВстреченныеПолучатели.Получить(СтрокаПолучателя.Получатель) = Неопределено Тогда
				ВстреченныеПолучатели.Вставить(СтрокаПолучателя.Получатель, Истина);
			Иначе
				ОбщегоНазначенияКлиент.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru = '%1 встречается в списке получателей более одного раза. Удалите повторные строки.'"),
						СтрокаПолучателя.Получатель), ,
					СтрШаблон("ПолучателиУведомлений[%1].Получатель",
						ПолучателиУведомлений.Индекс(СтрокаПолучателя)));
				
				МожноЗаписать = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МожноЗаписать;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяКолонкиПоРазделу(Раздел)
	
	Если Раздел =
			ПредопределенноеЗначение("Перечисление.РазделыУведомленийОПроблемах.Почта") Тогда
		Возврат "УведомлятьОПроблемахПочты";
	ИначеЕсли Раздел =
			ПредопределенноеЗначение("Перечисление.РазделыУведомленийОПроблемах.ОбменСМобильными") Тогда
		Возврат "УведомлятьОПроблемахОбменаСМобильными";
	ИначеЕсли Раздел =
			ПредопределенноеЗначение("Перечисление.РазделыУведомленийОПроблемах.Администрирование") Тогда
		Возврат "УведомлятьОПроблемахАдминистрирования";
	ИначеЕсли Раздел =
			ПредопределенноеЗначение("Перечисление.РазделыУведомленийОПроблемах.ПриемПоЭДО") Тогда
		Возврат "УведомлятьОПроблемахПриемаЭДО";
	ИначеЕсли Раздел =
			ПредопределенноеЗначение("Перечисление.РазделыУведомленийОПроблемах.ОтправкаПоЭДО") Тогда
		Возврат "УведомлятьОПроблемахОтправкиЭДО";
	ИначеЕсли Раздел =
			ПредопределенноеЗначение("Перечисление.РазделыУведомленийОПроблемах.Распознавание") Тогда
		Возврат "УведомлятьОПроблемахРаспознавания";
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаписатьСписокПолучателей()
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПолучателиУведомленийОПроблемах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПолучателиУведомленийОПроблемах.Получатель КАК Получатель,
		|	ПолучателиУведомленийОПроблемах.Раздел КАК Раздел
		|ИЗ
		|	РегистрСведений.ПолучателиУведомленийОПроблемах КАК ПолучателиУведомленийОПроблемах
		|ГДЕ
		|	ПолучателиУведомленийОПроблемах.Раздел В(&НастраиваемыеРазделы)";
	
	Запрос.УстановитьПараметр("НастраиваемыеРазделы", НастраиваемыеРазделы.ВыгрузитьЗначения());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НачатьТранзакцию();
	Попытка
		
		Блокировка.Заблокировать();
		
		Пока Выборка.Следующий() Цикл
			
			МенеджерЗаписи = РегистрыСведений.ПолучателиУведомленийОПроблемах.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Получатель = Выборка.Получатель;
			МенеджерЗаписи.Раздел = Выборка.Раздел;
			МенеджерЗаписи.Прочитать();
			
			Если МенеджерЗаписи.Выбран() Тогда
				МенеджерЗаписи.Удалить();
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого СтрокаПолучателя Из ПолучателиУведомлений Цикл
			Для Каждого Раздел Из НастраиваемыеРазделы.ВыгрузитьЗначения() Цикл
				Если СтрокаПолучателя[ИмяКолонкиПоРазделу(Раздел)] = Истина Тогда
					МенеджерЗаписи = РегистрыСведений.ПолучателиУведомленийОПроблемах.СоздатьМенеджерЗаписи();
					МенеджерЗаписи.Получатель = СтрокаПолучателя.Получатель;
					МенеджерЗаписи.Раздел = Раздел;
					
					МенеджерЗаписи.Записать();
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти
