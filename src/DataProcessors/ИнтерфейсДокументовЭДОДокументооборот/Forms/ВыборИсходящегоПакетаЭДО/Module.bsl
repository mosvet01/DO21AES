
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Документ) Тогда
		
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Параметры.Документ, "Организация, Контрагент");
		
		Организация = РеквизитыДокумента.Организация;
		Контрагент = РеквизитыДокумента.Контрагент;
		ТолькоРедактируемые = Истина;
		
	Иначе
		Организация = Параметры.Организация;
		Контрагент = Параметры.Контрагент;
		ТолькоРедактируемые = Параметры.ТолькоРедактируемые;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Организация) И ЗначениеЗаполнено(Параметры.Контрагент) Тогда
		Элементы.ДеревоПакетовГруппаОрганизацияКонтрагент.Видимость = Ложь;
	КонецЕсли;
	
	Если ТолькоРедактируемые Тогда
		Элементы.ДеревоПакетовРедактируемый.Видимость = Ложь;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	ЗаполнитьДеревоПакетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для Каждого Строка Из ДеревоПакетов.ПолучитьЭлементы() Цикл
		Элементы.ДеревоПакетов.Развернуть(Строка.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДеревоПакетовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Закрыть(ВыбранныйПакет());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Закрыть(ВыбранныйПакет())
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоПакетов.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоПакетов.ИдентификаторПакета");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоПакетов.Документ");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт",
		Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста, , , Истина));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПакетов()
	
	ДеревоПакетов.ПолучитьЭлементы().Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПакетыЭДОДокументооборот.ИдентификаторПакета КАК ИдентификаторПакета,
		|	ПакетыЭДОДокументооборот.Организация КАК Организация,
		|	ПакетыЭДОДокументооборот.Контрагент КАК Контрагент,
		|	ПакетыЭДОДокументооборот.ИдентификаторПакетаБЭД = &ПустойИдентификатор КАК Редактируемый,
		|	СоставПакетовЭДОДокументооборот.Документ
		|ИЗ
		|	РегистрСведений.ПакетыЭДОДокументооборот КАК ПакетыЭДОДокументооборот
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставПакетовЭДОДокументооборот КАК СоставПакетовЭДОДокументооборот
		|		ПО ПакетыЭДОДокументооборот.ИдентификаторПакета = СоставПакетовЭДОДокументооборот.ИдентификаторПакета
		|ГДЕ
		|	&ОтборОрганизаций
		|	И &ОтборКонтрагентов
		|	И &ОтборРедактируемых
		|ИТОГИ
		|	МАКСИМУМ(Организация) КАК Организация,
		|	МАКСИМУМ(Контрагент) КАК Контрагент
		|ПО
		|	ИдентификаторПакета";
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&ОтборОрганизаций",
			"ПакетыЭДОДокументооборот.Организация = &Организация");
		
		Запрос.УстановитьПараметр("Организация", Организация);
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&ОтборОрганизаций",
			"Истина");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&ОтборКонтрагентов",
			"ПакетыЭДОДокументооборот.Контрагент = &Контрагент");
		
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&ОтборКонтрагентов",
			"Истина");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПустойИдентификатор", УникальныйИдентификаторПустой());
	
	Если ТолькоРедактируемые Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&ОтборРедактируемых",
			"ПакетыЭДОДокументооборот.ИдентификаторПакетаБЭД = &ПустойИдентификатор");
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&ОтборРедактируемых",
			"Истина");
	КонецЕсли;
	
	ВыборкаПакетов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПакетов.Следующий() Цикл
		
		СтрокаПакета = ДеревоПакетов.ПолучитьЭлементы().Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрокаПакета, ВыборкаПакетов);
		
		ВыборкаДокументов = ВыборкаПакетов.Выбрать();
		
		СтрокаПакета.ПредставлениеЭлемента = СтрШаблон(
			НСтр("ru = 'Пакет ЭДО (%1)'"),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 документ;;%1 документа;%1 документов;%1 документов'"),
				ВыборкаДокументов.Количество()));
		
		Пока ВыборкаДокументов.Следующий() Цикл
			
			СтрокаДокумента = СтрокаПакета.ПолучитьЭлементы().Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаДокумента, ВыборкаДокументов);
			
			СтрокаДокумента.ПредставлениеЭлемента = Строка(ВыборкаДокументов.Документ);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ВыбранныйПакет()
	
	ТекущиеДанные = Элементы.ДеревоПакетов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ТекущиеДанные.ИдентификаторПакета;
	
КонецФункции

#КонецОбласти
