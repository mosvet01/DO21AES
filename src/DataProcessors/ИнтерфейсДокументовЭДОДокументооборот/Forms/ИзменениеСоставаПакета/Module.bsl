
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ИдентификаторПакета) Тогда
		ЗаполнитьПоПакетуЭДО(Отказ);
	ИначеЕсли ТипЗнч(Параметры.ДокументыДляСозданияПакета) = Тип("Массив")
		И Параметры.ДокументыДляСозданияПакета.Количество() > 0 Тогда
		
		ЗаполнитьПоДокументуКДобавлению(Отказ);
	Иначе
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Неверные параметры открытия формы изменения состава пакета ЭДО.'"));
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	Если СозданиеПакета Тогда
		Заголовок = НСтр("ru = 'Создание пакета ЭДО'");
	Иначе
		Заголовок = НСтр("ru = 'Изменение состава пакета ЭДО'")
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность И Не НеПоказыватьВопросОСохранении Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Состав пакета изменен. Сохранить изменения?'");
		ОбработчикОтвета = Новый ОписаниеОповещения("ОбработатьОтветВопросаОСохранении", ЭтотОбъект);
		ПоказатьВопрос(ОбработчикОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, ,
			КодВозвратаДиалога.Да, НСтр("ru = 'Сохранение состава пакета'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДокументыВПакетеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	УбратьДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыНеВПакетеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДобавитьДокумент();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманФормы

&НаКлиенте
Процедура ДобавитьДокументВПакет(Команда)
	
	ДобавитьДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьДокументИзПакета(Команда)
	
	УбратьДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	НеПоказыватьВопросОСохранении = Истина;
	НачатьПроверкуВозможностиЗаписи();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	НеПоказыватьВопросОСохранении = Истина;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДокументыНеВПакетеВидДокумента.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДокументыНеВПакетеДокумент.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДокументыНеВПакете.СвязанСДокументомВПакете");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт",
		Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста, , , Истина));
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДокументыВПакете.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДокументыВПакете.ДобавленВПакет");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт",
		Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста, , , , Истина));
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДокументыНеВПакете.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДокументыНеВПакете.УдаленИзПакета");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт",
		Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста, , , , Истина));
	
КонецПроцедуры

#Область КонструкторыФормы

&НаСервере
Процедура ЗаполнитьПоПакетуЭДО(Отказ)
	
	СозданиеПакета = Ложь;
	ИдентификаторПакета = Параметры.ИдентификаторПакета;
	
	ДанныеПакета = ОбменСКонтрагентамиДОСлужебный.ДанныеПакетаДокументов(ИдентификаторПакета);
	
	Организация = ДанныеПакета.Организация;
	Контрагент = ДанныеПакета.Контрагент;
	
	ЗаполнитьТаблицуВозможныхДокументов();
	ЗаполнитьТаблицыПоНачальнымДанным();
	ЗаполнитьСвязиДокументов();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДокументуКДобавлению(Отказ)
	
	СозданиеПакета = Истина;
	
	ДанныеДляПакета =
		ОбменСКонтрагентамиДОСлужебный.ДанныеДокументовДляДобавленияВПакет(Параметры.ДокументыДляСозданияПакета);
	
	Если ДанныеДляПакета.Организации.Количество() > 1 Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'К объединению в пакет выбраны документы по разным организациям.
				|В исходящий пакет ЭДО могут быть объединены документы только одной организации.'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ДанныеДляПакета.Контрагенты.Количество() > 1 Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'К объединению в пакет выбраны документы по разным контрагентам.
				|В исходящий пакет ЭДО могут быть объединены документы только одного контрагента.'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Для Каждого Направление Из ДанныеДляПакета.Направления Цикл
		Если Направление <> Перечисления.НаправленияЭДО.Исходящий Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'К объединению в пакет выбраны не исходящие документы.'"));
			Отказ = Истина;
			Возврат;
			
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Состояние Из ДанныеДляПакета.Состояния Цикл
		Если Состояние <> Перечисления.СостоянияЭДОДокументооборот.НеСформирован
			И Состояние <> Перечисления.СостоянияЭДОДокументооборот.Подписан
			И Состояние <> Перечисления.СостоянияЭДОДокументооборот.ОжидаетсяОтправка Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'К объединению в пакет выбраны документы с неподходящими состояниями.
					|В исходящий пакет ЭДО могут быть объединены документы только в состоянии ""Не начат"" и ""Подписан"".'"));
			Отказ = Истина;
			Возврат;
			
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеДляПакета.ИдентификаторыПакетов.Количество() > 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'К объединению в пакет выбраны документы уже состоящие в пакетах ЭДО.'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Организация = ДанныеДляПакета.Организации[0];
	Контрагент = ДанныеДляПакета.Контрагенты[0];
	
	ЗаполнитьТаблицуВозможныхДокументов();
	
	ДокументыНачальные = Новый Соответствие;
	
	Для Каждого Документ Из Параметры.ДокументыДляСозданияПакета Цикл
		ДокументыНачальные.Вставить(Документ, Истина);
	КонецЦикла;
	
	Для Каждого Строка Из ВсеДокументы Цикл
		Если ДокументыНачальные[Строка.Документ] <> Неопределено Тогда
			Строка.ИзначальноВПакете = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьТаблицыПоНачальнымДанным();
	ЗаполнитьСвязиДокументов();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуВозможныхДокументов()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СостояниеДокументовПоЭДОСрезПоследних.ДокументДО,
		|	ДокументыДО.ПодписанЭП,
		|	ДокументыДО.ВидДокумента,
		|	СоставПакетовЭДОДокументооборот.ИдентификаторПакета
		|ИЗ
		|	РегистрСведений.СостояниеДокументовПоЭДО.СрезПоследних(,
		|		НаправлениеЭД = ЗНАЧЕНИЕ(Перечисление.НаправленияЭДО.Исходящий)) КАК СостояниеДокументовПоЭДОСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВнутренниеДокументы КАК ДокументыДО
		|		ПО СостояниеДокументовПоЭДОСрезПоследних.ДокументДО = ДокументыДО.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставПакетовЭДОДокументооборот КАК СоставПакетовЭДОДокументооборот
		|		ПО СоставПакетовЭДОДокументооборот.Документ = СостояниеДокументовПоЭДОСрезПоследних.ДокументДО
		|ГДЕ
		|	ДокументыДО.Контрагент = &Контрагент
		|	И ДокументыДО.Организация = &Организация
		|	И СостояниеВерсииДокументаПоЭДО В (ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.НеСформирован),
		|		ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.Подписан),
		|		ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ОжидаетсяОтправка))
		|	И СоставПакетовЭДОДокументооборот.Документ ЕСТЬ NULL
		|
		|Объединить
		|
		|ВЫБРАТЬ
		|	СостояниеДокументовПоЭДОСрезПоследних.ДокументДО,
		|	ДокументыДО.ПодписанЭП,
		|	ДокументыДО.ВидДокумента,
		|	СоставПакетовЭДОДокументооборот.ИдентификаторПакета
		|ИЗ
		|	РегистрСведений.СостояниеДокументовПоЭДО.СрезПоследних(,
		|		НаправлениеЭД = ЗНАЧЕНИЕ(Перечисление.НаправленияЭДО.Исходящий)) КАК СостояниеДокументовПоЭДОСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВнутренниеДокументы КАК ДокументыДО
		|		ПО СостояниеДокументовПоЭДОСрезПоследних.ДокументДО = ДокументыДО.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставПакетовЭДОДокументооборот КАК СоставПакетовЭДОДокументооборот
		|		ПО СоставПакетовЭДОДокументооборот.Документ = СостояниеДокументовПоЭДОСрезПоследних.ДокументДО
		|ГДЕ
		|	ДокументыДО.Контрагент = &Контрагент
		|	И ДокументыДО.Организация = &Организация
		|	И СостояниеВерсииДокументаПоЭДО В (ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.НеСформирован),
		|		ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.Подписан),
		|		ЗНАЧЕНИЕ(Перечисление.СостоянияЭДОДокументооборот.ОжидаетСозданияПакетаЭДО))
		|	И СоставПакетовЭДОДокументооборот.ИдентификаторПакета = &ИдентификаторПакета
		|	И Не ДокументыДО.ПометкаУдаления";
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ИдентификаторПакета", ИдентификаторПакета);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВсеДокументы.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ВсеДокументы.Добавить();
		
		НоваяСтрока.ВидДокумента = Выборка.ВидДокумента;
		НоваяСтрока.Документ = Выборка.ДокументДО;
		НоваяСтрока.ПодписанЭП = Выборка.ПодписанЭП;
		
		Если ЗначениеЗаполнено(ИдентификаторПакета)
			И ИдентификаторПакета = Выборка.ИдентификаторПакета Тогда
			
			НоваяСтрока.ИзначальноВПакете = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыПоНачальнымДанным()
	
	ДокументыВПакете.Очистить();
	ДокументыНеВПакете.Очистить();
	
	Для Каждого Строка Из ВсеДокументы Цикл
		
		Если Строка.ИзначальноВПакете Тогда
			
			НоваяСтрока = ДокументыВПакете.Добавить();
			
		Иначе
			
			НоваяСтрока = ДокументыНеВПакете.Добавить();
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		
		Если НоваяСтрока.ПодписанЭП Тогда
			НоваяСтрока.ИндексКартинкиЭП = 2;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СвязиДокументов

&НаСервере
Процедура ЗаполнитьСвязиДокументов()
	
	Для Каждого Строка Из ДокументыНеВПакете Цикл
		Строка.СвязанСДокументомВПакете = Ложь;
	КонецЦикла;
	
	ДокументыВСоставеПакета = ДокументыВПакете.Выгрузить().ВыгрузитьКолонку("Документ");
	ДокументыНеВСоставеПакета = ДокументыНеВПакете.Выгрузить().ВыгрузитьКолонку("Документ");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Связи.Документ,
		|	Связи.СвязанныйДокумент
		|ИЗ
		|	РегистрСведений.СвязиДокументов КАК Связи
		|ГДЕ
		|	Связи.Документ В (&ДокументыВПакете)
		|	И Связи.СвязанныйДокумент В (&ДокументыНеВПакете)";
	Запрос.УстановитьПараметр("ДокументыВПакете", ДокументыВСоставеПакета);
	Запрос.УстановитьПараметр("ДокументыНеВПакете", ДокументыНеВСоставеПакета);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокиНеВПакете = ДокументыНеВПакете.НайтиСтроки(Новый Структура("Документ", Выборка.СвязанныйДокумент));
		
		Если СтрокиНеВПакете.Количество() > 0 Тогда
			СтрокиНеВПакете[0].СвязанСДокументомВПакете = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ДокументыНеВПакете.Сортировать("СвязанСДокументомВПакете Убыв, ВидДокумента Возр, Документ Возр");
	
КонецПроцедуры

#КонецОбласти

#Область ПереносДокументовМеждуСписками

&НаКлиенте
Процедура ДобавитьДокумент(Документ = Неопределено)
	
	Если Документ <> Неопределено Тогда
		
		СтрокиНеВПакете = ДокументыНеВПакете.НайтиСтроки(Новый Структура("Документ", Документ));
		
		Если СтрокиНеВПакете.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		СтрокаДобавляемого = СтрокиНеВПакете[0];
		
	Иначе
		
		СтрокаДобавляемого = Элементы.ДокументыНеВПакете.ТекущиеДанные;
		
		Если СтрокаДобавляемого = Неопределено Тогда
			Возврат
		КонецЕсли;
		
	КонецЕсли;
	
	НоваяСтрока = ДокументыВПакете.Добавить();
	
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДобавляемого);
	
	НоваяСтрока.ДобавленВПакет = Не СтрокаДобавляемого.УдаленИзПакета;
	
	ДокументыНеВПакете.Удалить(СтрокаДобавляемого);
	
	ЗаполнитьСвязиДокументов();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьДокумент(Документ = Неопределено)
	
	Если Документ <> Неопределено Тогда
		
		СтрокиВПакете = ДокументыВПакете.НайтиСтроки(Новый Структура("Документ", Документ));
		
		Если СтрокиВПакете.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		СтрокаУдаляемого = СтрокиВПакете[0];
		
	Иначе
		
		СтрокаУдаляемого = Элементы.ДокументыВПакете.ТекущиеДанные;
		
		Если СтрокаУдаляемого = Неопределено Тогда
			Возврат
		КонецЕсли;
		
	КонецЕсли;
	
	Если СозданиеПакета И Не СтрокаУдаляемого.ДобавленВПакет Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = ДокументыНеВПакете.Добавить();
	
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаУдаляемого);
	
	НоваяСтрока.УдаленИзПакета = Не СтрокаУдаляемого.ДобавленВПакет;
	
	ДокументыВПакете.Удалить(СтрокаУдаляемого);
	
	ЗаполнитьСвязиДокументов();
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаписьСоставаПакета

&НаКлиенте
Процедура ОбработатьОтветВопросаОСохранении(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		НеПоказыватьВопросОСохранении = Истина;
		Закрыть();
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		НеПоказыватьВопросОСохранении = Истина;
		НачатьПроверкуВозможностиЗаписи();
	КонецЕсли;
	
	НеПоказыватьВопросОСохранении = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьПроверкуВозможностиЗаписи()
	
	Если ДокументыВПакете.Количество() <= 1 Тогда
		
		Если СозданиеПакета Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Пакет ЭДО должен состоять минимум из двух документов!'"));
			Возврат;
		Иначе
			ОбработчикОтвета = Новый ОписаниеОповещения("ОбработатьОтветОУдаленииПакета", ЭтотОбъект);
			
			ПоказатьВопрос(ОбработчикОтвета, НСтр("ru = 'Пакет ЭДО будет удален, продолжить?'"),
				РежимДиалогаВопрос.ДаНет);
			
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	СохранитьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветОУдаленииПакета(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть()
	
	Если СозданиеПакета Тогда
		
		Если Не СоздатьПакет() Тогда
			Возврат;
		КонецЕсли;
		
	Иначе
		
		Если Не ИзменитьСоставПакета() Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Закрыть(Истина);
	
КонецПроцедуры

&НаКлиенте
Функция СоздатьПакет()
	
	ДокументыДляОбъединенияВПакет = Новый Массив;
	
	Для Каждого Строка Из ДокументыВПакете Цикл
		ДокументыДляОбъединенияВПакет.Добавить(Строка.Документ);
	КонецЦикла;
	
	РезультатСоздания = ОбменСКонтрагентамиДОСлужебныйКлиент.ОбъединитьДокументыВИсходящийПакетЭДО(
		ДокументыДляОбъединенияВПакет);
	
	Если ЗначениеЗаполнено(РезультатСоздания.ОписаниеОшибки) Тогда
		ПоказатьПредупреждение(, РезультатСоздания.ОписаниеОшибки, , НСтр("ru = 'Не удалось создать пакет ЭДО'"));
	КонецЕсли;
	
	Возврат РезультатСоздания.Успех;
	
КонецФункции

&НаКлиенте
Функция ИзменитьСоставПакета()
	
	ДокументыКДобавлениюВПакет = Новый Массив;
	ДокументыКУдалениюИзПакета = Новый Массив;
	
	Для Каждого Строка Из ДокументыВПакете Цикл
		Если Строка.ДобавленВПакет Тогда
			ДокументыКДобавлениюВПакет.Добавить(Строка.Документ);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из ДокументыНеВПакете Цикл
		Если Строка.УдаленИзПакета Тогда
			ДокументыКУдалениюИзПакета.Добавить(Строка.Документ);
		КонецЕсли;
	КонецЦикла;
	
	РезультатИзменения = ОбменСКонтрагентамиДОСлужебныйКлиент.ИзменитьСоставИсходящегоПакетаЭДО(
		ИдентификаторПакета, ДокументыКДобавлениюВПакет, ДокументыКУдалениюИзПакета);
	
	Если ЗначениеЗаполнено(РезультатИзменения.ОписаниеОшибки) Тогда
		ПоказатьПредупреждение(, РезультатИзменения.ОписаниеОшибки, , НСтр("ru = 'Не удалось изменить пакет ЭДО'"));
	КонецЕсли;
	
	Возврат РезультатИзменения.Успех;
	
КонецФункции

#КонецОбласти

#КонецОбласти
