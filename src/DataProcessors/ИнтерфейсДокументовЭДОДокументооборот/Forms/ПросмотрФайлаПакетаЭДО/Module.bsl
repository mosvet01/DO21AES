
#Область ОбработчикиСобытыйФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ФайлДО) Тогда
		
		ЗаполнитьДанныеФормыПоФайлуДО(Отказ);
		
	ИначеЕсли ЗначениеЗаполнено(Параметры.ДокументДО) Тогда
		
		ЗаполнитьДанныеФормыПоДокументуДО(Отказ);
		
	ИначеЕсли ЗначениеЗаполнено(Параметры.ИдентификаторПакета) Тогда
		
		ЗаполнитьДанныеФормыПоПакетуДокументов(Отказ);
		
	Иначе
		
		Отказ = Истина;
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Не выбраны данные для просмотра.'"));
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьОбщиеПараметрыФормы();
	
	ЕстьЭДО();
	
	ЗагрузитьНастройкиФормы();
	УстановитьОформлениеНастроекФормы();
	
	ПоказатьПредставлениеДокумента();
	
	УстановитьУсловноеОформление();
	
	Если МиграцияДанныхИзВнешнихСистемСервер.БлокироватьОбменСВнешнимиРесурсами() Тогда
		УстановитьВидимостьДоступностьПоПереходуНаНовуюВерсию();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОжидатьФормированияПредставленияДокумента();
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ЗаполнитьДанныеСертификатовДляЭДО(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновленоСостояниеЭДДО"
		И Параметр.Свойство("Документы")
		И Параметр.Документы.Найти(ДокументДО) <> Неопределено Тогда
		
		ОбновитьДанныеФормы();
		ОжидатьФормированияПредставленияДокумента();
	КонецЕсли;
	
	Если ИмяСобытия = "ИзменениеПакетовЭДОДО"
		И Параметр.Свойство("ИдентификаторыПакетов")
		И Параметр.ИдентификаторыПакетов.Найти(ИдентификаторПакетаЭДО) <> Неопределено Тогда
		
		ОбновитьДанныеФормы();
		ОжидатьФормированияПредставленияДокумента();
	КонецЕсли;
	
	Если ИмяСобытия = "ОтражениеВходящихЭДО" Тогда
		ОбработатьОповещениеООтраженииВходящихЭДО(Параметр);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДокументыПакетаЭДОПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ПослеАктивизацииСтрокиДокументаПакета", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПакетаЭДОВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ДокументыПакетаЭДО.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ДокументДОНеСоздан Тогда
		ПоказатьЗначение(, ТекущиеДанные.ЭлектронныйДокументЭДО);
	Иначе
		ПоказатьЗначение(, ТекущиеДанные.ДокументДО);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОшибкаФормированияПредставленияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьЖурналРегистрации" Тогда
		
		СтандартнаяОбработка = Ложь;
		ОтборЖурналаРегистрации = Новый Структура;
		ОтборЖурналаРегистрации.Вставить("Данные", "ЭлектронныеДокументыЭДО.ПредставлениеДанныхДокумента");
		ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации(ОтборЖурналаРегистрации, ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЭтоВизуализацияФайлаЭДО Тогда
		
		ИнтерфейсДокументовЭДОКлиент.ОткрытьФайл(ФайлЭДО, УникальныйИдентификатор, Ложь);
		
	Иначе
		
		ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляОткрытия(ФайлДО, ВерсияФайлаДО, 
			УникальныйИдентификатор);
		
		ДанныеФайла.Вставить("НеОткрыватьФормуЭДО", Истина);
		КомандыРаботыСФайламиКлиент.Открыть(ДанныеФайла, УникальныйИдентификатор);
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДокументДОНеСозданОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "СоздатьДокументДО" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ЗначениеЗаполнено(ЭлектронныйДокументЭДО) Тогда
			ОбменСКонтрагентамиДОСлужебныйКлиент.СоздатьДокументДОПоВходящемуЭДО(ЭлектронныйДокументЭДО);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

#Область КомандыНастроекОтображения

&НаКлиенте
Процедура ОтображатьОбластьКопияВерна(Команда)
	
	ОтключитьВыводКопияВерна = Не ОтключитьВыводКопияВерна;
	Элементы.ОтображатьОбластьКопияВерна.Пометка = Не ОтключитьВыводКопияВерна;
	
	ПоказатьПредставлениеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьДополнительнуюИнформацию(Команда)
	
	ОтключитьВыводДопДанных = Не ОтключитьВыводДопДанных;
	Элементы.ОтображатьДополнительнуюИнформацию.Пометка = Не ОтключитьВыводДопДанных;
	
	ПоказатьПредставлениеДокумента();
		
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьБанковскиеРеквизиты(Команда)
	
	ВыводитьБанковскиеРеквизиты = Не ВыводитьБанковскиеРеквизиты;
	Элементы.ОтображатьБанковскиеРеквизиты.Пометка = ВыводитьБанковскиеРеквизиты;
	
	ПоказатьПредставлениеДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область КомандыДействийПоЭДО

&НаКлиенте
Процедура ВыполнитьДействиеПоЭДО(Команда)
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ИмяКоманды", Команда.Имя);
	
	ОбработчикЗавершения = Новый ОписаниеОповещения("ВыполнитьДействиеПоЭДОПослеПроверкиСертификатов",
		ЭтотОбъект, ПараметрыОбработчика);
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ПроверитьНаличиеСертификатовЭДО(ЭтотОбъект, ОбработчикЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействиеПоЭДОПослеПроверкиСертификатов(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКоманды = ДополнительныеПараметры.ИмяКоманды;
	
	Если ИмяКоманды = "ПодписатьДокументЭДО" Тогда
		
		ВыполнитьДействияПоИсходящемуДокументу(Истина, Ложь, Результат);
		
	ИначеЕсли ИмяКоманды = "ПодписатьИОтправитьПоЭДО" Тогда
		
		ВыполнитьДействияПоИсходящемуДокументу(Истина, Истина, Результат);
		
	ИначеЕсли ИмяКоманды = "ПодписатьПакет" Тогда
		
		ВыполнитьДействияПоИсходящемуПакету(Истина, Ложь, Результат);
		
	ИначеЕсли ИмяКоманды = "ПодписатьИОтправитьПакет" Тогда
		
		ВыполнитьДействияПоИсходящемуПакету(Истина, Истина, Результат);
		
	ИначеЕсли ИмяКоманды = "ПринятьДокументЭДО" Тогда
		
		ПринятьВходящийДокумент(Результат);
		
	ИначеЕсли ИмяКоманды = "ПринятьВходящийПакет" Тогда
		
		ПринятьВходящийПакет(Результат);
		
	ИначеЕсли ИмяКоманды = "ОтклонитьДокументЭДО" Тогда
		
		ОтклонитьВходящийДокумент();
		
	ИначеЕсли ИмяКоманды = "ОтклонитьВходящийПакет" Тогда
		
		ОтклонитьВходящийПакет();
		
	ИначеЕсли ИмяКоманды = "АннулироватьДокументЭДО" Тогда
		
		// Аннулирование добавим позже
		
	ИначеЕсли ИмяКоманды = "ПринятьАннулированиеЭДО" Тогда
		
		// Аннулирование добавим позже
		
	ИначеЕсли ИмяКоманды = "ОтклонитьАннулированиеЭДО" Тогда
		
		// Аннулирование добавим позже
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставитьВОчередьЭДОНаОтправку(Команда)
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ПоставитьДокументыВОчередьНаОтправкуПоЭДО(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДокументДО));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьОбменПоЭДОПринудительно(Команда)
	
	ОбработчикЗавершения = Новый ОписаниеОповещения(
		"ПослеЗакрытияОбменаЭДОПринудительно", ЭтотОбъект);
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ЗакрытьДокументыПринудительно(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДокументДО),
		ОбработчикЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоЭДО(Команда)
	
	ВыполнитьДействияПоИсходящемуДокументу(Ложь, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ПакетыЭДО

&НаКлиенте
Процедура ИзменитьСоставПакетаЭДО(Команда)
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ОткрытьФормуИзмененияСоставаПакетаЭДО(ИдентификаторПакетаЭДО, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПакетЭДО(Команда)
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ОткрытьФормуСозданияПакетаЭДО(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДокументДО), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКПакетуЭДО(Команда)
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ДобавитьДокументКПакету(ДокументДО, Неопределено, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПакет(Команда)
	
	ВыполнитьДействияПоИсходящемуПакету(Ложь, Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление() Экспорт
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДокументыПакетаЭДО.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДокументыПакетаЭДО.ДокументДОНеСоздан");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаНекорректногоКонтрагента);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормыПоФайлуДО(Отказ)
	
	ФайлДО = Параметры.ФайлДО;
	ДокументДО = Параметры.ДокументДО;
	ВерсияФайлаДО = Параметры.ВерсияФайлаДО;
	
	Если Не ЗначениеЗаполнено(ФайлДО) Тогда
		Отказ = Истина;
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Не выбран файл для просмотра данных ЭД.'"));
		
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументДО) Тогда
		ДокументДО = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФайлДО, "ВладелецФайла");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВерсияФайлаДО) Тогда
		ВерсияФайлаДО = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФайлДО, "ТекущаяВерсия");
	КонецЕсли;
	
	ЭлектронныйДокументЭДО = ОбменСКонтрагентамиДОВызовСервера.ЭлектронныйДокументДокументаДО(ДокументДО);
	
	Если ЗначениеЗаполнено(ДокументДО) Тогда
		ВариантПодписания = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументДО,
			"ВидДокумента.ВариантПодписания");
	КонецЕсли;
	
	ИдентификаторПакетаЭДО = ОбменСКонтрагентамиДОСлужебный.ПакетДокумента(ДокументДО);
	
	ЗаполнитьДокументыПакета(ИдентификаторПакетаЭДО);
	
	УстановитьАктивнуюСтрокуДокументаПакета(ДокументДО);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормыПоДокументуДО(Отказ)
	
	ДокументДО = Параметры.ДокументДО;
	
	ИдентификаторПакетаЭДО = ОбменСКонтрагентамиДОСлужебный.ПакетДокумента(ДокументДО);
	
	ЗаполнитьДокументыПакета(ИдентификаторПакетаЭДО);
	
	УстановитьАктивнуюСтрокуДокументаПакета(ДокументДО);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормыПоПакетуДокументов(Отказ)
	
	ИдентификаторПакетаЭДО = Параметры.ИдентификаторПакета;
	
	ЗаполнитьДокументыПакета(ИдентификаторПакетаЭДО);
	
	Если ДокументыПакетаЭДО.Количество() = 0 Тогда
		Отказ = Истина;
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'В пакете ЭДО нет документов.'"));
		
		Возврат;
	КонецЕсли;
	
	ДокументДО = ДокументыПакетаЭДО[0].ДокументДО;
	
	УстановитьАктивнуюСтрокуДокументаПакета(ДокументДО);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументыПакета(ИдентификаторПакета = Неопределено)
	
	Если ИдентификаторПакета <> Неопределено Тогда
		ИдентификаторПакетаЭДО = ИдентификаторПакета;
	КонецЕсли;
	
	ДокументыПакетаЭДО.Очистить();
	ЕстьНеотраженныеВходящиеДокументы = Ложь;
	
	Если Не ЗначениеЗаполнено(ИдентификаторПакетаЭДО) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПакета = ОбменСКонтрагентамиДОСлужебный.ДанныеПакетаДокументов(ИдентификаторПакетаЭДО);
	
	Если Не ЗначениеЗаполнено(ДанныеПакета.ИдентификаторПакета) Тогда
		ИдентификаторПакетаЭДО = Неопределено;
		Возврат;
	КонецЕсли;
	
	Для Каждого Документ Из ДанныеПакета.Документы Цикл
		
		НоваяСтрока = ДокументыПакетаЭДО.Добавить();
		
		// Первоначально заполняем только документ ДО.
		// Остальные данные для облегчения заполняем при активизации строки в фоновом задании.
		НоваяСтрока.ДокументДО = Документ;
		НоваяСтрока.ПредставлениеДокумента = Документ;
		
	КонецЦикла;
	
	Если ДанныеПакета.Направление = Перечисления.НаправленияЭДО.Входящий Тогда
		
		НеотраженныеДокументыЭДО =
			ОбменСКонтрагентамиДОСлужебный.ДанныеНеотраженныхДокументовЭДОПакета(ИдентификаторПакетаЭДО);
		
		Для Каждого Элемент Из НеотраженныеДокументыЭДО Цикл
			
			ДокументЭДО = Элемент.Ключ;
			ДанныеДокумента = Элемент.Значение;
			
			НоваяСтрока = ДокументыПакетаЭДО.Добавить();
			
			НоваяСтрока.ЭлектронныйДокументЭДО = ДокументЭДО;
			НоваяСтрока.ДокументДОНеСоздан = Истина;
			НоваяСтрока.ПредставлениеДокумента = СтрШаблон(
				НСтр("ru = '%1 №%2 от %3 (не создан в 1С:Документооборот)'"),
				ДанныеДокумента.ВидДокумента,
				ДанныеДокумента.Номер,
				Формат(ДанныеДокумента.Дата, "ДФ=dd.MM.yyyy;"));
			
			ЕстьНеотраженныеВходящиеДокументы = Истина;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьАктивнуюСтрокуДокументаПакета(Документ)
	
	Если ДокументыПакетаЭДО.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из ДокументыПакетаЭДО Цикл
		Если Строка.ДокументДО = Документ Тогда
			Элементы.ДокументыПакетаЭДО.ТекущаяСтрока = Строка.ПолучитьИдентификатор();
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ДокументыПакетаЭДО.ТекущаяСтрока = ДокументыПакетаЭДО[0].ПолучитьИдентификатор();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОбщиеПараметрыФормы()
	
	Если ЗначениеЗаполнено(ИдентификаторПакетаЭДО) Тогда
		Элементы.ГруппаДокументыПакетаЭДО.Видимость = Истина;
	Иначе
		Элементы.ГруппаДокументыПакетаЭДО.Видимость = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИдентификаторПакетаЭДО) Тогда
		Заголовок = НСтр("ru = 'Пакет документов ЭДО'");
	ИначеЕсли ЗначениеЗаполнено(ФайлДО) Тогда
		Заголовок = Строка(ФайлДО);
	ИначеЕсли ЗначениеЗаполнено(ДокументДО) Тогда
		Заголовок = СтрШаблон(НСтр("ru = 'Обмен по ЭДО (%1)'"), ДокументДО);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеФормы()
	
	ЕстьЭДО();
	
	ЗаполнитьДокументыПакета();
	УстановитьОбщиеПараметрыФормы();
	
	Если Не ЗначениеЗаполнено(ИдентификаторПакетаЭДО) Тогда
		ПоказатьПредставлениеДокумента();
		Возврат;
	КонецЕсли;
	
	СтрокиДокумента = ДокументыПакетаЭДО.НайтиСтроки(Новый Структура("ДокументДО", ДокументДО));
	
	Если СтрокиДокумента.Количество() > 0 Тогда
		УстановитьАктивнуюСтрокуДокументаПакета(ДокументДО);
	Иначе
		ДокументДО = ДокументыПакетаЭДО[0].ДокументДО;
		ФайлДО = ДокументыПакетаЭДО[0].ФайлДО;
		ВерсияФайлаДО = ДокументыПакетаЭДО[0].ВерсияФайлаДО;
		ЭлектронныйДокументЭДО = ДокументыПакетаЭДО[0].ЭлектронныйДокументЭДО;
		ТабличныйДокументПредставления = Неопределено;
		КартинкаФайла = 0;
		ИмяФайла = "";
	КонецЕсли;
	
	ПоказатьПредставлениеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОповещениеООтраженииВходящихЭДО(Параметр)
	
	ОбработанныеДокументы = Неопределено;
	Если ТипЗнч(Параметр) <> Тип("Структура")
		Или Не Параметр.Свойство("ОбработанныеДокументы", ОбработанныеДокументы) Тогда
		
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ОбработанныеДокументы) <> Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	НужноОбновить = Ложь;
	
	Для Каждого СтрокаПакета Из ДокументыПакетаЭДО Цикл
		Если СтрокаПакета.ДокументДОНеСоздан
			И ОбработанныеДокументы.Получить(СтрокаПакета.ЭлектронныйДокументЭДО) <> Неопределено Тогда
			
			НужноОбновить = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НужноОбновить Тогда
		
		Если Не ЗначениеЗаполнено(ДокументДО) Тогда
			ДокументДО = ОбработанныеДокументы.Получить(ЭлектронныйДокументЭДО);
			
			Если Не ЗначениеЗаполнено(ДокументДО) Тогда
				ДокументДО = ДокументыПакетаЭДО[0].ДокументДО;
			КонецЕсли;
		КонецЕсли;
		
		ОбновитьДанныеФормы();
		ОжидатьФормированияПредставленияДокумента();
		
	КонецЕсли;
	
КонецПроцедуры

#Область ПредставлениеДокумента

&НаКлиенте
Функция КлючСтрокиДокументаПакета(Строка)
	
	Если Строка = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	ДокументДОСтроки = Строка.ДокументДО;
	ДокументЭДОСтроки = Строка.ЭлектронныйДокументЭДО;
	
	Если ЗначениеЗаполнено(ДокументДОСтроки) Тогда
		Возврат СтрШаблон("DM_%1", ДокументДОСтроки.УникальныйИдентификатор());
	ИначеЕсли ЗначениеЗаполнено(ДокументЭДОСтроки) Тогда
		Возврат СтрШаблон("LED_%1", ДокументЭДОСтроки.УникальныйИдентификатор());
	Иначе
		Возврат "ERROR";
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПослеАктивизацииСтрокиДокументаПакета()
	
	АктивнаяСтрокаДокумента = Элементы.ДокументыПакетаЭДО.ТекущиеДанные;
	
	КлючАктивнойСтроки = КлючСтрокиДокументаПакета(АктивнаяСтрокаДокумента);
	
	Если АктивнаяСтрокаДокумента <> Неопределено
		И КлючАктивнойСтроки <> КлючТекущейСтрокиПакета Тогда
		
		СтруктураЗаполненияСтроки = Новый Структура;
		СтруктураЗаполненияСтроки.Вставить("ДокументДО", Неопределено);
		СтруктураЗаполненияСтроки.Вставить("ФайлДО", Неопределено);
		СтруктураЗаполненияСтроки.Вставить("ВерсияФайлаДО", Неопределено);
		СтруктураЗаполненияСтроки.Вставить("ЭлектронныйДокументЭДО", Неопределено);
		СтруктураЗаполненияСтроки.Вставить("КартинкаФайла", 0);
		СтруктураЗаполненияСтроки.Вставить("ИмяФайла", "");
		
		ЗаполнитьЗначенияСвойств(СтруктураЗаполненияСтроки, АктивнаяСтрокаДокумента);
		
		ДокументДО = СтруктураЗаполненияСтроки.ДокументДО;
		ФайлДО = СтруктураЗаполненияСтроки.ФайлДО;
		ВерсияФайлаДО = СтруктураЗаполненияСтроки.ВерсияФайлаДО;
		ЭлектронныйДокументЭДО = СтруктураЗаполненияСтроки.ЭлектронныйДокументЭДО;
		КартинкаФайла = СтруктураЗаполненияСтроки.КартинкаФайла;
		ИмяФайла = СтруктураЗаполненияСтроки.ИмяФайла;
		
		КлючТекущейСтрокиПакета = КлючАктивнойСтроки;
		
		ПоказатьПредставлениеДокумента();
		
		ОжидатьФормированияПредставленияДокумента();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьПредставлениеДокумента()
	
	ПараметрыВизуализацииДокумента = ИнтерфейсДокументовЭДО.НовыеПараметрыВизуализацииДокумента();
	
	ПараметрыВизуализацииДокумента.ВыводитьБанковскиеРеквизиты = ВыводитьБанковскиеРеквизиты;
	ПараметрыВизуализацииДокумента.ВыводитьДопДанные = Не ОтключитьВыводДопДанных;
	ПараметрыВизуализацииДокумента.ВыводитьКопияВерна = Не ОтключитьВыводКопияВерна;
	
	ДанныеДляПредставления = Новый Структура;
	
	Если ЗначениеЗаполнено(ФайлДО) Тогда
		
		ДанныеДляПредставления.Вставить("Файл", ФайлДО);
		ДанныеДляПредставления.Вставить("ПараметрыВизуализации", ПараметрыВизуализацииДокумента);
		
	ИначеЕсли ЗначениеЗаполнено(ДокументДО) Тогда
		
		ДанныеДляПредставления.Вставить("Документ", ДокументДО);
		ДанныеДляПредставления.Вставить("ПараметрыВизуализации", ПараметрыВизуализацииДокумента);
		
	ИначеЕсли ЗначениеЗаполнено(ЭлектронныйДокументЭДО) Тогда
		
		ДанныеДляПредставления.Вставить("ДокументЭДО", ЭлектронныйДокументЭДО);
		ДанныеДляПредставления.Вставить("ПараметрыВизуализации", ПараметрыВизуализацииДокумента);
		
	КонецЕсли;
	
	ФормированиеПредставления = ОбменСКонтрагентамиДОСлужебный.ЗапуститьФормированиеПредставленияДанныхЭДО(
		ДанныеДляПредставления, УникальныйИдентификатор);
	
	ОбновитьПредставлениеДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставлениеДокумента()
	
	Если ФормированиеПредставления = Неопределено
		ИЛИ ФормированиеПредставления.Статус = "Ошибка" Тогда
		
		ОтобразитьОшибкуПредставления();
		
	ИначеЕсли ФормированиеПредставления.Статус = "Выполнено" Тогда
		
		ОтобразитьПредставлениеДокумента();
		
	ИначеЕсли ФормированиеПредставления.Статус = "Выполняется" Тогда
		
		ОтобразитьОжиданиеПредставления();
		
	КонецЕсли;
	
	ЕстьЭДО();
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьПредставлениеДокумента()
	
	РезультатФормирования = ПолучитьИзВременногоХранилища(ФормированиеПредставления.АдресРезультата);
	Если РезультатФормирования = Неопределено Тогда
		ОтобразитьОшибкуПредставления();
		Возврат;
	КонецЕсли;
	
	ФормированиеПредставления = Неопределено;
	
	Если Не РезультатФормирования.Успех Тогда
		ОтобразитьОшибкуПредставления(РезультатФормирования.ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьДанныеПоРезультатамФормирования(РезультатФормирования);
	
	Если ЭтоВизуализацияФайлаЭДО Тогда
		Элементы.НадписьДокументДОНеСоздан.Видимость = Истина;
		Элементы.НадписьДокументДОНеСозданФайл.Видимость = Истина;
	Иначе
		Элементы.НадписьДокументДОНеСоздан.Видимость = Ложь;
		Элементы.НадписьДокументДОНеСозданФайл.Видимость = Ложь;
	КонецЕсли;
	
	Если РезультатФормирования.ТабличныйДокумент <> Неопределено Тогда
		
		Элементы.СтраницыПредставленийДокумента.ТекущаяСтраница =
			Элементы.СтраницаТабличныйДокумент;
		
	Иначе
		
		Элементы.СтраницыПредставленийДокумента.ТекущаяСтраница =
			Элементы.СтраницаФайл;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьОшибкуПредставления(Знач ОписаниеОшибки = "")
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		
		Элементы.ГруппаОшибкаФормированияСОписанием.Видимость = Истина;
		Элементы.ГруппаОшибкаФормированияСтандартная.Видимость = Ложь;
		
		Элементы.НадписьОшибкаПредставленияДокументаДО.Заголовок = ОписаниеОшибки;
		
	Иначе
		
		Элементы.ГруппаОшибкаФормированияСОписанием.Видимость = Ложь;
		Элементы.ГруппаОшибкаФормированияСтандартная.Видимость = Истина;
		
	КонецЕсли;
	
	Элементы.СтраницыПредставленийДокумента.ТекущаяСтраница =
		Элементы.СтраницаОшибка;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьОжиданиеПредставления()
	
	Элементы.СтраницыПредставленийДокумента.ТекущаяСтраница =
		Элементы.СтраницаОжидания;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПоРезультатамФормирования(РезультатФормирования)
	
	ФайлДО = РезультатФормирования.Файл;
	ВерсияФайлаДО = РезультатФормирования.Версия;
	ЭлектронныйДокументЭДО = РезультатФормирования.ДокументЭДО;
	ФайлЭДО = РезультатФормирования.ФайлЭДО;
	ТабличныйДокументПредставления = РезультатФормирования.ТабличныйДокумент;
	КартинкаФайла = РезультатФормирования.ИндексКартинкиФайла;
	ИмяФайла = РезультатФормирования.ИмяФайла;
	ЭтоВизуализацияФайлаЭДО = РезультатФормирования.ЭтоВизуализацияФайлаЭДО;
	
	Если ЗначениеЗаполнено(РезультатФормирования.Документ) Тогда
		Для Каждого Строка Из ДокументыПакетаЭДО Цикл
			Если Строка.ДокументДО = РезультатФормирования.Документ Тогда
				Строка.ФайлДО = РезультатФормирования.Файл;
				Строка.ВерсияФайлаДО = РезультатФормирования.Версия;
				Строка.ЭлектронныйДокументЭДО = РезультатФормирования.ДокументЭДО;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьФормированияПредставленияДокумента()
	
	Если ФормированиеПредставления = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьПредставлениеДанныхДокументаПослеФормирования", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.Вставить("ВыводитьОкноОжидания", Ложь);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФормированиеПредставления, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПредставлениеДанныхДокументаПослеФормирования(Результат, Контекст) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ФормированиеПредставления = Результат;
	ОбновитьПредставлениеДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСНастройками

&НаСервере
Процедура ЗагрузитьНастройкиФормы()
	
	Настройки = ХранилищеСистемныхНастроек.Загрузить(
		"Документ.ЭлектронныйДокументИсходящийЭДО.Форма.ФормаПросмотра/ТекущиеДанные");
	
	ЗаполнитьЗначениеНастройки(Настройки, "ОтключитьВыводДопДанных", Истина);
	ЗаполнитьЗначениеНастройки(Настройки, "ОтключитьВыводКопияВерна", Истина);
	ЗаполнитьЗначениеНастройки(Настройки, "ВыводитьБанковскиеРеквизиты", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначениеНастройки(Настройки, Ключ, ЗначениеПоУмолчанию = Неопределено)
	
	Если Настройки = Неопределено Тогда
		ЭтотОбъект[Ключ] = ЗначениеПоУмолчанию;
		Возврат;
	КонецЕсли;
	
	ЗначениеНастройки = Настройки.Получить(Ключ);
	Если ЗначениеНастройки = Неопределено Тогда
		ЗначениеНастройки = ЗначениеПоУмолчанию;
	КонецЕсли;
	
	ЭтотОбъект[Ключ] = ЗначениеНастройки;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОформлениеНастроекФормы()
	
	Элементы.ОтображатьДополнительнуюИнформацию.Пометка = НЕ ОтключитьВыводДопДанных;
	Элементы.ОтображатьОбластьКопияВерна.Пометка = НЕ ОтключитьВыводКопияВерна;
	
	Если ТипДокументаЭДО = Перечисления.ТипыДокументовЭДО.СчетНаОплату Тогда
		ВыводитьБанковскиеРеквизиты = Истина;
		Элементы.ОтображатьБанковскиеРеквизиты.Видимость = Ложь;
	Иначе
		Элементы.ОтображатьБанковскиеРеквизиты.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ОтображатьБанковскиеРеквизиты.Пометка = ВыводитьБанковскиеРеквизиты;
	
КонецПроцедуры

#КонецОбласти

#Область ОтображениеИДоступностьКоманд

&НаСервере
Процедура ЕстьЭДО() Экспорт
	
	ОбменСКонтрагентамиДОСлужебный.ЕстьЭДО(ДокументДО, ЭтотОбъект);
	
	УстановитьВидимостьПоЭДО();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПоЭДО()
	
	Если ПоддерживаетсяПакетнаяОбработкаЭДО
		И НаправлениеИсходящий
		И (СостояниеПоЭДО = Перечисления.СостоянияЭДОДокументооборот.НеСформирован
			Или СостояниеПоЭДО = Перечисления.СостоянияЭДОДокументооборот.Подписан
			Или СостояниеПоЭДО = Перечисления.СостоянияЭДОДокументооборот.ОжидаетсяОтправка)
		И Не ЗначениеЗаполнено(ИдентификаторПакетаЭДО) Тогда
		
		Элементы.ФормаСоздатьПакетЭДО.Видимость = Истина;
		Элементы.ФормаСоздатьПакетЭДО.Доступность = Истина;
		
		Элементы.ФормаДобавитьКПакетуЭДО.Видимость = Истина;
		Элементы.ФормаДобавитьКПакетуЭДО.Доступность = Истина;
		
	Иначе
		
		Элементы.ФормаСоздатьПакетЭДО.Видимость = Ложь;
		Элементы.ФормаСоздатьПакетЭДО.Доступность = Ложь;
		
		Элементы.ФормаДобавитьКПакетуЭДО.Видимость = Ложь;
		Элементы.ФормаДобавитьКПакетуЭДО.Доступность = Ложь;
		
	КонецЕсли;
	
	Если МожноМенятьПакетЭДО Тогда
		Элементы.ФормаИзменитьСоставПакетаЭДО.Видимость = Истина;
		Элементы.ФормаИзменитьСоставПакетаЭДО.Доступность = Истина;
	Иначе
		Элементы.ФормаИзменитьСоставПакетаЭДО.Видимость = Ложь;
		Элементы.ФормаИзменитьСоставПакетаЭДО.Доступность = Ложь;
	КонецЕсли;
	
	НастройкиКомандПоЭДО = ОбменСКонтрагентамиДОСлужебный.НовыеНастройкиКомандПоДействияЭДО();
	
	ОбменСКонтрагентамиДОСлужебный.ДобавитьКомандуЭДОПоДокументуВНастройки(НастройкиКомандПоЭДО,
		Перечисления.ДействияПоЭДО.Утвердить, Элементы.ФормаПринятьДокументЭДО);
	ОбменСКонтрагентамиДОСлужебный.ДобавитьКомандуЭДОПоДокументуВНастройки(НастройкиКомандПоЭДО,
		Перечисления.ДействияПоЭДО.Утвердить, Элементы.ДополнительнаяПринятьДокументЭДО, Ложь);
	
	ОбменСКонтрагентамиДОСлужебный.ДобавитьКомандуЭДОПоДокументуВНастройки(НастройкиКомандПоЭДО,
		Перечисления.ДействияПоЭДО.Отклонить, Элементы.ФормаОтклонитьДокументЭДО);
	ОбменСКонтрагентамиДОСлужебный.ДобавитьКомандуЭДОПоДокументуВНастройки(НастройкиКомандПоЭДО,
		Перечисления.ДействияПоЭДО.Отклонить, Элементы.ДополнительнаяОтклонитьДокументЭДО, Ложь);
	
	ОбменСКонтрагентамиДОСлужебный.ДобавитьКомандуЭДОПоДокументуВНастройки(НастройкиКомандПоЭДО,
		Перечисления.ДействияПоЭДО.Подписать, Элементы.ФормаПодписатьДокументЭДО);
	ОбменСКонтрагентамиДОСлужебный.ДобавитьКомандуЭДОПоДокументуВНастройки(НастройкиКомандПоЭДО,
		Перечисления.ДействияПоЭДО.Подписать, Элементы.ФормаПодписатьИОтправитьПоЭДО);
	
	ОбменСКонтрагентамиДОСлужебный.ДобавитьКомандуЭДОПоДокументуВНастройки(НастройкиКомандПоЭДО,
		Перечисления.ДействияПоЭДО.Отправить, Элементы.ФормаОтправитьПоЭДО);
	
	ОбменСКонтрагентамиДОСлужебный.ДобавитьКомандуЭДОПоДокументуВНастройки(НастройкиКомандПоЭДО,
		Перечисления.ДействияПоЭДО.ЗакрытьПринудительно, Элементы.ФормаЗакрытьОбменПоЭДОПринудительно);
	
	ОбменСКонтрагентамиДОСлужебный.ДобавитьКомандуЭДОПоДокументуВНастройки(НастройкиКомандПоЭДО,
		Перечисления.ДействияПоЭДО.ВернутьВРаботу, Элементы.ФормаПоставитьВОчередьЭДОНаОтправку);
	
	ОбменСКонтрагентамиДОСлужебный.ДобавитьКомандуЭДОПоПакетуВНастройки(НастройкиКомандПоЭДО,
		Перечисления.ДействияПоЭДО.Подписать, Элементы.ФормаПодписатьПакет);
	ОбменСКонтрагентамиДОСлужебный.ДобавитьКомандуЭДОПоПакетуВНастройки(НастройкиКомандПоЭДО,
		Перечисления.ДействияПоЭДО.Подписать, Элементы.ФормаПодписатьИОтправитьПакет);
	
	ОбменСКонтрагентамиДОСлужебный.ДобавитьКомандуЭДОПоПакетуВНастройки(НастройкиКомандПоЭДО,
		Перечисления.ДействияПоЭДО.Отправить, Элементы.ФормаОтправитьПакет);
	
	ОбменСКонтрагентамиДОСлужебный.ДобавитьКомандуЭДОПоПакетуВНастройки(НастройкиКомандПоЭДО,
		Перечисления.ДействияПоЭДО.Утвердить, Элементы.ФормаПринятьВходящийПакет);
	
	ОбменСКонтрагентамиДОСлужебный.ДобавитьКомандуЭДОПоПакетуВНастройки(НастройкиКомандПоЭДО,
		Перечисления.ДействияПоЭДО.Отклонить, Элементы.ФормаОтклонитьВходящийПакет);
	
	ОбменСКонтрагентамиДОСлужебный.УстановитьВидимостьДоступностьКомандЭДО(
		ДокументДО, ЭтотОбъект, НастройкиКомандПоЭДО);
	
	Если ЕстьНеотраженныеВходящиеДокументы Тогда
		Элементы.ФормаПринятьВходящийПакет.Видимость = Истина;
		Элементы.ФормаОтклонитьВходящийПакет.Видимость = Истина;
		
		Элементы.ФормаПринятьВходящийПакет.Доступность = Ложь;
		Элементы.ФормаОтклонитьВходящийПакет.Доступность = Ложь;
	Иначе
		Элементы.ФормаПринятьВходящийПакет.Доступность = Истина;
		Элементы.ФормаОтклонитьВходящийПакет.Доступность = Истина;
	КонецЕсли;
	
	Если МиграцияДанныхИзВнешнихСистемСервер.БлокироватьОбменСВнешнимиРесурсами() Тогда
		УстановитьВидимостьДоступностьПоПереходуНаНовуюВерсию();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВыполнениеДействийПоЭДО

&НаКлиенте
Процедура ВыполнитьДействияПоИсходящемуДокументу(Подписать, Отправить, ДоступныеСертификаты = Неопределено)
	
	ПараметрыВыполненияДействий =
		ОбменСКонтрагентамиДОСлужебныйКлиент.НовыеПараметрыВыполненияДействийПоИсходящимДокументамЭДО();
	
	ВозможныеДействия = ОбменСКонтрагентамиДОСлужебныйКлиентСервер.ДействияПоИсходящимДокументам();
	
	Если Подписать Тогда
		ПараметрыВыполненияДействий.Действия.Добавить(ВозможныеДействия.Подписать);
	КонецЕсли;
	
	Если Отправить Тогда
		ПараметрыВыполненияДействий.Действия.Добавить(ВозможныеДействия.Отправить);
	КонецЕсли;
	
	ПараметрыВыполненияДействий.Документы.Добавить(ДокументДО);
	ПараметрыВыполненияДействий.ДоступныеСертификаты = ДоступныеСертификаты;
	ПараметрыВыполненияДействий.УникальныйИдентификатор = УникальныйИдентификатор;
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ВыполнитьДействияПоИсходящимДокументам(ПараметрыВыполненияДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятьВходящийДокумент(ДоступныеСертификаты = Неопределено)
	
	ПараметрыВыполнения = ОбменСКонтрагентамиДОСлужебныйКлиент.НовыеПараметрыВыполненияДействийПоВходящимДокументамДО();
	
	ПараметрыВыполнения.Документы.Добавить(ДокументДО);
	ПараметрыВыполнения.ДоступныеСертификаты = ДоступныеСертификаты;
	ПараметрыВыполнения.УникальныйИдентификатор = УникальныйИдентификатор;
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ПринятьПоЭДО(ПараметрыВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьВходящийДокумент()
	
	ПараметрыВыполнения = ОбменСКонтрагентамиДОСлужебныйКлиент.НовыеПараметрыВыполненияДействийПоВходящимДокументамДО();
	
	ПараметрыВыполнения.Документы.Добавить(ДокументДО);
	ПараметрыВыполнения.УникальныйИдентификатор = УникальныйИдентификатор;
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ОтклонитьПоЭДО(ПараметрыВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияОбменаЭДОПринудительно(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Ошибки.Количество() > 0 Тогда
		Для Каждого Ошибка Из Результат.Ошибки Цикл
			ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействияПоИсходящемуПакету(Подписать, Отправить, ДоступныеСертификаты = Неопределено)
	
	ПараметрыВыполненияДействий =
		ОбменСКонтрагентамиДОСлужебныйКлиент.НовыеПараметрыВыполненияДействийПоИсходящимДокументамЭДО();
	
	ВозможныеДействия = ОбменСКонтрагентамиДОСлужебныйКлиентСервер.ДействияПоИсходящимДокументам();
	
	Если Подписать Тогда
		ПараметрыВыполненияДействий.Действия.Добавить(ВозможныеДействия.Подписать);
	КонецЕсли;
	
	Если Отправить Тогда
		ПараметрыВыполненияДействий.Действия.Добавить(ВозможныеДействия.Отправить);
	КонецЕсли;
	
	ПараметрыВыполненияДействий.Пакеты.Добавить(ИдентификаторПакетаЭДО);
	ПараметрыВыполненияДействий.ДоступныеСертификаты = ДоступныеСертификаты;
	ПараметрыВыполненияДействий.УникальныйИдентификатор = УникальныйИдентификатор;
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ВыполнитьДействияПоИсходящимДокументам(ПараметрыВыполненияДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятьВходящийПакет(ДоступныеСертификаты = Неопределено)
	
	ПараметрыВыполнения = ОбменСКонтрагентамиДОСлужебныйКлиент.НовыеПараметрыВыполненияДействийПоВходящимДокументамДО();
	
	ПараметрыВыполнения.Пакеты.Добавить(ИдентификаторПакетаЭДО);
	ПараметрыВыполнения.ДоступныеСертификаты = ДоступныеСертификаты;
	ПараметрыВыполнения.УникальныйИдентификатор = УникальныйИдентификатор;
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ПринятьПоЭДО(ПараметрыВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьВходящийПакет()
	
	ПараметрыВыполнения = ОбменСКонтрагентамиДОСлужебныйКлиент.НовыеПараметрыВыполненияДействийПоВходящимДокументамДО();
	
	ПараметрыВыполнения.Пакеты.Добавить(ИдентификаторПакетаЭДО);
	ПараметрыВыполнения.УникальныйИдентификатор = УникальныйИдентификатор;
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ОтклонитьПоЭДО(ПараметрыВыполнения);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура УстановитьВидимостьДоступностьПоПереходуНаНовуюВерсию()
	
	ТолькоПросмотр = Истина;
	Элементы.ГруппаМиграцияНаНовуюВерсию.Видимость = Истина;
	
	Элементы.ФормаСоздатьПакетЭДО.Видимость = Ложь;
	Элементы.ФормаДобавитьКПакетуЭДО.Видимость = Ложь;
	Элементы.ФормаИзменитьСоставПакетаЭДО.Видимость = Ложь;
	Элементы.ФормаПринятьДокументЭДО.Видимость = Ложь;
	Элементы.ДополнительнаяПринятьДокументЭДО.Видимость = Ложь;
	Элементы.ФормаОтклонитьДокументЭДО.Видимость = Ложь;
	Элементы.ДополнительнаяОтклонитьДокументЭДО.Видимость = Ложь;
	Элементы.ФормаПодписатьДокументЭДО.Видимость = Ложь;
	Элементы.ФормаПодписатьИОтправитьПоЭДО.Видимость = Ложь;
	Элементы.ФормаОтправитьПоЭДО.Видимость = Ложь;
	Элементы.ФормаЗакрытьОбменПоЭДОПринудительно.Видимость = Ложь;
	Элементы.ФормаПоставитьВОчередьЭДОНаОтправку.Видимость = Ложь;
	Элементы.ФормаПодписатьПакет.Видимость = Ложь;
	Элементы.ФормаПодписатьИОтправитьПакет.Видимость = Ложь;
	Элементы.ФормаОтправитьПакет.Видимость = Ложь;
	Элементы.ФормаПринятьВходящийПакет.Видимость = Ложь;
	Элементы.ФормаОтклонитьВходящийПакет.Видимость = Ложь;
	
	Элементы.НадписьМиграцияНаНовуюВерсию.Заголовок =
		НСтр("ru = 'Обмен с контрагентами по ЭДО выполняется и настраивается в новой версии программы. Действия необходимо производить в новой версии программы.'")
	
КонецПроцедуры

#КонецОбласти
