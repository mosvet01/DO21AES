#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Дата = НачалоДня(ТекущаяДатаСеанса());
	
	ЗаполнитьДеревоСотрудников();
	
	УстановитьГрафикРаботы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоСотрудников()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Дерево = РеквизитФормыВЗначение("ДеревоСотрудников");
	Дерево.Строки.Очистить();
	
	МассивОтделов = Новый Массив;
	
	Если Пользователи.ЭтоПолноправныйПользователь(,,Ложь) Тогда
		// Под полными правами показываем корневые отделы.
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтруктураПредприятия.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	НЕ СтруктураПредприятия.ПометкаУдаления
		|	И СтруктураПредприятия.Родитель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)";
		
		МассивОтделов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
	Иначе
		
		// Найдем кто делегировал полномочия текущему пользователю.
		Запрос = Новый Запрос;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДелегированиеПрав.ОтКого КАК ОтКого
		|ИЗ
		|	Справочник.ДелегированиеПрав КАК ДелегированиеПрав
		|ГДЕ
		|	ДелегированиеПрав.Кому = &Кому
		|	И ДелегированиеПрав.Действует = ИСТИНА
		|	И ДелегированиеПрав.ВариантДелегирования = ЗНАЧЕНИЕ(Перечисление.ВариантыДелегированияПрав.ВсеПрава)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ДелегированиеПравОбластиДелегирования.Ссылка.ОтКого
		|ИЗ
		|	Справочник.ДелегированиеПрав.ОбластиДелегирования КАК ДелегированиеПравОбластиДелегирования
		|ГДЕ
		|	ДелегированиеПравОбластиДелегирования.Ссылка.Действует = ИСТИНА
		|	И ДелегированиеПравОбластиДелегирования.Ссылка.Кому = &Кому
		|	И ДелегированиеПравОбластиДелегирования.Ссылка.ВариантДелегирования = ЗНАЧЕНИЕ(Перечисление.ВариантыДелегированияПрав.Выборочно)
		|	И ДелегированиеПравОбластиДелегирования.ОбластьДелегирования = &Область";
		
		Запрос.Параметры.Вставить("Кому", ТекущийПользователь);
		Запрос.Параметры.Вставить("Область", Справочники.ОбластиДелегированияПрав.АдминистративныеФункции);
		
		МассивКтоДелегировал = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ОтКого");
		
		// Найдем все отделы, где тек пользователь- руководитель
		// - каждое - это новый нод дерева - рекурсивно заполним.
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтруктураПредприятия.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	НЕ СтруктураПредприятия.ПометкаУдаления
		|	И СтруктураПредприятия.Руководитель В(&Пользователи)";
		
		МассивКтоДелегировал.Добавить(ТекущийПользователь);
		Запрос.Параметры.Вставить("Пользователи", МассивКтоДелегировал);
		
		МассивОтделовИзЗапроса = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
		// Исключим подотделы.
		Для Каждого Отдел Из МассивОтделовИзЗапроса Цикл
			
			ЭтоПодотдел = Ложь;
			
			Для Каждого ОтделРодитель Из МассивОтделовИзЗапроса Цикл
				
				Если ОтделРодитель <> Отдел 
					И Делопроизводство.ЭтоДочернееПодразделение(Отдел, ОтделРодитель) Тогда
					ЭтоПодотдел = Истина;
					Прервать;
				КонецЕсли;	
				
			КонецЦикла;
			
			Если ЭтоПодотдел = Ложь Тогда
				МассивОтделов.Добавить(Отдел);
			КонецЕсли;	
			
		КонецЦикла;	
		
	КонецЕсли;
	
	
	Для Каждого Отдел Из МассивОтделов Цикл
		ЗаполнитьОтдел(Отдел, Дерево.Строки);
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоСотрудников");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОтдел(Отдел, Строки)
	
	УзелДерева = Строки.Добавить();
	УзелДерева.Представление = Отдел;
	УзелДерева.Ссылка = Отдел;
	УзелДерева.НомерКартинки = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтруктураПредприятия.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|ГДЕ
	|	НЕ СтруктураПредприятия.ПометкаУдаления
	|	И СтруктураПредприятия.Родитель = &Отдел";
		
	Запрос.Параметры.Вставить("Отдел", Отдел);
	МассивОтделов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Для Каждого ОтделТек Из МассивОтделов Цикл
		ЗаполнитьОтдел(ОтделТек, УзелДерева.Строки);
	КонецЦикла;	
	
	МассивПользователей = РаботаСПользователями.ПолучитьПользователейПодразделения(Отдел);
	
	Для Каждого Пользователь Из МассивПользователей Цикл
		
		УзелСотрудник = УзелДерева.Строки.Добавить();
		УзелСотрудник.Представление = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователь, "ПредставлениеВПереписке");
		Если Не ЗначениеЗаполнено(УзелСотрудник.Представление) Тогда
			УзелСотрудник.Представление = Пользователь;
		КонецЕсли;	
		УзелСотрудник.Ссылка = Пользователь;
		УзелСотрудник.НомерКартинки = 5;
	
	КонецЦикла;	
	
	УзелДерева.Строки.Сортировать("Представление");
	
КонецПроцедуры
		
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ОбновитьПротоколСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриАктивизацииДаты(Элемент)
	
	ОбновитьПротоколСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСотрудниковПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ДеревоСотрудников.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ПодключитьОбработчикОжидания("ОбновитьПротокол", 0.2, Истина);
	
	СотрСтрока = Элементы.ДеревоСотрудников.ТекущиеДанные.Ссылка;
	ЭтоПользователь = (ТипЗнч(СотрСтрока) = Тип("СправочникСсылка.Пользователи"));
	
	Элементы.ДеревоСотрудниковКонтекстноеМенюНаписатьВЧат.Доступность 
		= ЭтоПользователь И (СотрСтрока <> ТекущийПользователь);
	Элементы.ДеревоСотрудниковКонтекстноеМенюОткрытьЕжедневынйОтчет.Доступность = ЭтоПользователь;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоСотрудниковВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.ДеревоСотрудников.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ТекСсылка = Элементы.ДеревоСотрудников.ТекущиеДанные.Ссылка;
	ПоказатьЗначение(, ТекСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПротокол()
	
	Если Элементы.ДеревоСотрудников.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ПредыдущийПользователь = ВыбранныйПользовательИлиОтдел;
	ВыбранныйПользовательИлиОтдел = Элементы.ДеревоСотрудников.ТекущиеДанные.Ссылка;
	
	Если ПредыдущийПользователь = ВыбранныйПользовательИлиОтдел Тогда
		Возврат;
	КонецЕсли;	
	
	ВсегоДействий = 0;
	Первое = Неопределено;
	Последнее = Неопределено;

	Если ЗначениеЗаполнено(ВыбранныйПользовательИлиОтдел) Тогда
		ОбновитьПротоколСервер();	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПротоколСервер(ОбновитьБезусловно = Истина)
	
	Если Не ЗначениеЗаполнено(ВыбранныйПользовательИлиОтдел) Тогда
		Возврат;
	КонецЕсли;	
	
	Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.Пользователи") Тогда
		
		Если Элементы.ГруппаСтраницыСправа.ТекущаяСтраница = Элементы.ГруппаСтраницаПоПользователям Тогда
			Элементы.ГруппаСтраницыСправа.ТекущаяСтраница = Элементы.ГруппаСтраницаДинамика;
		КонецЕсли;	
		
		Если Элементы.ГруппаСтраницыСправа.ТекущаяСтраница = Элементы.ГруппаСтраницаИтог Тогда
			Элементы.ГруппаСтраницыСправа.ТекущаяСтраница = Элементы.ГруппаСтраницаДинамика;
		КонецЕсли;	
		
		Элементы.ГруппаСтраницаПоПользователям.Видимость = Ложь;
		Элементы.ГруппаСтраницаИтог.Видимость = Ложь;
		
	Иначе	
		
		Элементы.ГруппаСтраницаПоПользователям.Видимость = Истина;
		Элементы.ГруппаСтраницаИтог.Видимость = Истина;
		
	КонецЕсли;	
	
	Если ОбновитьБезусловно Тогда
		ДиаграммаПоПользователямЗагружена = Ложь;
		ДиаграммаПоСобытиямЗагружена = Ложь;
		ДиаграммаПоТипамДанныхЗагружена = Ложь;
		ДиаграммаДинамикаЗагружена = Ложь;
		
		СписокЗагружен = Ложь;
		СписокЗаполненПоКнопке = Ложь;
		Элементы.ЗаполнитьСписок.Видимость = Истина;
		ПротоколРаботы.Очистить();
	КонецЕсли;	
		
	Если Элементы.ГруппаСтраницыСправа.ТекущаяСтраница = Элементы.ГруппаСтраницаИтог Тогда
	
		ОбновитьПротоколСерверСписок(ОбновитьБезусловно);
		
	ИначеЕсли Элементы.ГруппаСтраницыСправа.ТекущаяСтраница = Элементы.ГруппаСтраницаПоПользователям Тогда
		
		Если ДиаграммаПоПользователямЗагружена Тогда
			Возврат;
		КонецЕсли;	
		ДиаграммаПоПользователямЗагружена = Истина;
		
		ОбновитьПротокол_ПоПользователям();
		
	ИначеЕсли Элементы.ГруппаСтраницыСправа.ТекущаяСтраница = Элементы.ГруппаСтраницаСобытия Тогда
		
		Если ДиаграммаПоСобытиямЗагружена Тогда
			Возврат;
		КонецЕсли;	
		ДиаграммаПоСобытиямЗагружена = Истина;
		
		ОбновитьПротокол_ПоСобытиям();
		
	ИначеЕсли Элементы.ГруппаСтраницыСправа.ТекущаяСтраница = Элементы.ГруппаСтраницаПоТипамДанных Тогда	
		
		Если ДиаграммаПоТипамДанныхЗагружена Тогда
			Возврат;
		КонецЕсли;	
		ДиаграммаПоТипамДанныхЗагружена = Истина;
		
		ОбновитьПротокол_ПоТипамДанных();
		
	ИначеЕсли Элементы.ГруппаСтраницыСправа.ТекущаяСтраница = Элементы.ГруппаСтраницаДинамика Тогда	
		
		Если ДиаграммаДинамикаЗагружена Тогда
			Возврат;
		КонецЕсли;	
		ДиаграммаДинамикаЗагружена = Истина;
		
		ОбновитьПротокол_Динамика();
		
	ИначеЕсли Элементы.ГруппаСтраницыСправа.ТекущаяСтраница = Элементы.ГруппаСтраницаВсеДействия Тогда	
		
		// таблица по отделу
		Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда	
			
			Элементы.ГруппаСнизуСтатус.Видимость = Ложь;
			
		Иначе
			
			Элементы.ГруппаСнизуСтатус.Видимость = Истина;
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЗапросПоОтделу(Запрос, 
	ВыбранныйПользовательИлиОтдел, РежимОдинДень, МассивПользователей)
	
	// "Всего" + "Изменений"  по отделу 
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДат.День КАК День,
		|	ТаблицаДат.Дата КАК Дата
		|ПОМЕСТИТЬ ВременнаяТаблицаДат
		|ИЗ
		|	&ТаблицаДат КАК ТаблицаДат
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	День,
		|	Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДат.День КАК День,
		|	КОЛИЧЕСТВО(ПротоколРаботыПользователей.Дата) КАК ВсегоОтдел,
		|	0 КАК ИзмененийОтдел,
		|	""ВсегоОтдел"" КАК ТипСерии
		|ИЗ
		|	ВременнаяТаблицаДат КАК ВременнаяТаблицаДат
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|		ПО (ПротоколРаботыПользователей.Дата >= &МинДата)
		|			И (ПротоколРаботыПользователей.Дата <= &МаксДата)
		|			И (НАЧАЛОПЕРИОДА(ПротоколРаботыПользователей.Дата, ЧАС) = ВременнаяТаблицаДат.Дата)
		|			И (ПротоколРаботыПользователей.Пользователь В (&Пользователи))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаДат.День
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДат.День,
		|	0,
		|	КОЛИЧЕСТВО(ПротоколРаботыПользователей.Дата),
		|	""ИзмененийОтдел""
		|ИЗ
		|	ВременнаяТаблицаДат КАК ВременнаяТаблицаДат
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|		ПО (ПротоколРаботыПользователей.Дата >= &МинДата)
		|			И (ПротоколРаботыПользователей.Дата <= &МаксДата)
		|			И (ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Изменение)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Изменение)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ИзменениеФайла)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПеремещениеФайлов)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПеренаправлениеЗадачи)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПодписаниеЭП)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПрерываниеБизнесПроцесса)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Расшифровывание)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.РегистрацияДокумента)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Создание)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.СтартБизнесПроцесса)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.УдалениеПодписиЭП)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Шифрование))
		|			И (НАЧАЛОПЕРИОДА(ПротоколРаботыПользователей.Дата, ЧАС) = ВременнаяТаблицаДат.Дата)
		|			И (ПротоколРаботыПользователей.Пользователь В (&Пользователи))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаДат.День
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВременнаяТаблицаДат.День";
	
	Если РежимОдинДень = Ложь Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЧАС", "ДЕНЬ");
	КонецЕсли;	
	
	МассивПользователей = РаботаСПользователями.ПолучитьПользователейПодразделения(
		ВыбранныйПользовательИлиОтдел, Истина); //  с иерархией
	Запрос.УстановитьПараметр("Пользователи", МассивПользователей);
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьЗапросПоСотруднику(Запрос, 
	ВыбранныйПользовательИлиОтдел, РежимОдинДень, МассивПользователей)
	
	Пользователь = ВыбранныйПользовательИлиОтдел;
	Отдел = РаботаСПользователями.ПолучитьПодразделение(Пользователь);
	
	// "Всего" + "Изменений"  по отделу  + по сотруднику
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДат.День КАК День,
		|	ТаблицаДат.Дата КАК Дата
		|ПОМЕСТИТЬ ВременнаяТаблицаДат
		|ИЗ
		|	&ТаблицаДат КАК ТаблицаДат
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	День,
		|	Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДат.День КАК День,
		|	0 КАК ВсегоОтдел,
		|	0 КАК ИзмененийОтдел,
		|	КОЛИЧЕСТВО(ПротоколРаботыПользователей.Дата) КАК ВсегоПользователь,
		|	0 КАК ИзмененийПользователь,
		|	""ВсегоПользователь"" КАК ТипСерии
		|ИЗ
		|	ВременнаяТаблицаДат КАК ВременнаяТаблицаДат
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|		ПО (ПротоколРаботыПользователей.Дата >= &МинДата)
		|			И (ПротоколРаботыПользователей.Дата <= &МаксДата)
		|			И (НАЧАЛОПЕРИОДА(ПротоколРаботыПользователей.Дата, ЧАС) = ВременнаяТаблицаДат.Дата)
		|			И (ПротоколРаботыПользователей.Пользователь = &Пользователь)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаДат.День
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДат.День,
		|	0,
		|	0,
		|	0,
		|	КОЛИЧЕСТВО(ПротоколРаботыПользователей.Дата),
		|	""ИзмененийПользователь""
		|ИЗ
		|	ВременнаяТаблицаДат КАК ВременнаяТаблицаДат
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|		ПО (ПротоколРаботыПользователей.Дата >= &МинДата)
		|			И (ПротоколРаботыПользователей.Дата <= &МаксДата)
		|			И (ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Изменение)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ИзменениеФайла)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПеремещениеФайлов)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПеренаправлениеЗадачи)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПодписаниеЭП)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПрерываниеБизнесПроцесса)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Расшифровывание)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.РегистрацияДокумента)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Создание)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.СтартБизнесПроцесса)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.УдалениеПодписиЭП)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Шифрование))
		|			И (НАЧАЛОПЕРИОДА(ПротоколРаботыПользователей.Дата, ЧАС) = ВременнаяТаблицаДат.Дата)
		|			И (ПротоколРаботыПользователей.Пользователь = &Пользователь)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаДат.День
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВременнаяТаблицаДат.День";
	
	Если РежимОдинДень = Ложь Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЧАС", "ДЕНЬ");
	КонецЕсли;	
	
	МассивПользователей = РаботаСПользователями.ПолучитьПользователейПодразделения(
		Отдел, Истина); //  с иерархией
	Запрос.УстановитьПараметр("Пользователи", МассивПользователей);
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьЗапросПоСотрудникамДляМедиан(Запрос, 
	ВыбранныйПользовательИлиОтдел, РежимОдинДень, МассивПользователей)
	
	Пользователь = ВыбранныйПользовательИлиОтдел;
	Отдел = РаботаСПользователями.ПолучитьПодразделение(Пользователь);
	
	// "Всего" + "Изменений"  по отделу  + по сотруднику
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДат.День КАК День,
		|	ТаблицаДат.Дата КАК Дата
		|ПОМЕСТИТЬ ВременнаяТаблицаДат
		|ИЗ
		|	&ТаблицаДат КАК ТаблицаДат
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	День,
		|	Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДат.День КАК День,
		|	ПротоколРаботыПользователей.Пользователь КАК Пользователь,
		|	0 КАК ВсегоОтдел,
		|	0 КАК ИзмененийОтдел,
		|	КОЛИЧЕСТВО(ПротоколРаботыПользователей.Дата) КАК ВсегоПользователь,
		|	0 КАК ИзмененийПользователь,
		|	""ВсегоПользователь"" КАК ТипСерии
		|ИЗ
		|	ВременнаяТаблицаДат КАК ВременнаяТаблицаДат
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|		ПО (ПротоколРаботыПользователей.Дата >= &МинДата)
		|			И (ПротоколРаботыПользователей.Дата <= &МаксДата)
		|			И (НАЧАЛОПЕРИОДА(ПротоколРаботыПользователей.Дата, ЧАС) = ВременнаяТаблицаДат.Дата)
		|			И (ПротоколРаботыПользователей.Пользователь В (&Пользователи))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаДат.День,
		|	ПротоколРаботыПользователей.Пользователь
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДат.День,
		|	ПротоколРаботыПользователей.Пользователь,
		|	0,
		|	0,
		|	0,
		|	КОЛИЧЕСТВО(ПротоколРаботыПользователей.Дата),
		|	""ИзмененийПользователь""
		|ИЗ
		|	ВременнаяТаблицаДат КАК ВременнаяТаблицаДат
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|		ПО (ПротоколРаботыПользователей.Дата >= &МинДата)
		|			И (ПротоколРаботыПользователей.Дата <= &МаксДата)
		|			И (ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Изменение)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ИзменениеФайла)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПеремещениеФайлов)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПеренаправлениеЗадачи)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПодписаниеЭП)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПрерываниеБизнесПроцесса)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Расшифровывание)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.РегистрацияДокумента)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Создание)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.СтартБизнесПроцесса)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.УдалениеПодписиЭП)
		|				ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Шифрование))
		|			И (НАЧАЛОПЕРИОДА(ПротоколРаботыПользователей.Дата, ЧАС) = ВременнаяТаблицаДат.Дата)
		|			И (ПротоколРаботыПользователей.Пользователь В (&Пользователи))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаДат.День,
		|	ПротоколРаботыПользователей.Пользователь
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВременнаяТаблицаДат.День";
	
	Если РежимОдинДень = Ложь Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЧАС", "ДЕНЬ");
	КонецЕсли;	
	
	МассивПользователей = РаботаСПользователями.ПолучитьПользователейПодразделения(
		Отдел, Истина); //  с иерархией
	Запрос.УстановитьПараметр("Пользователи", МассивПользователей);
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьПротокол_Динамика()
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивПользователей = Новый Массив;
	
	ВыделенныеДаты = Элементы.Дата.ВыделенныеДаты;
	Если ВыделенныеДаты.Количество() = 0 Тогда
		ВыделенныеДаты.Добавить(Дата);
	КонецЕсли;	
	
	МинДата = Неопределено;
	МаксДата = Неопределено;
	Для Каждого СтрДата Из ВыделенныеДаты Цикл
		
		Если МинДата = Неопределено Тогда
			МинДата = СтрДата;
		Иначе	
			МинДата = Мин(МинДата, СтрДата);
		КонецЕсли;	
		
		Если МаксДата = Неопределено Тогда
			МаксДата = СтрДата;
		Иначе	
			МаксДата = Макс(МаксДата, СтрДата);
		КонецЕсли;	
		
	КонецЦикла;	
	
	ТаблицаДат = Новый ТаблицаЗначений;
	ТаблицаДат.Колонки.Добавить("День", Новый ОписаниеТипов("Число")); // просто порядковый номер
	ТаблицаДат.Колонки.Добавить("Дата", 
		Новый ОписаниеТипов("Дата",,,,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
		
	ЧислоСтолбиков = 24;
	РазмерШага = 3600; // Время в секундах
	
	РежимОдинДень = Ложь;
	
	Если МинДата = МаксДата Тогда // 1 день  - по часам
		
		РежимОдинДень = Истина;
		
		ЧислоСтолбиков = 24;
		РазмерШага = 3600; // Время в секундах
		НачалоВремени = НачалоДня(МинДата);
			
		Для Шаг = 0 По ЧислоСтолбиков - 1 Цикл
			
			Строка = ТаблицаДат.Добавить();
			Строка.День = Шаг;
			Строка.Дата = НачалоВремени + Шаг * РазмерШага;
			
		КонецЦикла;
			
	Иначе  // несколько дней - по дням.
		
		НачалоВремени = НачалоДня(МинДата);
		
		ЧислоСтолбиков = ВыделенныеДаты.Количество(); // т.к. режим - Диапазон
		РазмерШага = 86400; // Время в секундах
			
		Для Шаг = 0 По ЧислоСтолбиков - 1 Цикл
			
			Строка = ТаблицаДат.Добавить();
			Строка.День = Шаг;
			Строка.Дата = НачалоВремени + Шаг * РазмерШага;
			
		КонецЦикла;
		
	КонецЕсли;	
	
	// Заполняем гистограмму
	ДиаграммаДинамика.Обновление = Ложь;
	
	ДиаграммаДинамика.РежимСглаживания = РежимСглаживанияДиаграммы.ГладкаяКривая;
	
	ДиаграммаДинамика.АвтоМаксимальноеЗначение	= Ложь;
	ДиаграммаДинамика.АвтоМинимальноеЗначение	= Ложь;
	ДиаграммаДинамика.МаксимальноеЗначение		= 1;
	ДиаграммаДинамика.МинимальноеЗначение		= 0;
	ДиаграммаДинамика.БазовоеЗначение			= 0;
	ДиаграммаДинамика.ПропускатьБазовоеЗначение	= Истина;
	
	ДиаграммаДинамика.Очистить();
	
	ДиаграммаДинамика.ТипДиаграммы = ТипДиаграммы.График;
	ДиаграммаДинамика.ПоложениеПодписей = ПоложениеПодписейКДиаграмме.Авто; // КрайВнутри
	ДиаграммаДинамика.ОтображатьЛегенду = Истина;
	ДиаграммаДинамика.ВидПодписей = ВидПодписейКДиаграмме.Нет;
	
	ДиаграммаДинамика.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Верх;
	
	ДиаграммаДинамика.Обновление = Истина;
	
	Запрос = Новый Запрос;
	
	Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.Пользователи") Тогда
		
		СформироватьЗапросПоСотруднику(Запрос, ВыбранныйПользовательИлиОтдел, РежимОдинДень, МассивПользователей);
		
	ИначеЕсли ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда	
		
		СформироватьЗапросПоОтделу(Запрос, ВыбранныйПользовательИлиОтдел, РежимОдинДень, МассивПользователей);
		
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаДат", ТаблицаДат);
	Запрос.УстановитьПараметр("МинДата", НачалоДня(МинДата));
	Запрос.УстановитьПараметр("МаксДата", КонецДня(МаксДата));
	
	ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();
	
	// теперь считаем медианы по отделу.
	
	Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.Пользователи") Тогда	
		
		СформироватьЗапросПоСотрудникамДляМедиан(Запрос, ВыбранныйПользовательИлиОтдел, РежимОдинДень, МассивПользователей);
		
		Запрос.УстановитьПараметр("ТаблицаДат", ТаблицаДат);
		Запрос.УстановитьПараметр("МинДата", НачалоДня(МинДата));
		Запрос.УстановитьПараметр("МаксДата", КонецДня(МаксДата));
		
		ТаблицаРезультатаДляМедиан = Запрос.Выполнить().Выгрузить();
		
		ТаблицаДат.Колонки.Добавить("МедианаВсего", Новый ОписаниеТипов("Число"));
		ТаблицаДат.Колонки.Добавить("МедианаИзменений", Новый ОписаниеТипов("Число"));
		
		ТаблицаРезультатаДляМедиан.Сортировать("ВсегоПользователь");
		Для Каждого Стр Из ТаблицаДат Цикл
			
			Отбор = Новый Структура;
			Отбор.Вставить("День", Стр.День);
			Отбор.Вставить("ТипСерии", "ВсегоПользователь");
			
			СтрокиДня = ТаблицаРезультатаДляМедиан.НайтиСтроки(Отбор);
			
			// найдем медиану Всего
			Медиана = 0;
			Если СтрокиДня.Количество() <> 0 Тогда
				Если СтрокиДня.Количество() % 2 = 1 Тогда // нечетное
					
					Позиция = (СтрокиДня.Количество() - 1) / 2;
					Медиана = СтрокиДня[Позиция].ВсегоПользователь;
					
				Иначе	
					
					Позиция1 = СтрокиДня.Количество() / 2 - 1;
					Позиция2 = СтрокиДня.Количество() / 2;
					Медиана = (СтрокиДня[Позиция1].ВсегоПользователь + СтрокиДня[Позиция2].ВсегоПользователь) / 2;
					
				КонецЕсли;	
			КонецЕсли;	
			
			Стр.МедианаВсего = Медиана;
			
		КонецЦикла;	
		
		ТаблицаРезультатаДляМедиан.Сортировать("ИзмененийПользователь");
		Для Каждого Стр Из ТаблицаДат Цикл
			
			Отбор = Новый Структура;
			Отбор.Вставить("День", Стр.День);
			Отбор.Вставить("ТипСерии", "ИзмененийПользователь");
			
			СтрокиДня = ТаблицаРезультатаДляМедиан.НайтиСтроки(Отбор);
			
			// найдем медиану Изменений
			Медиана = 0;
			Если СтрокиДня.Количество() <> 0 Тогда
				Если СтрокиДня.Количество() % 2 = 1 Тогда // нечетное
					
					Позиция = (СтрокиДня.Количество() - 1) / 2;
					Медиана = СтрокиДня[Позиция].ИзмененийПользователь;
					
				Иначе	
					
					Позиция1 = СтрокиДня.Количество() / 2 - 1;
					Позиция2 = СтрокиДня.Количество() / 2;
					Медиана = (СтрокиДня[Позиция1].ИзмененийПользователь + СтрокиДня[Позиция2].ИзмененийПользователь) / 2;
					
				КонецЕсли;	
			КонецЕсли;	
			
			Стр.МедианаИзменений = Медиана;
			
		КонецЦикла;	
		
	КонецЕсли;	
	
	// завершили медианы
	
	ДиаграммаДинамика.Серии.Очистить();

	Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.Пользователи") Тогда
		
		Серия = ДиаграммаДинамика.Серии.Добавить(НСтр("ru = 'Всего по отделу'"));
		Серия.Линия = Новый Линия(ТипЛинииДиаграммы.Пунктир, 1);
		Серия.Цвет = WebЦвета.Коричневый;

		Серия = ДиаграммаДинамика.Серии.Добавить(НСтр("ru = 'Изменений по отделу'"));
		Серия.Линия = Новый Линия(ТипЛинииДиаграммы.Пунктир, 1);
		Серия.Цвет = WebЦвета.Зеленый;

		Серия = ДиаграммаДинамика.Серии.Добавить(НСтр("ru = 'Всего по сотруднику'"));
		Серия.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная, 3);
		Серия.Цвет = WebЦвета.Коричневый;
		
		Серия = ДиаграммаДинамика.Серии.Добавить(НСтр("ru = 'Изменений по сотруднику'"));
		Серия.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная, 3);
		Серия.Цвет = WebЦвета.Зеленый;
		
	ИначеЕсли ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда	
		
		Серия = ДиаграммаДинамика.Серии.Добавить(НСтр("ru = 'Всего по отделу'"));
		Серия.Цвет = WebЦвета.Коричневый;
		
		Серия = ДиаграммаДинамика.Серии.Добавить(НСтр("ru = 'Изменений по отделу'"));
		Серия.Цвет = WebЦвета.Зеленый;
		
	КонецЕсли;	
	
	КоличествоПользователей = МассивПользователей.Количество();
	Если КоличествоПользователей = 0 Тогда
		КоличествоПользователей = 1;
	КонецЕсли;	
	
	ТекДень = -1;
	Точка = Неопределено; // это по оси X
	Для Каждого Строка Из ТаблицаРезультатаЗапроса Цикл
		
		СтрокаДат = ТаблицаДат.Найти(Строка.День, "День");
		
		Если ТекДень <> Строка.День Тогда   // один раз для этого дня
			
			Точка = ДиаграммаДинамика.Точки.Добавить(Строка.День);
			Точка.Значение = Строка.День;
			Если РежимОдинДень Тогда			
				Точка.Текст = СтрШаблон("%1ч", Формат(Строка.День, "ЧЦ=2; ЧН=0; ЧВН="));
			Иначе
				ТекДатаТочки = НачалоВремени + Строка.День * РазмерШага;
				Точка.Текст = Формат(ТекДатаТочки, "ДФ='дд МММ'");
			КонецЕсли;	
			
			Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.Пользователи") Тогда
				
				НомерСерии = 0;

				ЗначениеТочки = 0;
				Если СтрокаДат <> Неопределено Тогда
					ЗначениеТочки = СтрокаДат.МедианаВсего; //  медиана по отделу 
				КонецЕсли;
				
				Серия = ДиаграммаДинамика.Серии[НомерСерии];
				
				Если ЗначениеТочки = 0 Тогда
					ЗначениеТочки = 0.1; // чтобы линия не прекращалась
				КонецЕсли;	
				
				ДиаграммаДинамика.УстановитьЗначение(Точка, Серия, ЗначениеТочки);
				
				
				НомерСерии = 1;

				ЗначениеТочки = 0;
				Если СтрокаДат <> Неопределено Тогда
					ЗначениеТочки = СтрокаДат.МедианаИзменений; //  медиана по отделу
				КонецЕсли;
				
				Серия = ДиаграммаДинамика.Серии[НомерСерии];
				
				Если ЗначениеТочки = 0 Тогда
					ЗначениеТочки = 0.1; // чтобы линия не прекращалась
				КонецЕсли;	
				
				ДиаграммаДинамика.УстановитьЗначение(Точка, Серия, ЗначениеТочки);
				
			КонецЕсли;		
			
		КонецЕсли;	
		ТекДень = Строка.День;
		
		ЗначениеТочки = 0;
		Если Строка.ТипСерии = "ВсегоОтдел" Тогда
			
			НомерСерии = 0;
			
			Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.Пользователи") Тогда
			Иначе
				ЗначениеТочки = Строка.ВсегоОтдел;
			КонецЕсли;	
			
		ИначеЕсли Строка.ТипСерии = "ИзмененийОтдел" Тогда
			
			НомерСерии = 1;
			Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.Пользователи") Тогда
			Иначе
				ЗначениеТочки = Строка.ИзмененийОтдел;
			КонецЕсли;	
			
		ИначеЕсли Строка.ТипСерии = "ВсегоПользователь" Тогда
			НомерСерии = 2;
			ЗначениеТочки = Строка.ВсегоПользователь;
		ИначеЕсли Строка.ТипСерии = "ИзмененийПользователь" Тогда	
			НомерСерии = 3;
			ЗначениеТочки = Строка.ИзмененийПользователь;
		КонецЕсли;	
		
		Серия = ДиаграммаДинамика.Серии[НомерСерии];
		
		Если ЗначениеТочки = 0 Тогда
			ЗначениеТочки = 0.1; // чтобы линия не прекращалась
		КонецЕсли;	
		
		ДиаграммаДинамика.УстановитьЗначение(Точка, Серия, ЗначениеТочки);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуОтдела()
	
	Если ТипЗнч(ВыбранныйПользовательИлиОтдел) <> Тип("СправочникСсылка.СтруктураПредприятия") Тогда	
		Возврат;
	КонецЕсли;	
	
	Если ТаблицаПоОтделуЗагружена Тогда
		Возврат;
	КонецЕсли;	
	ТаблицаПоОтделуЗагружена = Истина;
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивПользователей = РаботаСПользователями.ПолучитьПользователейПодразделения(
		ВыбранныйПользовательИлиОтдел, Истина); //  с иерархией
	
	ВыделенныеДаты = Элементы.Дата.ВыделенныеДаты;
	Если ВыделенныеДаты.Количество() = 0 Тогда
		ВыделенныеДаты.Добавить(Дата);
	КонецЕсли;	
	
	МинДата = Неопределено;
	МаксДата = Неопределено;
	Для Каждого СтрДата Из ВыделенныеДаты Цикл
		
		Если МинДата = Неопределено Тогда
			МинДата = СтрДата;
		Иначе	
			МинДата = Мин(МинДата, СтрДата);
		КонецЕсли;	
		
		Если МаксДата = Неопределено Тогда
			МаксДата = СтрДата;
		Иначе	
			МаксДата = Макс(МаксДата, СтрДата);
		КонецЕсли;	
		
	КонецЦикла;	
	
	РежимОдинДень = Ложь;
	Если МинДата = МаксДата Тогда // 1 день  - по часам
		РежимОдинДень = Истина;
	КонецЕсли;	
		
	ТаблицаОтдел = РеквизитФормыВЗначение("ТаблицаПоОтделу");
	ТаблицаОтдел.Очистить();
	
	Для Каждого Пользователь Из МассивПользователей Цикл
		
		НовСтр = ТаблицаОтдел.Добавить();
		НовСтр.Пользователь = Пользователь;
		НовСтр.ПользовательФИО = Строка(Пользователь);
		
		Если Не РежимОдинДень Тогда
			НовСтр.Начало = Неопределено;
			НовСтр.Окончание = Неопределено;
		КонецЕсли;	
		
	КонецЦикла;	
	ТаблицаОтдел.Сортировать("ПользовательФИО");

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПротоколРаботыПользователей.Пользователь КАК Пользователь,
		|	КОЛИЧЕСТВО(*) КАК Всего,
		|	МИНИМУМ(ПротоколРаботыПользователей.Дата) КАК Начало,
		|	МАКСИМУМ(ПротоколРаботыПользователей.Дата) КАК Окончание
		|ИЗ
		|	РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|ГДЕ
		|	ПротоколРаботыПользователей.Дата >= &МинДата
		|	И ПротоколРаботыПользователей.Дата <= &МаксДата
		|	И ПротоколРаботыПользователей.Пользователь В(&Пользователи)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПротоколРаботыПользователей.Пользователь
		|
		|УПОРЯДОЧИТЬ ПО
		|	Пользователь.Наименование";
	
	Запрос.УстановитьПараметр("Пользователи", МассивПользователей);
	Запрос.УстановитьПараметр("МинДата", НачалоДня(МинДата));
	Запрос.УстановитьПараметр("МаксДата", КонецДня(МаксДата));
	
	ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Стр Из ТаблицаРезультатаЗапроса Цикл
		
		СтрокаТабл = ТаблицаОтдел.Найти(Стр.Пользователь, "Пользователь");
		Если СтрокаТабл <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТабл, Стр);
			
			Если Не РежимОдинДень Тогда
				СтрокаТабл.Начало = Неопределено;
				СтрокаТабл.Окончание = Неопределено;
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЦикла;
	
	// теперь для Изменений
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПротоколРаботыПользователей.Пользователь КАК Пользователь,
		|	КОЛИЧЕСТВО(*) КАК Изменений
		|ИЗ
		|	РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|ГДЕ
		|	ПротоколРаботыПользователей.Дата >= &МинДата
		|	И ПротоколРаботыПользователей.Дата <= &МаксДата
		|	И ПротоколРаботыПользователей.Пользователь В(&Пользователи)
		|	И (ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Изменение)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ИзменениеФайла)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПеремещениеФайлов)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПеренаправлениеЗадачи)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПодписаниеЭП)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПрерываниеБизнесПроцесса)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Расшифровывание)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.РегистрацияДокумента)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Создание)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.СтартБизнесПроцесса)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.УдалениеПодписиЭП)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Шифрование))
		|
		|СГРУППИРОВАТЬ ПО
		|	ПротоколРаботыПользователей.Пользователь
		|
		|УПОРЯДОЧИТЬ ПО
		|	Пользователь";
	
	Запрос.УстановитьПараметр("Пользователи", МассивПользователей);
	Запрос.УстановитьПараметр("МинДата", НачалоДня(МинДата));
	Запрос.УстановитьПараметр("МаксДата", КонецДня(МаксДата));
	
	ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Стр Из ТаблицаРезультатаЗапроса Цикл
		
		СтрокаТабл = ТаблицаОтдел.Найти(Стр.Пользователь, "Пользователь");
		Если СтрокаТабл <> Неопределено Тогда
			СтрокаТабл.Изменений = Стр.Изменений;
		КонецЕсли;	
		
	КонецЦикла;
	
	//  по отделу среднее
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПротоколРаботыПользователей.Пользователь КАК Пользователь,
		|	КОЛИЧЕСТВО(*) КАК Всего
		|ИЗ
		|	РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|ГДЕ
		|	ПротоколРаботыПользователей.Дата >= &МинДата
		|	И ПротоколРаботыПользователей.Дата <= &МаксДата
		|	И ПротоколРаботыПользователей.Пользователь В(&Пользователи)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПротоколРаботыПользователей.Пользователь
		|
		|УПОРЯДОЧИТЬ ПО
		|	Всего";
	
	Запрос.УстановитьПараметр("Пользователи", МассивПользователей);
	Запрос.УстановитьПараметр("МинДата", НачалоДня(МинДата));
	Запрос.УстановитьПараметр("МаксДата", КонецДня(МаксДата));
	
	ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();
	// найдем медиану
	Медиана = 0;
	Если ТаблицаРезультатаЗапроса.Количество() <> 0 Тогда
		Если ТаблицаРезультатаЗапроса.Количество() % 2 = 1 Тогда // нечетное
			
			Позиция = (ТаблицаРезультатаЗапроса.Количество() - 1) / 2;
			Медиана = ТаблицаРезультатаЗапроса[Позиция].Всего;
			
		Иначе	
			
			Позиция1 = ТаблицаРезультатаЗапроса.Количество() / 2 - 1;
			Позиция2 = ТаблицаРезультатаЗапроса.Количество() / 2;
			Медиана = (ТаблицаРезультатаЗапроса[Позиция1].Всего + ТаблицаРезультатаЗапроса[Позиция2].Всего) / 2;
			
		КонецЕсли;	
	КонецЕсли;	
	
	ВсегоОтдел = Медиана;
	
	//  по отделу изменения
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПротоколРаботыПользователей.Пользователь КАК Пользователь,
		|	КОЛИЧЕСТВО(*) КАК Всего
		|ИЗ
		|	РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|ГДЕ
		|	ПротоколРаботыПользователей.Дата >= &МинДата
		|	И ПротоколРаботыПользователей.Дата <= &МаксДата
		|	И ПротоколРаботыПользователей.Пользователь В(&Пользователи)
		|	И (ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Изменение)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ИзменениеФайла)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПеремещениеФайлов)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПеренаправлениеЗадачи)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПодписаниеЭП)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПрерываниеБизнесПроцесса)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Расшифровывание)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.РегистрацияДокумента)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Создание)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.СтартБизнесПроцесса)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.УдалениеПодписиЭП)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Шифрование))
		|
		|СГРУППИРОВАТЬ ПО
		|	ПротоколРаботыПользователей.Пользователь
		|
		|УПОРЯДОЧИТЬ ПО
		|	Всего";
	
	Запрос.УстановитьПараметр("Пользователи", МассивПользователей);
	Запрос.УстановитьПараметр("МинДата", НачалоДня(МинДата));
	Запрос.УстановитьПараметр("МаксДата", КонецДня(МаксДата));
	
	ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();
	// найдем медиану
	Медиана = 0;
	Если ТаблицаРезультатаЗапроса.Количество() <> 0 Тогда
		Если ТаблицаРезультатаЗапроса.Количество() % 2 = 1 Тогда // нечетное
			
			Позиция = (ТаблицаРезультатаЗапроса.Количество() - 1) / 2;
			Медиана = ТаблицаРезультатаЗапроса[Позиция].Всего;
			
		Иначе	
			
			Позиция1 = ТаблицаРезультатаЗапроса.Количество() / 2 - 1;
			Позиция2 = ТаблицаРезультатаЗапроса.Количество() / 2;
			Медиана = (ТаблицаРезультатаЗапроса[Позиция1].Всего + ТаблицаРезультатаЗапроса[Позиция2].Всего) / 2;
			
		КонецЕсли;	
	КонецЕсли;	
	
	ИзмененияОтдел = Медиана;
	
	НовСтр = ТаблицаОтдел.Добавить();
	НовСтр.Пользователь = НСтр("ru = 'Среднее по отделу'");
	НовСтр.Всего = ВсегоОтдел;
	НовСтр.Изменений = ИзмененияОтдел;
	НовСтр.ЭтоПоОтделу = Истина;
	
	ЗначениеВРеквизитФормы(ТаблицаОтдел, "ТаблицаПоОтделу");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПротокол_ПоТипамДанных()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВыделенныеДаты = Элементы.Дата.ВыделенныеДаты;
	Если ВыделенныеДаты.Количество() = 0 Тогда
		ВыделенныеДаты.Добавить(Дата);
	КонецЕсли;	
	
	МинДата = Неопределено;
	МаксДата = Неопределено;
	Для Каждого СтрДата Из ВыделенныеДаты Цикл
		
		Если МинДата = Неопределено Тогда
			МинДата = СтрДата;
		Иначе	
			МинДата = Мин(МинДата, СтрДата);
		КонецЕсли;	
		
		Если МаксДата = Неопределено Тогда
			МаксДата = СтрДата;
		Иначе	
			МаксДата = Макс(МаксДата, СтрДата);
		КонецЕсли;	
		
	КонецЦикла;	

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТИПЗНАЧЕНИЯ(ПротоколРаботыПользователей.ОбъектДанных) КАК ТипДанных,
		|	КОЛИЧЕСТВО(*) КАК ЧислоЗаписей
		|ИЗ
		|	РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|ГДЕ
		|	ПротоколРаботыПользователей.Дата >= &МинДата
		|	И ПротоколРаботыПользователей.Дата <= &МаксДата
		|   И НЕ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Справочник.Пользователи";
	
	Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.Пользователи") Тогда
		
		Запрос.Текст = Запрос.Текст + Символы.ВК 
			+ " И ПротоколРаботыПользователей.Пользователь = &Пользователь";
		
		Запрос.УстановитьПараметр("Пользователь", ВыбранныйПользовательИлиОтдел);
		
	ИначеЕсли ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда	
		
		Запрос.Текст = Запрос.Текст + Символы.ВК 
			+ " И ПротоколРаботыПользователей.Пользователь В (&Пользователи)";
			
		МассивПользователей = РаботаСПользователями.ПолучитьПользователейПодразделения(
			ВыбранныйПользовательИлиОтдел, Истина); //  с иерархией
		Запрос.УстановитьПараметр("Пользователи", МассивПользователей);
		
	КонецЕсли;	
	
	Запрос.Текст = Запрос.Текст + Символы.ВК + " СГРУППИРОВАТЬ ПО
		|	ТИПЗНАЧЕНИЯ(ПротоколРаботыПользователей.ОбъектДанных)";
	
	Запрос.Текст = Запрос.Текст + Символы.ВК + " УПОРЯДОЧИТЬ ПО ЧислоЗаписей УБЫВ";
	
	Запрос.УстановитьПараметр("МинДата", НачалоДня(МинДата));
	Запрос.УстановитьПараметр("МаксДата", КонецДня(МаксДата));
	
	ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();
	
	// Заполняем гистограмму
	ДиаграммаПоТипамДанных.Обновление = Ложь;
	
	ДиаграммаПоТипамДанных.АвтоМаксимальноеЗначение	= Ложь;
	ДиаграммаПоТипамДанных.АвтоМинимальноеЗначение	= Ложь;
	ДиаграммаПоТипамДанных.МаксимальноеЗначение		= 1;
	ДиаграммаПоТипамДанных.МинимальноеЗначение		= 0;
	ДиаграммаПоТипамДанных.БазовоеЗначение			= 0;
	ДиаграммаПоТипамДанных.ПропускатьБазовоеЗначение	= Истина;
	
	ДиаграммаПоТипамДанных.Очистить();
	
	Серия = ДиаграммаПоТипамДанных.Серии.Добавить(НСтр("ru= 'Активность пользователей'"));
	Серия.Текст = НСтр("ru= 'По типам данных'");
	Серия.Цвет = Новый Цвет(134,201,226);
	
	ЕстьДанные = Ложь;
	
	Для Каждого Строка Из ТаблицаРезультатаЗапроса Цикл
		
		ЕстьДанные = Истина;
	
		Точка = ДиаграммаПоТипамДанных.Точки.Добавить(НСтр("ru= 'Записей'"));
		ЗначениеТочки = Строка.ЧислоЗаписей;
		Точка.Текст = Строка.ТипДанных;
		Точка.Значение = Строка.ТипДанных;
		Для Каждого Серия Из ДиаграммаПоТипамДанных.Серии Цикл
			ДиаграммаПоТипамДанных.УстановитьЗначение(Точка, Серия, ЗначениеТочки);
		КонецЦикла;
		
	КонецЦикла;
	
	ДиаграммаПоТипамДанных.ТипДиаграммы = ТипДиаграммы.ГистограммаГоризонтальная;
	ДиаграммаПоТипамДанных.ПоложениеПодписей = ПоложениеПодписейКДиаграмме.КрайВнутри;
	ДиаграммаПоТипамДанных.ОтображатьЛегенду = Ложь;
	
	ДиаграммаПоТипамДанных.ВидПодписей = ВидПодписейКДиаграмме.Значение;
	
	ДиаграммаПоТипамДанных.Обновление = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПротокол_ПоСобытиям()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВыделенныеДаты = Элементы.Дата.ВыделенныеДаты;
	Если ВыделенныеДаты.Количество() = 0 Тогда
		ВыделенныеДаты.Добавить(Дата);
	КонецЕсли;	
	
	МинДата = Неопределено;
	МаксДата = Неопределено;
	Для Каждого СтрДата Из ВыделенныеДаты Цикл
		
		Если МинДата = Неопределено Тогда
			МинДата = СтрДата;
		Иначе	
			МинДата = Мин(МинДата, СтрДата);
		КонецЕсли;	
		
		Если МаксДата = Неопределено Тогда
			МаксДата = СтрДата;
		Иначе	
			МаксДата = Макс(МаксДата, СтрДата);
		КонецЕсли;	
		
	КонецЦикла;	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПротоколРаботыПользователей.ТипСобытия КАК ТипСобытия,
		|	КОЛИЧЕСТВО(*) КАК ЧислоЗаписей
		|ИЗ
		|	РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|ГДЕ
		|	ПротоколРаботыПользователей.Дата >= &МинДата
		|	И ПротоколРаботыПользователей.Дата <= &МаксДата";
	
	Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.Пользователи") Тогда
		
		Запрос.Текст = Запрос.Текст + Символы.ВК 
			+ " И ПротоколРаботыПользователей.Пользователь = &Пользователь";
		
		Запрос.УстановитьПараметр("Пользователь", ВыбранныйПользовательИлиОтдел);
		
	ИначеЕсли ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда	
		
		Запрос.Текст = Запрос.Текст + Символы.ВК 
			+ " И ПротоколРаботыПользователей.Пользователь В (&Пользователи)";
			
		МассивПользователей = РаботаСПользователями.ПолучитьПользователейПодразделения(
			ВыбранныйПользовательИлиОтдел, Истина); //  с иерархией
		Запрос.УстановитьПараметр("Пользователи", МассивПользователей);
		
	КонецЕсли;	
	
	Запрос.Текст = Запрос.Текст + Символы.ВК + " СГРУППИРОВАТЬ ПО
		|	ПротоколРаботыПользователей.ТипСобытия";
	
	Запрос.Текст = Запрос.Текст + Символы.ВК + " УПОРЯДОЧИТЬ ПО ЧислоЗаписей УБЫВ";
	
	Запрос.УстановитьПараметр("МинДата", НачалоДня(МинДата));
	Запрос.УстановитьПараметр("МаксДата", КонецДня(МаксДата));
	
	ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();
	
	// Заполняем гистограмму
	ДиаграммаПоСобытиям.Обновление = Ложь;
	
	ДиаграммаПоСобытиям.АвтоМаксимальноеЗначение	= Ложь;
	ДиаграммаПоСобытиям.АвтоМинимальноеЗначение	= Ложь;
	ДиаграммаПоСобытиям.МаксимальноеЗначение		= 1;
	ДиаграммаПоСобытиям.МинимальноеЗначение		= 0;
	ДиаграммаПоСобытиям.БазовоеЗначение			= 0;
	ДиаграммаПоСобытиям.ПропускатьБазовоеЗначение	= Истина;
	
	ДиаграммаПоСобытиям.Очистить();
	
	Серия = ДиаграммаПоСобытиям.Серии.Добавить(НСтр("ru= 'Активность пользователей'"));
	Серия.Текст = НСтр("ru= 'По событиям'");
	Серия.Цвет = Новый Цвет(148,194,161);
	
	ЕстьДанные = Ложь;
	
	Для Каждого Строка Из ТаблицаРезультатаЗапроса Цикл
		
		ЕстьДанные = Истина;
	
		Точка = ДиаграммаПоСобытиям.Точки.Добавить(НСтр("ru= 'Записей'"));
		ЗначениеТочки = Строка.ЧислоЗаписей;
		Точка.Текст = Строка.ТипСобытия;
		Точка.Значение = Строка.ТипСобытия;
		Для Каждого Серия Из ДиаграммаПоСобытиям.Серии Цикл
			ДиаграммаПоСобытиям.УстановитьЗначение(Точка, Серия, ЗначениеТочки);
		КонецЦикла;
		
	КонецЦикла;
	
	ДиаграммаПоСобытиям.ТипДиаграммы = ТипДиаграммы.ГистограммаГоризонтальная;
	ДиаграммаПоСобытиям.ПоложениеПодписей = ПоложениеПодписейКДиаграмме.КрайВнутри;
	ДиаграммаПоСобытиям.ОтображатьЛегенду = Ложь;
	
	ДиаграммаПоСобытиям.ВидПодписей = ВидПодписейКДиаграмме.Значение;
	
	ДиаграммаПоСобытиям.Обновление = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПротокол_ПоПользователям()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВыделенныеДаты = Элементы.Дата.ВыделенныеДаты;
	Если ВыделенныеДаты.Количество() = 0 Тогда
		ВыделенныеДаты.Добавить(Дата);
	КонецЕсли;	
	
	МинДата = Неопределено;
	МаксДата = Неопределено;
	Для Каждого СтрДата Из ВыделенныеДаты Цикл
		
		Если МинДата = Неопределено Тогда
			МинДата = СтрДата;
		Иначе	
			МинДата = Мин(МинДата, СтрДата);
		КонецЕсли;	
		
		Если МаксДата = Неопределено Тогда
			МаксДата = СтрДата;
		Иначе	
			МаксДата = Макс(МаксДата, СтрДата);
		КонецЕсли;	
		
	КонецЦикла;	

	МассивПользователей = РаботаСПользователями.ПолучитьПользователейПодразделения(
		ВыбранныйПользовательИлиОтдел, Истина); //  с иерархией
		
	ТаблицаПользователей = Новый ТаблицаЗначений;
	ТаблицаПользователей.Колонки.Добавить("Пользователь",
		Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	ТаблицаПользователей.Колонки.Добавить("ФИО",
		Новый ОписаниеТипов("Строка"));
	Для Каждого ТекПользователь Из МассивПользователей Цикл
		НовСтр = ТаблицаПользователей.Добавить();
		НовСтр.Пользователь = ТекПользователь;
		НовСтр.ФИО = Строка(ТекПользователь);
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПользователей.Пользователь КАК Пользователь,
		|	ТаблицаПользователей.ФИО КАК ФИО
		|ПОМЕСТИТЬ ТаблицаПользователейВременная
		|ИЗ
		|	&ТаблицаПользователей КАК ТаблицаПользователей
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПользователейВременная.Пользователь КАК Пользователь,
		|	КОЛИЧЕСТВО(ПротоколРаботыПользователей.Пользователь) КАК ЧислоЗаписей,
		|	0 КАК ЧислоИзменений
		|ИЗ
		|	ТаблицаПользователейВременная КАК ТаблицаПользователейВременная
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|		ПО (ПротоколРаботыПользователей.Пользователь = ТаблицаПользователейВременная.Пользователь)
		|			И (ПротоколРаботыПользователей.Дата >= &МинДата)
		|			И (ПротоколРаботыПользователей.Дата <= &МаксДата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПользователейВременная.Пользователь
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаПользователейВременная.Пользователь";
	
	Запрос.УстановитьПараметр("Пользователи", МассивПользователей);
	Запрос.УстановитьПараметр("ТаблицаПользователей", ТаблицаПользователей);
	
	Запрос.УстановитьПараметр("МинДата", НачалоДня(МинДата));
	Запрос.УстановитьПараметр("МаксДата", КонецДня(МаксДата));
	
	ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();
	ТаблицаРезультатаЗапроса.Колонки.Добавить("ФИО",
		Новый ОписаниеТипов("Строка"));
	
	Для Каждого Строка Из ТаблицаРезультатаЗапроса Цикл
		
		СтрокаТабл = ТаблицаПользователей.Найти(Строка.Пользователь, "Пользователь");
		Если СтрокаТабл <> Неопределено Тогда
			Строка.ФИО = СтрокаТабл.ФИО;
		КонецЕсли;	
		
	КонецЦикла;	
	ТаблицаРезультатаЗапроса.Сортировать("ФИО");
	
	// теперь изменения
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПротоколРаботыПользователей.Пользователь КАК Пользователь,
		|	0 КАК ЧислоЗаписей,
		|	КОЛИЧЕСТВО(*) КАК ЧислоИзменений
		|ИЗ
		|	РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|ГДЕ
		|	ПротоколРаботыПользователей.Дата >= &МинДата
		|	И ПротоколРаботыПользователей.Дата <= &МаксДата
		|	И ПротоколРаботыПользователей.Пользователь В(&Пользователи)
		|	И (ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Изменение)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ИзменениеФайла)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПеремещениеФайлов)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПеренаправлениеЗадачи)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПодписаниеЭП)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.ПрерываниеБизнесПроцесса)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Расшифровывание)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.РегистрацияДокумента)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Создание)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.СтартБизнесПроцесса)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.УдалениеПодписиЭП)
		|			ИЛИ ПротоколРаботыПользователей.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытийПротоколаРаботыПользователей.Шифрование))
		|
		|СГРУППИРОВАТЬ ПО
		|	ПротоколРаботыПользователей.Пользователь
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПротоколРаботыПользователей.Пользователь.Наименование";
	
	Запрос.УстановитьПараметр("Пользователи", МассивПользователей);
	
	Запрос.УстановитьПараметр("МинДата", НачалоДня(МинДата));
	Запрос.УстановитьПараметр("МаксДата", КонецДня(МаксДата));
	
	ТаблицаРезультатаИзменения = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Стр Из ТаблицаРезультатаИзменения Цикл
		
		СтрокаТабл = ТаблицаРезультатаЗапроса.Найти(Стр.Пользователь, "Пользователь");
		Если СтрокаТабл <> Неопределено Тогда
			СтрокаТабл.ЧислоИзменений = Стр.ЧислоИзменений;
		КонецЕсли;	
		
	КонецЦикла;
	
	// Заполняем гистограмму
	ДиаграммаПоПользователям.Обновление = Ложь;
	
	ДиаграммаПоПользователям.АвтоМаксимальноеЗначение	= Ложь;
	ДиаграммаПоПользователям.АвтоМинимальноеЗначение	= Ложь;
	ДиаграммаПоПользователям.МаксимальноеЗначение		= 1;
	ДиаграммаПоПользователям.МинимальноеЗначение		= 0;
	ДиаграммаПоПользователям.БазовоеЗначение			= 0;
	ДиаграммаПоПользователям.ПропускатьБазовоеЗначение	= Истина;
	
	ДиаграммаПоПользователям.Очистить();
	
	Серия = ДиаграммаПоПользователям.Серии.Добавить(НСтр("ru= 'Всего'"));
	Серия.Цвет = Новый Цвет(195,228,241);
	
	Серия = ДиаграммаПоПользователям.Серии.Добавить(НСтр("ru= 'Изменений'"));
	Серия.Цвет = Новый Цвет(132,115,215);
	
	ЕстьДанные = Ложь;
	
	Для Каждого Строка Из ТаблицаРезультатаЗапроса Цикл
		
		ЕстьДанные = Истина;
	
		Точка = ДиаграммаПоПользователям.Точки.Добавить(НСтр("ru= 'Записей'"));
		Точка.Текст = Строка.Пользователь;
		Точка.Значение = Строка.Пользователь;
		
		НомерСерии = 0;
		Для Каждого Серия Из ДиаграммаПоПользователям.Серии Цикл
			
			Если НомерСерии = 0 Тогда
				ЗначениеТочки = Строка.ЧислоЗаписей;
			Иначе
				ЗначениеТочки = Строка.ЧислоИзменений;
			КонецЕсли;	
			
			ДиаграммаПоПользователям.УстановитьЗначение(Точка, Серия, ЗначениеТочки);
			
			НомерСерии = НомерСерии + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ДиаграммаПоПользователям.ТипДиаграммы = ТипДиаграммы.ГистограммаГоризонтальная;
	ДиаграммаПоПользователям.ПоложениеПодписей = ПоложениеПодписейКДиаграмме.КрайВнутри;
	ДиаграммаПоПользователям.ОтображатьЛегенду = Истина;
	ДиаграммаПоПользователям.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Верх;
	
	ДиаграммаПоПользователям.ВидПодписей = ВидПодписейКДиаграмме.Значение;
	
	ДиаграммаПоПользователям.Обновление = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПротоколСерверСписок(ОбновитьБезусловно = Истина)
	
	Если ОбновитьБезусловно Тогда
		СписокЗагружен = Ложь;
		ТаблицаПоОтделуЗагружена = Ложь;
	КонецЕсли;	
	
	Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда	
		Элементы.ГруппаСнизуСтатус.Видимость = Ложь;
	Иначе
		
		Элементы.ГруппаСнизуСтатус.Видимость = Истина;
		
	КонецЕсли;	
	
	ЗаполнитьТаблицуОтдела();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПротоколТолькоСписок(ОбновитьПоКоманде = Ложь)
	
	Если Не ЗначениеЗаполнено(ВыбранныйПользовательИлиОтдел) Тогда
		Возврат;
	КонецЕсли;	
	
	Элементы.ЗаполнитьСписок.Видимость = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВыделенныеДаты = Элементы.Дата.ВыделенныеДаты;
	Если ВыделенныеДаты.Количество() = 0 Тогда
		ВыделенныеДаты.Добавить(Дата);
	КонецЕсли;	
	
	МинДата = Неопределено;
	МаксДата = Неопределено;
	Для Каждого СтрДата Из ВыделенныеДаты Цикл
		
		Если МинДата = Неопределено Тогда
			МинДата = СтрДата;
		Иначе	
			МинДата = Мин(МинДата, СтрДата);
		КонецЕсли;	
		
		Если МаксДата = Неопределено Тогда
			МаксДата = СтрДата;
		Иначе	
			МаксДата = Макс(МаксДата, СтрДата);
		КонецЕсли;	
		
	КонецЦикла;	

	ТаблицаПротокол = РеквизитФормыВЗначение("ПротоколРаботы");
	ТаблицаПротокол.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПротоколРаботыПользователей.Дата КАК Дата,
		|	ПротоколРаботыПользователей.ОбъектДанных КАК ОбъектДанных,
		|	ПРЕДСТАВЛЕНИЕ(ПротоколРаботыПользователей.ОбъектДанных) КАК ОбъектДанныхПредставление,
		|	ПротоколРаботыПользователей.Пользователь КАК Пользователь,
		|	ПротоколРаботыПользователей.ТипСобытия КАК ТипСобытия,
		|	ПротоколРаботыПользователей.Длительность КАК Длительность,
		|	ПротоколРаботыПользователей.ДополнительныеСведения КАК ДополнительныеСведения,
		|	ПротоколРаботыПользователей.ОписаниеСобытия КАК ОписаниеСобытия,
		|	ПротоколРаботыПользователей.ИмяКомпьютера КАК ИмяКомпьютера
		|ИЗ
		|	РегистрСведений.ПротоколРаботыПользователей КАК ПротоколРаботыПользователей
		|ГДЕ
		|	ПротоколРаботыПользователей.Дата >= &МинДата
		|	И ПротоколРаботыПользователей.Дата <= &МаксДата";
	
	Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.Пользователи") Тогда
		
		Запрос.Текст = Запрос.Текст + Символы.ВК 
			+ " И ПротоколРаботыПользователей.Пользователь = &Пользователь";
		
		Запрос.УстановитьПараметр("Пользователь", ВыбранныйПользовательИлиОтдел);
		
	ИначеЕсли ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда	
		
		Запрос.Текст = Запрос.Текст + Символы.ВК 
			+ " И ПротоколРаботыПользователей.Пользователь В (&Пользователи)";
			
		МассивПользователей = РаботаСПользователями.ПолучитьПользователейПодразделения(
			ВыбранныйПользовательИлиОтдел, Истина); //  с иерархией
		Запрос.УстановитьПараметр("Пользователи", МассивПользователей);
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Событие) Тогда
		
		Запрос.Текст = Запрос.Текст + Символы.ВК 
			+ " И ПротоколРаботыПользователей.ТипСобытия = &Событие";
				
		Запрос.УстановитьПараметр("Событие", Событие);
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ТипДанных) Тогда
		
		Если ТипДанных = "Внутренние документы" Тогда
		
			Запрос.Текст = Запрос.Текст + Символы.ВК 
				+ " И ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Справочник.ВнутренниеДокументы";
				
		ИначеЕсли ТипДанных = "Входящие документы" Тогда
		
			Запрос.Текст = Запрос.Текст + Символы.ВК 
				+ " И ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Справочник.ВходящиеДокументы";
				
		ИначеЕсли ТипДанных = "Исходящие документы" Тогда
		
			Запрос.Текст = Запрос.Текст + Символы.ВК 
				+ " И ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Справочник.ИсходящиеДокументы";
				
		ИначеЕсли ТипДанных = "Задачи" Тогда
		
			Запрос.Текст = Запрос.Текст + Символы.ВК 
				+ " И (ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Задача.ЗадачаИсполнителя
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА БизнесПроцесс.Исполнение
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА БизнесПроцесс.КомплексныйПроцесс
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА БизнесПроцесс.ОбработкаВнутреннегоДокумента
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА БизнесПроцесс.ОбработкаВходящегоДокумента
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА БизнесПроцесс.ОбработкаИсходящегоДокумента
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА БизнесПроцесс.Ознакомление
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА БизнесПроцесс.Поручение
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА БизнесПроцесс.Приглашение
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА БизнесПроцесс.Рассмотрение
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА БизнесПроцесс.Регистрация
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА БизнесПроцесс.РешениеВопросовВыполненияЗадач
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА БизнесПроцесс.Согласование
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА БизнесПроцесс.Утверждение)";
				
		ИначеЕсли ТипДанных = "Файлы" Тогда
		
			Запрос.Текст = Запрос.Текст + Символы.ВК 
				+ " И (ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Справочник.ВерсииФайлов
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Справочник.Файлы)";
				
		ИначеЕсли ТипДанных = "Мероприятия" Тогда
		
			Запрос.Текст = Запрос.Текст + Символы.ВК 
				+ " И ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Справочник.Мероприятия";
				
		ИначеЕсли ТипДанных = "Проекты" Тогда
		
			Запрос.Текст = Запрос.Текст + Символы.ВК 
				+ " И (ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Справочник.Проекты
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Справочник.ПроектныеЗадачи)";
				
		ИначеЕсли ТипДанных = "Отчеты" Тогда
		
			Запрос.Текст = Запрос.Текст + Символы.ВК 
				+ " И (ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Документ.ЕжедневныйОтчет
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Документ.ЕженедельныйОтчет)";
				
		ИначеЕсли ТипДанных = "Бронь" Тогда
		
			Запрос.Текст = Запрос.Текст + Символы.ВК 
				+ " И ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Документ.Бронь";
				
		ИначеЕсли ТипДанных = "Отсутствие" Тогда
		
			Запрос.Текст = Запрос.Текст + Символы.ВК 
				+ " И ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Документ.Отсутствие";
				
		ИначеЕсли ТипДанных = "Почта" Тогда
		
			Запрос.Текст = Запрос.Текст + Символы.ВК 
				+ " И (ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Документ.ВходящееПисьмо
				| ИЛИ ПротоколРаботыПользователей.ОбъектДанных ССЫЛКА Документ.ИсходящееПисьмо)";
				
		КонецЕсли;	

	КонецЕсли;	
	
	Запрос.Текст = Запрос.Текст + Символы.ВК + " УПОРЯДОЧИТЬ ПО Дата";
	
	Запрос.УстановитьПараметр("МинДата", НачалоДня(МинДата));
	Запрос.УстановитьПараметр("МаксДата", КонецДня(МаксДата));
	
	Первое = Неопределено;
	Последнее = Неопределено;
	
	таблЗапроса = Запрос.Выполнить().Выгрузить();
	Для Каждого Стр Из таблЗапроса Цикл
		
		НовСтр = ТаблицаПротокол.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
		
		Если СтрНайти(НовСтр.ОбъектДанныхПредставление, НСтр("ru = 'Объект не найден'")) Тогда
			НовСтр.ОбъектДанныхПредставление = НСтр("ru = 'Объекта нет в этом узле'");
		КонецЕсли;	
		
		Если Первое = Дата('00010101') Тогда
			Первое = Стр.Дата;
		Иначе	
			Первое = Мин(Первое, Стр.Дата);
		КонецЕсли;	
		
		Если Последнее = Дата('00010101') Тогда
			Последнее = Стр.Дата;
		Иначе	
			Последнее = Макс(Последнее, Стр.Дата);
		КонецЕсли;	
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТаблицаПротокол, "ПротоколРаботы");
	ВсегоДействий = таблЗапроса.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСотрудниковПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСотрудниковПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПротоколРаботыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПротоколРаботыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПротоколРаботыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.ПротоколРаботы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Элементы.ПротоколРаботы.ТекущиеДанные.ОбъектДанных) Тогда
		ПоказатьЗначение(, Элементы.ПротоколРаботы.ТекущиеДанные.ОбъектДанных);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПротоколРаботыОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПротоколРаботыПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПротоколРаботыОбъектНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПротоколРаботыОбъектОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриВыводеПериода(Элемент, ОформлениеПериода)
	
	Если Не ЗаданГрафикРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаОформленияПериода Из ОформлениеПериода.Даты Цикл
		
		Если ЗаполненныеГода.НайтиПоЗначению(Год(СтрокаОформленияПериода.Дата)) = Неопределено Тогда
			РаботаСРабочимКалендаремСервер.ЗаполнитьРабочиеДни(
				РабочиеДни, ЗаполненныеГода, СтрокаОформленияПериода.Дата);
		КонецЕсли;
		
		СтрокаРабочиеДни = РабочиеДни.НайтиПоЗначению(СтрокаОформленияПериода.Дата);
		Если СтрокаРабочиеДни = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаРабочиеДни.Пометка Тогда
			СтрокаОформленияПериода.ЦветТекста = WebЦвета.Черный;
		Иначе
			СтрокаОформленияПериода.ЦветТекста = WebЦвета.Красный;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьГрафикРаботы()
	
	ГрафикРаботы = ГрафикиРаботы.ПолучитьГрафикРаботыПользователя(
		Пользователи.ТекущийПользователь());
	ЗаданГрафикРаботы = ЗначениеЗаполнено(ГрафикРаботы);
	Если ЗаданГрафикРаботы Тогда
		РаботаСРабочимКалендаремСервер.ЗаполнитьРабочиеДни(
			РабочиеДни, ЗаполненныеГода, Дата);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаписатьВЧат(Команда)
	
	Если ЗначениеЗаполнено(ВыбранныйПользовательИлиОтдел) Тогда
		
		Если Не ОбсужденияСлужебныйКлиент.Подключены() Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Обсуждения не подключены.'"));
			Возврат;
		КонецЕсли;
		
		Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.Пользователи") Тогда
			НовоеОбсуждение = НовоеОбсуждение(ВыбранныйПользовательИлиОтдел);
		Иначе
			НовоеОбсуждение = АвтообноновляемоеОбсуждение(ВыбранныйПользовательИлиОтдел);
		КонецЕсли;	
		
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(НовоеОбсуждение);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция АвтообноновляемоеОбсуждение(КонтейнерСсылка)
	
	Обсуждение = ОбсужденияДокументооборот.АвтообноновляемоеОбсуждение(
		КонтейнерСсылка, Истина);
	Возврат Обсуждение;
	
КонецФункции

&НаСервереБезКонтекста
Функция НовоеОбсуждение(ПользовательСсылка)
	
	Если Не ОбсужденияСлужебныйВызовСервера.Подключены() Тогда
		Если ПравоДоступа("РегистрацияИнформационнойБазыСистемыВзаимодействия", Метаданные) Тогда 
			Возврат "НеПодключеноВозможноПодключить";
		Иначе 
			Возврат "НеПодключеноНетПравНаПодключение";
		КонецЕсли;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ИдентификаторПользователяИнформационнойБазы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		ПользовательСсылка, "ИдентификаторПользователяИБ");
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Не ЗначениеЗаполнено(ИдентификаторПользователяИнформационнойБазы) Тогда
		Возврат "Недоступно";
	КонецЕсли;
	
	Попытка
		ИдентификаторПользователяСВ = СистемаВзаимодействия.ПолучитьИдентификаторПользователя(
			ИдентификаторПользователяИнформационнойБазы);
	Исключение
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Для начала обсуждения необходимо, чтобы пользователь %1
			           |хотя бы один раз запустил программу.'"),
			ПользовательСсылка);
	КонецПопытки;
	
	Если ИдентификаторПользователяСВ = СистемаВзаимодействия.ИдентификаторТекущегоПользователя() Тогда 
		ВызватьИсключение НСтр("ru = 'Для начала обсуждения выберите другого пользователя.'");
	КонецЕсли;
	
	Обсуждение = СистемаВзаимодействия.СоздатьОбсуждение();
	Обсуждение.Групповое = Ложь;
	Обсуждение.Участники.Добавить(СистемаВзаимодействия.ИдентификаторТекущегоПользователя());
	Обсуждение.Участники.Добавить(ИдентификаторПользователяСВ);
	Обсуждение.Записать();
	
	Возврат ПолучитьНавигационнуюСсылку(Обсуждение.Идентификатор);
	
КонецФункции

&НаКлиенте
Процедура НаписатьПисьмо(Команда)
	
	Если ЗначениеЗаполнено(ВыбранныйПользовательИлиОтдел) Тогда
		
		МассивПользователи = Новый Массив;
		
		Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.Пользователи") Тогда
			МассивПользователи.Добавить(ВыбранныйПользовательИлиОтдел);
		Иначе
			МассивПользователи = ПолучитьПользователейОтдела(ВыбранныйПользовательИлиОтдел);
		КонецЕсли;	
		
		ВстроеннаяПочтаКлиент.СоздатьПисьмоНаОснованииПользователей(
			МассивПользователи);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПользователейОтдела(Отдел)
	
	МассивПользователей = РаботаСПользователями.ПолучитьПользователейПодразделения(
		Отдел, Истина); //  с иерархией
		
	Возврат МассивПользователей;	
		
КонецФункции

&НаКлиенте
Процедура ОткрытьЕжедневныйОтчет(Команда)
	
	Если ЗначениеЗаполнено(ВыбранныйПользовательИлиОтдел) И
		ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.Пользователи") Тогда
	
		ОтчетЗаСегодня = ПолучитьЕжедневныеОтчетыТекущейДаты(Дата, ВыбранныйПользовательИлиОтдел);
		Если ЗначениеЗаполнено(ОтчетЗаСегодня) Тогда 
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Ключ", ОтчетЗаСегодня);
			ОткрытьФорму("Документ.ЕжедневныйОтчет.ФормаОбъекта", ПараметрыФормы);
		Иначе
			ПоказатьПредупреждение(, 
				СтрШаблон(НСтр("ru = 'Нет отчета за: %1.'"), 
				Формат(Дата, "ДЛФ=DD")));
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЕжедневныеОтчетыТекущейДаты(Дата, Пользователь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕжедневныйОтчет.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЕжедневныйОтчет КАК ЕжедневныйОтчет
	|ГДЕ
	|	ЕжедневныйОтчет.Пользователь = &Пользователь
	|	И НАЧАЛОПЕРИОДА(ЕжедневныйОтчет.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
	|	И НЕ ЕжедневныйОтчет.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура СобытиеПриИзменении(Элемент)
	ОбновитьПротоколСервер();
КонецПроцедуры

&НаКлиенте
Процедура ТипДанныхПриИзменении(Элемент)
	ОбновитьПротоколСервер();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыСправаПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ОбновитьПротоколСервер(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПоОтделуПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПоОтделуПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписок(Команда)
	
	НадоПоказатьВопрос = Истина;
	
	Если ТипЗнч(ВыбранныйПользовательИлиОтдел) = Тип("СправочникСсылка.Пользователи")
		И Элементы.Дата.ВыделенныеДаты.Количество() <= 2 Тогда
		НадоПоказатьВопрос = Ложь;
	КонецЕсли;	
	
	Если Не НадоПоказатьВопрос Тогда
		СписокЗаполненПоКнопке = Истина;
		ОбновитьПротоколТолькоСписок();
		Возврат;
	КонецЕсли;	
	
	ТекстВопроса = НСтр("ru = 'Заполнение может занять продолжительное время. Продолжить?'");
	
	Если Элементы.Дата.ВыделенныеДаты.Количество() > 4 Тогда
		ТекстВопроса = НСтр("ru = 'Заполнение может занять продолжительное время, т.к. выбран большой интервал дат.
		|Продолжить?'");
	КонецЕсли;	
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьСписокПослеВопроса", ЭтотОбъект, Параметры);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокПослеВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	СписокЗаполненПоКнопке = Истина;
	ОбновитьПротоколТолькоСписок();

КонецПроцедуры	

#КонецОбласти