#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получает список всех мировых часовых поясов.
// Первые 11 поясов в списке - российские, упорядоченные с запада на восток.
//
// Возвращаемое значение:
//   ТаблицаЗначений - список идентификаторов часовых поясов и их представлений
//
Функция ПолучитьЧасовыеПояса() Экспорт

	ЧасовыеПояса = Новый ТаблицаЗначений;
	ЧасовыеПояса.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	ЧасовыеПояса.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	ЧасовыеПояса.Колонки.Добавить("Смещение", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(6)));
	ЧасовыеПояса.Колонки.Добавить("Основной", Новый ОписаниеТипов("Булево"));
	
	ОсновныеЧасовыеПояса = ОсновныеЧасовыеПояса();
	
	Для Каждого ЧасовойПояс Из ПолучитьДопустимыеЧасовыеПояса() Цикл
		
		НоваяСтрока = ЧасовыеПояса.Добавить();
		НоваяСтрока.Идентификатор = ЧасовойПояс;
		НоваяСтрока.Представление = ОписаниеЧасовогоПояса(ЧасовойПояс, ОсновныеЧасовыеПояса);
		НоваяСтрока.Смещение = СмещениеСтандартногоВремени(ЧасовойПояс);
		НоваяСтрока.Основной = ОсновныеЧасовыеПояса.Получить(ЧасовойПояс) <> Неопределено;
		
	КонецЦикла;
	
	ЧасовыеПояса.Сортировать("Основной УБЫВ, Смещение");
		
	Возврат ЧасовыеПояса

КонецФункции // ПолучитьЧасовыеПояса()

// Запрашивает в МС версию поддерживаемого интерфейса, и сравнивает ее с переданным значением.
// Если текущая версия ниже переданного значения выводится сообщение пользователю.
//
// Параметры:
//  Версия - Число - версия для сравнения с текущей версией интерфейса в МС.
//  Отказ - Булево - если версия интерфейса МС ниже переданной, тогда Отказ = Истина. 
//
Процедура ПроверитьВерсиюИнтерфейса(Версия, Отказ) Экспорт
    
    СвойстваВерсии = ПрограммныйИнтерфейсСервиса.СвойстваВерсииИнтерфейса();
    Если СвойстваВерсии.Версия < Версия Тогда
        ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            НСтр("ru = 'Функциональность не поддерживается текущей версией интерфейса. 
            |   Требуемая версия - %1, используемая версия - %2.'"),
            Версия, СвойстваВерсии.Версия);
        ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
    КонецЕсли; 
    
КонецПроцедуры
    
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции
    
Функция ОписаниеЧасовогоПояса(Знач ЧасовойПояс, ОсновныеЧасовыеПояса = Неопределено)
	
	Если ОсновныеЧасовыеПояса = Неопределено Тогда
		ОсновныеЧасовыеПояса = ОсновныеЧасовыеПояса();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЧасовойПояс) Тогда
		ЧасовойПояс = ЧасовойПояс();
	КонецЕсли;
	
	Смещение = СмещениеСтандартногоВремени(ЧасовойПояс);
	СмещениеДата = ?(Смещение >= 0, Дата(1,1,1) + Смещение, Дата(1,1,1) - Смещение);
	ПредставлениеДаты = Формат(СмещениеДата, "ДФ=ЧЧ:мм; ДП=00:00");
	ПредставлениеСмещения = ?(Смещение >= 0, "GMT+" + ПредставлениеДаты, "GMT-" + ПредставлениеДаты);
	
	ПредставлениеПояса = ОсновныеЧасовыеПояса.Получить(ЧасовойПояс);
	Если ПредставлениеПояса = Неопределено Тогда
		ПредставлениеПояса = ПредставлениеЧасовогоПояса(ЧасовойПояс);
		Если ПредставлениеПояса = ПредставлениеСмещения Тогда
			ПредставлениеПояса = ЧасовойПояс;
		КонецЕсли;
		Если ПредставлениеПояса <> ЧасовойПояс Тогда
			ПредставлениеПояса = ПредставлениеПояса + " (" + ЧасовойПояс + ")";
		КонецЕсли;
	КонецЕсли;
	
	Возврат "(" + ПредставлениеСмещения + ") " + ПредставлениеПояса;
	
КонецФункции	

Функция ОсновныеЧасовыеПояса()
	
	ЧасовыеПояса = Новый Соответствие;
    
    КодЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
            
    ЧасовыеПояса.Вставить("Europe/Kaliningrad", НСтр("ru = 'Калининград'", КодЯзыка));
    ЧасовыеПояса.Вставить("Europe/Moscow", НСтр("ru = 'Москва, Санкт-Петербург'", КодЯзыка));
    ЧасовыеПояса.Вставить("Europe/Samara", НСтр("ru = 'Ижевск, Самара, Волгоград'", КодЯзыка));
    ЧасовыеПояса.Вставить("Asia/Yekaterinburg", НСтр("ru = 'Екатеринбург'", КодЯзыка));
    ЧасовыеПояса.Вставить("Asia/Omsk", НСтр("ru = 'Омск'", КодЯзыка));
    ЧасовыеПояса.Вставить("Asia/Krasnoyarsk", НСтр("ru = 'Красноярск'", КодЯзыка));
    ЧасовыеПояса.Вставить("Asia/Irkutsk", НСтр("ru = 'Иркутск'", КодЯзыка));
    ЧасовыеПояса.Вставить("Asia/Yakutsk", НСтр("ru = 'Якутск'", КодЯзыка));
    ЧасовыеПояса.Вставить("Asia/Vladivostok", НСтр("ru = 'Владивосток'", КодЯзыка));
    ЧасовыеПояса.Вставить("Asia/Magadan", НСтр("ru = 'Магадан'", КодЯзыка));
    ЧасовыеПояса.Вставить("Asia/Kamchatka", НСтр("ru = 'Камчатка'", КодЯзыка));
    
    Возврат ЧасовыеПояса;
	
КонецФункции

#КонецОбласти 

#КонецЕсли
