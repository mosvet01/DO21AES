///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Подсистема "СПАРКРиски".
// ОбщийМодуль.СПАРКРискиКлиентСерверПереопределяемый.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Определяет свойства контрагента в форме или подписках на события.
//
// Параметры:
//	КонтрагентОбъект - ДанныеФормыСтруктура, СправочникОбъект - данные контрагента;
//	Форма - ФормаКлиентскогоПриложения - форма, из которой вызывается обработчик.
//		Если вызывается вне формы, тогда значение Неопределено;
//	СвойстваКонтрагента - Структура - в параметре возвращаются свойства контрагента:
//		* ИНН - Строка - ИНН контрагента. Значение по умолчанию - пустая строка;
//		* ПодлежитПроверке - Булево - в параметре необходимо возвратить Истина, если контрагент
//			подлежит проверке в сервисе 1СПАРК Риски, Ложь - в противном случае.
//			Важно. Сервис 1СПАРК Риски не предоставляет информацию иностранным организациям;
//			Значение по умолчанию - Ложь;
//		* СвояОрганизация - Булево - признак того, что контрагент является собственным.
//			Значение по умолчанию - Ложь.
//			Свойство может быть использовано для отбора данных в отчетах;
//		* ВидКонтрагента - ПеречислениеСсылка.ВидыКонтрагентовСПАРКРиски - определяет способ получения данных
//			о контрагенте.
//
//@skip-warning
Процедура ПриОпределенииСвойствКонтрагентаВОбъекте(КонтрагентОбъект, Форма, СвойстваКонтрагента) Экспорт
	
	Если КонтрагентОбъект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель") Тогда
		СвойстваКонтрагента.ВидКонтрагента = 
			ПредопределенноеЗначение("Перечисление.ВидыКонтрагентовСПАРКРиски.ИндивидуальныйПредприниматель");
	Иначе
		СвойстваКонтрагента.ВидКонтрагента = 
			ПредопределенноеЗначение("Перечисление.ВидыКонтрагентовСПАРКРиски.ЮридическоеЛицо");
	КонецЕсли;
	
	#Если Сервер Тогда
		Если ТипЗнч(КонтрагентОбъект) = Тип("СправочникОбъект.Контрагенты") 
			Или ТипЗнч(КонтрагентОбъект) = Тип("ДанныеФормыСтруктура") Тогда 
			СвойстваКонтрагента.ИНН = КонтрагентОбъект.ИНН; 
			СвойстваКонтрагента.ПодлежитПроверке =
				КонтрагентОбъект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо");
		ИначеЕсли ТипЗнч(КонтрагентОбъект) = Тип("СправочникСсылка.Контрагенты") Тогда 
			ДанныеКонтрагента = ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(
				КонтрагентОбъект,
				"ИНН, ЮрФизЛицо");
			СвойстваКонтрагента.ИНН = ДанныеКонтрагента.ИНН; 
			СвойстваКонтрагента.ПодлежитПроверке =
				ДанныеКонтрагента.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо");
		КонецЕсли;
	#Иначе
		Если ТипЗнч(КонтрагентОбъект) = Тип("СправочникСсылка.Контрагенты") Тогда 
			ДанныеКонтрагента = ОбщегоНазначенияДокументооборотВызовСервера.ЗначенияРеквизитовОбъекта(
				КонтрагентОбъект,
				"ИНН, ЮрФизЛицо");
			СвойстваКонтрагента.ИНН = ДанныеКонтрагента.ИНН; 
			СвойстваКонтрагента.ПодлежитПроверке =
				ДанныеКонтрагента.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо");
		ИначеЕсли ТипЗнч(КонтрагентОбъект) = Тип("ДанныеФормыСтруктура") Тогда 
			СвойстваКонтрагента.ИНН = КонтрагентОбъект.ИНН; 
			СвойстваКонтрагента.ПодлежитПроверке =
				КонтрагентОбъект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо");
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

#Область ИндексыСПАРККонтрагента

// Выводит информацию об индексах СПАРК Риски в элемент управления.
// В случае, если информации нет в кэше, то инициируется фоновое задание.
// Если передан ИНН, то информация получается напрямую из веб-сервиса без фонового задания.
//
// Параметры:
//  РезультатИндексыКонтрагента - Структура - ключи описаны в СПАРКРискиКлиентСервер.НовыйДанныеИндексов();
//  КонтрагентОбъект            - Объект, Неопределено - заполняется в том случае, если форма - это форма
//                                элемента справочника, а не форма документа.
//  Контрагент                  - ОпределяемыйТип.КонтрагентБИП, Строка - Контрагент или ИНН контрагента;
//  Форма                       - ФормаКлиентскогоПриложения - форма, в которой необходимо вывести
//                                информацию об индексах СПАРК Риски.
//  ИспользованиеРазрешено      - Булево - признак разрешения использования функциональности;
//  Параметры                   - Структура - прочие параметры;
//  СтандартнаяОбработка        - Булево - если вернуть сюда Ложь, то стандартная обработка не будет происходить.
//
//@skip-warning
Процедура ОтобразитьИндексыСПАРК(
			РезультатИндексыКонтрагента,
			КонтрагентОбъект,
			Контрагент,
			Форма,
			ИспользованиеРазрешено,
			Параметры,
			СтандартнаяОбработка) Экспорт
	
	Если Форма.ИмяФормы = "Справочник.ВнутренниеДокументы.Форма.ФормаЭлемента" Тогда 
		
		СтандартнаяОбработка = Ложь;
		Если РезультатИндексыКонтрагента <> Неопределено Тогда 
			Если Форма.ВестиУчетПоКонтрагентам Тогда
				Если Форма.Объект.Контрагенты.Количество() > 1 Тогда
					ОтобразитьИндексыСПАРКДокументаСНесколькимиКонтрагентами(РезультатИндексыКонтрагента, Форма, ИспользованиеРазрешено, Параметры,
						СтандартнаяОбработка, Форма.Объект.Контрагенты);
				Иначе 
					ОтобразитьИндексыСПАРКДокументаСОднимКонтрагентом(РезультатИндексыКонтрагента, КонтрагентОбъект, Контрагент,
						Форма, ИспользованиеРазрешено, Параметры, СтандартнаяОбработка);
				КонецЕсли;
				
			ИначеЕсли Форма.ВестиУчетСторон Тогда
				ОтобразитьИндексыСПАРКДокументаСНесколькимиКонтрагентами(РезультатИндексыКонтрагента, Форма, ИспользованиеРазрешено, Параметры,
					СтандартнаяОбработка, Форма.Объект.Стороны, "Сторона");
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.ВходящиеДокументы.Форма.ФормаЭлемента" Тогда 
		
		СтандартнаяОбработка = Ложь;
		Если РезультатИндексыКонтрагента <> Неопределено Тогда 
			ОтобразитьИндексыСПАРКДокументаСОднимКонтрагентом(РезультатИндексыКонтрагента, КонтрагентОбъект, Контрагент,
				Форма, ИспользованиеРазрешено, Параметры, СтандартнаяОбработка);
		КонецЕсли;
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.ИсходящиеДокументы.Форма.ФормаЭлемента" Тогда 
		
		СтандартнаяОбработка = Ложь;
		Если РезультатИндексыКонтрагента <> Неопределено Тогда 
			Если Форма.Объект.Получатели.Количество() > 1 Тогда
				ОтобразитьИндексыСПАРКДокументаСНесколькимиКонтрагентами(РезультатИндексыКонтрагента, Форма, ИспользованиеРазрешено, Параметры,
					СтандартнаяОбработка, Форма.Объект.Получатели, "Получатель");
			Иначе 
				ОтобразитьИндексыСПАРКДокументаСОднимКонтрагентом(РезультатИндексыКонтрагента, КонтрагентОбъект, Контрагент,
					Форма, ИспользованиеРазрешено, Параметры, СтандартнаяОбработка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает информацию об индексах СПАРК Риски в виде структуры форматированных строк.
// В случае, если информации нет в кэше, то инициируется фоновое задание.
// Если передан ИНН, то информация получается напрямую из веб-сервиса без фонового задания.
//
// Параметры:
//  ПредставленияИндексов - Структура - сюда необходимо передать форматированные строки,
//                          если необходимо переопределение;
//  РезультатИндексыКонтрагента - Структура, Неопределено - результата выполнения функции ИндексыСПАРККонтрагента
//                                (ключи описаны в СПАРКРискиКлиентСервер.НовыйДанныеИндексов()),
//                                или Неопределено, если необходимо вызвать эту функцию;
//  Контрагент - ОпределяемыйТип.КонтрагентБИП, Строка - Контрагент или ИНН контрагента;
//  Форма      - ФормаКлиентскогоПриложения - форма, в которой необходимо вывести информацию об индексах СПАРК Риски;
//  СтандартнаяОбработка - Булево - если вернуть сюда Ложь, то стандартная обработка не будет происходить.
//
//@skip-warning
Процедура ПолучитьПредставленияИндексов(
			ПредставленияИндексов,
			РезультатИндексыКонтрагента,
			Контрагент,
			Форма,
			СтандартнаяОбработка) Экспорт

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОтобразитьИндексыСПАРКДокументаСОднимКонтрагентом(РезультатИндексыКонтрагента, КонтрагентОбъект, Контрагент,
	Форма, ИспользованиеРазрешено, Параметры, СтандартнаяОбработка)
	
	Если Не ИспользованиеРазрешено Тогда
		
		Форма.Элементы.ГруппаИндексыСПАРКРиски.Видимость = Ложь;
		Форма.Элементы.ГруппаИндексыСПАРКРиски2.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	ЭтоНеФизлицо = Ложь;
	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		ЮрФизЛицо = ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(Контрагент, "ЮрФизЛицо");
		Если ЮрФизЛицо <> ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") Тогда
			ЭтоНеФизлицо = Истина;
		КонецЕсли;	
	КонецЕсли;	
	
	Если РезультатИндексыКонтрагента.ПодлежитПроверке <> Истина 
		Или Не ЗначениеЗаполнено(РезультатИндексыКонтрагента.Контрагент)
		Или ЭтоНеФизлицо Тогда
		// НЕ юридических лиц (физлиц, иностранные организации и т.п.) - не выводим вообще.
		Форма.Элементы.ДекорацияИндексыСПАРКРиски.Видимость                 = Ложь;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Видимость = Ложь;
		
		Форма.Элементы.ГруппаИндексыСПАРКРиски.Видимость = Ложь;
		Форма.Элементы.ГруппаИндексыСПАРКРиски2.Видимость = Ложь;
		Возврат;
	Иначе
		Форма.Элементы.ДекорацияИндексыСПАРКРиски.Видимость                 = Истина;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Видимость = Истина;
	КонецЕсли;

	// В форме имена элементов управления и реквизита - фиксированные.
	// 1. В зависимости от того, загружены данные, или выполнятся фоновое задание, вывести или скрыть картинку ожидания.
	Если РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ЗапущеноФоновоеЗадание") Тогда
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Видимость = Истина;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Картинка = БиблиотекаКартинок.ДлительнаяОперация16;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Подсказка = НСтр("ru='Выполняется получение данных из Интернет.'");
	ИначеЕсли РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ОтменаФоновогоЗадания") Тогда
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Видимость = Истина;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Картинка = БиблиотекаКартинок.Предупреждение;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Подсказка = НСтр("ru='Получение данных из Интернет отменено.'");
	ИначеЕсли РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ОшибкаФоновогоЗадания") Тогда
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Видимость = Истина;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Картинка = БиблиотекаКартинок.Предупреждение;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Подсказка = НСтр("ru='Ошибка получения данных из Интернет.'");
	Иначе // Загрузка завершена или не осуществлялась.
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Видимость = Ложь;
	КонецЕсли;
	
	ЦветаСтилей = СПАРКРискиВызовСервера.ЦветаСтилей();

	МассивСтрок = Новый Массив;
	
	Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаЗел.Видимость  = Ложь;
	Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаОранж.Видимость  = Ложь;
	Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаКр.Видимость  = Ложь;
	
	// Если сервис не подключен, то выводится:
	// "1СПАРК Риски: оценка надежности контрагентов. _Подробнее_".
	// Если данные есть, то:
	// "Индекс должной осмотрительности: %1 (_%2 риск_)".
	// В случае других ошибок, вывести их.
	ЕстьОшибкаПодключения = Истина;
	СводныйИндикаторКартинка = 0;
	Если РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ВнутренняяОшибкаСервиса") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ИнтернетПоддержкаНеПодключена") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ИспользованиеЗапрещено") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеизвестнаяОшибка") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеизвестныйИНН") Тогда
		ЕстьОшибкаПодключения = Ложь;
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
			НСтр("ru='Нет информации о контрагенте'"),
			,
			,
			,
			"SPARK:NoInformation"));
		СводныйИндикаторКартинка = 5;
		
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НекорректныйЗапрос") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НекорректныйИНН") Тогда
		ЕстьОшибкаПодключения = Ложь;
		МассивСтрок.Добавить(
			Новый ФорматированнаяСтрока(
				НСтр("ru='Нет информации о контрагенте'"),
				,
				ЦветаСтилей.ЦветОсобогоТекста,
				,
				"SPARK:NoInformation"));
		СводныйИндикаторКартинка = 5;
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеПодлежитПроверке") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ОшибкаПодключения") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ПревышеноКоличествоПопытокАутентификации") Тогда
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ТребуетсяОплатаИлиПревышенЛимит") Тогда
	Иначе // Пустое поле - ошибок нет.
		ЕстьОшибкаПодключения = Ложь;
		ЕстьОшибкаПолученияДанных = Ложь;

		ТекстОшибки = "";
		ЦветТекстаОшибки = ЦветаСтилей.ЦветОсобогоТекста;
		Если РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ВКэшеНетДанных") Тогда
			ЕстьОшибкаПолученияДанных = Истина;
			Если РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ЗапущеноФоновоеЗадание") Тогда
				ТекстОшибки = НСтр("ru='Получение данных...'");
				ЦветТекстаОшибки = Неопределено; // Авто
			ИначеЕсли РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ОтменаФоновогоЗадания") Тогда
				ТекстОшибки = НСтр("ru='Ошибка получения данных (слишком медленное соединение или отменено администратором)'");
			ИначеЕсли РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ОшибкаФоновогоЗадания") Тогда
				ТекстОшибки = НСтр("ru='Ошибка получения данных'");
			Иначе // Загрузка завершена или не осуществлялась.
				ТекстОшибки = НСтр("ru='Ошибка получения данных (данные не получены)'");
			КонецЕсли;
		ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ВКэшеУстаревшиеДанные") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.НеправильныйИНН") Тогда
			ЕстьОшибкаПолученияДанных = Истина;
			ТекстОшибки = Новый ФорматированнаяСтрока(
				НСтр("ru='Нет информации о контрагенте'"),
				,
				,
				,
				"SPARK:NoInformation");
			СводныйИндикаторКартинка = 5;
		ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ПолученоИзКэша") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ПолученоИзФоновогоЗадания") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ПустаяСсылка") Тогда
		Иначе
			ЕстьОшибкаПолученияДанных = Истина;
			ТекстОшибки = НСтр("ru='Неопределенная ошибка'");
		КонецЕсли;
		Если ЕстьОшибкаПолученияДанных = Истина Тогда
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ТекстОшибки, , ЦветТекстаОшибки));
		Иначе
			
			// Если контрагент не активен, вывести сообщение "Контрагент прекратил деятельность %ДатаСтатуса%".
			Если (РезультатИндексыКонтрагента.Активен <> Истина) Тогда
				МассивСтрок.Добавить(
					Новый ФорматированнаяСтрока(
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru='Контрагент прекратил деятельность %1'"),
							Формат(РезультатИндексыКонтрагента.ДатаСтатуса, "ДЛФ=D")),
						,
						ЦветаСтилей.ЦветОсобогоТекста));
				МассивСтрок.Добавить(Символы.ПС);
			Иначе
				// Есть статус не равен "Действующая" необходимо вывести его.
				Если (РезультатИндексыКонтрагента.СводныйИндикатор >= 0)
						И (РезультатИндексыКонтрагента.СводныйИндикатор <= 100) Тогда
						
					Если РезультатИндексыКонтрагента.СводныйИндикатор = 1 Тогда 
						Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаЗел.Видимость  = Истина;
						Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаОранж.Видимость  = Ложь;
						Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаКр.Видимость  = Ложь;
						Форма.Элементы.ГруппаИндексыСПАРКРиски.Видимость = Ложь;
						Форма.Элементы.ГруппаИндексыСПАРКРиски2.Видимость = Истина;
						СводныйИндикаторКартинка = 3;
						
					ИначеЕсли РезультатИндексыКонтрагента.СводныйИндикатор = 2 Тогда 
						Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаЗел.Видимость  = Ложь;
						Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаОранж.Видимость  = Истина;
						Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаКр.Видимость  = Ложь;
						Форма.Элементы.ГруппаИндексыСПАРКРиски.Видимость = Ложь;
						Форма.Элементы.ГруппаИндексыСПАРКРиски2.Видимость = Истина;
						СводныйИндикаторКартинка = 8;
						
					ИначеЕсли РезультатИндексыКонтрагента.СводныйИндикатор = 3 Тогда 
						Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаЗел.Видимость  = Ложь;
						Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаОранж.Видимость  = Ложь;
						Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаКр.Видимость  = Истина;
						Форма.Элементы.ГруппаИндексыСПАРКРиски.Видимость = Ложь;
						Форма.Элементы.ГруппаИндексыСПАРКРиски2.Видимость = Истина;
						СводныйИндикаторКартинка = 1;
					Иначе 
						Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаЗел.Видимость  = Ложь;
						Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаОранж.Видимость  = Ложь;
						Форма.Элементы.ДекорацияИндексыСПАРКРискиСтрока2КартинкаКр.Видимость  = Ложь;
						Форма.Элементы.ГруппаИндексыСПАРКРиски2.Видимость = Ложь;
						СводныйИндикаторКартинка = 0;
					КонецЕсли
				Иначе
					МассивСтрок.Добавить(
						Новый ФорматированнаяСтрока(
							НСтр("ru='Нет информации о контрагенте'"),
							,
							,
							,
							"SPARK:NoInformation"));
					СводныйИндикаторКартинка = 5;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ЕстьОшибкаПодключения = Истина Тогда
		Если РезультатИндексыКонтрагента.ДоступностьПодключенияТестовогоПериода = "Доступно" Тогда
			МассивСтрок.Добавить(
					Новый ФорматированнаяСтрока(
						НСтр("ru='1СПАРК Риски:'")
						+ " "));
			МассивСтрок.Добавить(
				Новый ФорматированнаяСтрока(
					НСтр("ru='Подключить'"),
					,
					,
					,
					"SPARK:ConnectTrialTariff"));
			МассивСтрок.Добавить(" ");
			МассивСтрок.Добавить(
				Новый ФорматированнаяСтрока(
					НСтр("ru='тестовый период или'")));
			МассивСтрок.Добавить(" ");
			МассивСтрок.Добавить(
					Новый ФорматированнаяСтрока(
						НСтр("ru='купить сервис'"),
						,
						,
						,
						"SPARK:BuyTariff"));
			МассивСтрок.Добавить(" ");
			МассивСтрок.Добавить(
				Новый ФорматированнаяСтрока(
					НСтр("ru='проверки и мониторинга контрагентов'")
					+ " "));
				
		ИначеЕсли РезультатИндексыКонтрагента.ДоступностьПодключенияТестовогоПериода = "Подключение" Тогда
			МассивСтрок.Добавить(
				НСтр("ru = 'Выполняется подключение.'"));
		Иначе
		Если Не РезультатИндексыКонтрагента.ДанныеАутентификацииЗаполнены Тогда
				
				МассивСтрок.Добавить(
					Новый ФорматированнаяСтрока(
						НСтр("ru='1СПАРК Риски:'")
						+ " "));
				
				МассивСтрок.Добавить(
					Новый ФорматированнаяСтрока(
						НСтр("ru='Подробнее'"),
						,
						,
						,
						"SPARK:About"));
				
				МассивСтрок.Добавить(" ");
				МассивСтрок.Добавить(
					НСтр("ru='о проверке и мониторинге контрагентов'"));
				
			Иначе
				
				МассивСтрок.Добавить(
					Новый ФорматированнаяСтрока(
						НСтр("ru='1СПАРК Риски:'")
						+ " "));
				
				МассивСтрок.Добавить(
					Новый ФорматированнаяСтрока(
						НСтр("ru='Купить сервис'"),
						,
						,
						,
						"SPARK:BuyService"));
				
				МассивСтрок.Добавить(" ");
				МассивСтрок.Добавить(
					Новый ФорматированнаяСтрока(
						НСтр("ru='проверки и мониторинга контрагентов'")
						+ " "));
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Форма.ИмяФормы = "Справочник.ВнутренниеДокументы.Форма.ФормаЭлемента"
		И Форма.Объект.Контрагенты.Количество() > 0 Тогда 
		Форма.Объект.Контрагенты[0].СводныйИндикатор = СводныйИндикаторКартинка;
		Форма.Объект.Контрагенты[0].ИндексыСПАРКРиски = РезультатИндексыКонтрагента;
	ИначеЕсли Форма.ИмяФормы = "Справочник.ИсходящиеДокументы.Форма.ФормаЭлемента"
		И Форма.Объект.Получатели.Количество() > 0 Тогда 
		Форма.Объект.Получатели[0].СводныйИндикатор = СводныйИндикаторКартинка;
		Форма.Объект.Получатели[0].ИндексыСПАРКРиски = РезультатИндексыКонтрагента;
	КонецЕсли;
	
	Результат = Новый ФорматированнаяСтрока(МассивСтрок);
	Форма.Элементы.ДекорацияИндексыСПАРКРиски.Заголовок = Результат;
	Если ЗначениеЗаполнено(Результат) Тогда 
		Форма.Элементы.ГруппаИндексыСПАРКРиски.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтобразитьИндексыСПАРКДокументаСНесколькимиКонтрагентами(ИндексыКонтрагентов, Форма, ИспользованиеРазрешено, Параметры, СтандартнаяОбработка,
	Контрагенты, ИмяКолонки = "Контрагент");
	
	Если Не ИспользованиеРазрешено Тогда
		
		Форма.Элементы.ГруппаИндексыСПАРКРиски.Видимость = Ложь;
		Форма.Элементы.ГруппаИндексыСПАРКРиски2.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	ЦветаСтилей = СПАРКРискиВызовСервера.ЦветаСтилей();
	
	МассивИндексовКонтрагентов = Новый Массив;
	Если ТипЗнч(ИндексыКонтрагентов) = Тип("Структура") Тогда 
		МассивИндексовКонтрагентов.Добавить(ИндексыКонтрагентов);
	ИначеЕсли ТипЗнч(ИндексыКонтрагентов) = Тип("СписокЗначений") Тогда 
		МассивИндексовКонтрагентов = ИндексыКонтрагентов.ВыгрузитьЗначения();
	КонецЕсли;
	
	Для Каждого РезультатИндексыКонтрагента Из МассивИндексовКонтрагентов Цикл 
		//РезультатИндексыКонтрагента = ИндексыКонтрагента.Значение;
		
		Если РезультатИндексыКонтрагента.ПодлежитПроверке <> Истина Тогда
			Продолжить;
		КонецЕсли;

		ЦветСтиляЦветОсобогоТекста = ЦветаСтилей.ЦветОсобогоТекста;
		МассивСтрок = Новый Массив;
		СводныйИндикатор = 0; ИнформацияСпаркРиски = "";
		// Если сервис не подключен, то выводится:
		// "1СПАРК Риски: оценка надежности контрагентов. _Подробнее_".
		// Если данные есть, то:
		// "Индекс должной осмотрительности: %1 (_%2 риск_)".
		// В случае других ошибок, вывести их.
		Если РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ВнутренняяОшибкаСервиса") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ИнтернетПоддержкаНеПодключена") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ИспользованиеЗапрещено") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеизвестнаяОшибка") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеизвестныйИНН") Тогда
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
				НСтр("ru='Нет информации о контрагенте'"),
				,
				,
				,
				"SPARK:NoInformation"));
			ИнформацияСпаркРиски = "SPARK:NoInformation";
			СводныйИндикатор = 5;
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НекорректныйЗапрос") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НекорректныйИНН") Тогда
			МассивСтрок.Добавить(
				Новый ФорматированнаяСтрока(
					НСтр("ru='Нет информации о контрагенте'"),
					,
					ЦветСтиляЦветОсобогоТекста,
					,
					"SPARK:NoInformation"));
				ИнформацияСпаркРиски = "SPARK:NoInformation";
				СводныйИндикатор = 5;
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеПодлежитПроверке") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ОшибкаПодключения") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ПревышеноКоличествоПопытокАутентификации") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ТребуетсяОплатаИлиПревышенЛимит") Тогда
		Иначе // Пустое поле - ошибок нет.
			ЕстьОшибкаПолученияДанных = Ложь;

			ТекстОшибки = "";
			ЦветТекстаОшибки = ЦветСтиляЦветОсобогоТекста;
			Если РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ВКэшеНетДанных") Тогда
				ЕстьОшибкаПолученияДанных = Истина;
				Если РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ЗапущеноФоновоеЗадание") Тогда
					ТекстОшибки = НСтр("ru='Получение данных...'");
					ЦветТекстаОшибки = Неопределено; // Авто
				ИначеЕсли РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ОтменаФоновогоЗадания") Тогда
					ТекстОшибки = НСтр("ru='Ошибка получения данных (слишком медленное соединение или отменено администратором)'");
				ИначеЕсли РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ОшибкаФоновогоЗадания") Тогда
					ТекстОшибки = НСтр("ru='Ошибка получения данных'");
				Иначе // Загрузка завершена или не осуществлялась.
					ТекстОшибки = НСтр("ru='Ошибка получения данных (данные не получены)'");
				КонецЕсли;
			ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ВКэшеУстаревшиеДанные") Тогда
			ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.НеправильныйИНН") Тогда
				ЕстьОшибкаПолученияДанных = Истина;
				ТекстОшибки = Новый ФорматированнаяСтрока(
					НСтр("ru='Нет информации о контрагенте'"),
					,
					,
					,
					"SPARK:NoInformation");
				ИнформацияСпаркРиски = "SPARK:NoInformation";
				СводныйИндикатор = 5;
			ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ПолученоИзКэша") Тогда
			ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ПолученоИзФоновогоЗадания") Тогда
			ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ПустаяСсылка") Тогда
			Иначе
				ЕстьОшибкаПолученияДанных = Истина;
				ТекстОшибки = НСтр("ru='Неопределенная ошибка'");
			КонецЕсли;
			Если ЕстьОшибкаПолученияДанных = Истина Тогда
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ТекстОшибки, , ЦветТекстаОшибки));
			Иначе
				
				// Если контрагент не активен, вывести сообщение "Контрагент прекратил деятельность %ДатаСтатуса%".
				Если (РезультатИндексыКонтрагента.Активен <> Истина) Тогда
					МассивСтрок.Добавить(
						Новый ФорматированнаяСтрока(
							СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru='Контрагент прекратил деятельность %1'"),
								Формат(РезультатИндексыКонтрагента.ДатаСтатуса, "ДЛФ=D")),
							,
							ЦветСтиляЦветОсобогоТекста));
					МассивСтрок.Добавить(Символы.ПС);
					СводныйИндикатор = 1;
					ИнформацияСпаркРиски = "SPARK:NoInformation";
					
				Иначе
					// Есть статус не равен "Действующая" необходимо вывести его.
					Если (РезультатИндексыКонтрагента.СводныйИндикатор >= 0)
						И (РезультатИндексыКонтрагента.СводныйИндикатор <= 3) Тогда
						Если РезультатИндексыКонтрагента.СводныйИндикатор = 1 Тогда 
							СводныйИндикатор = 3;
							ИнформацияСпаркРиски = РезультатИндексыКонтрагента.СводныйИндикаторАдресКомандыПодсказки;
							
						ИначеЕсли РезультатИндексыКонтрагента.СводныйИндикатор = 2 Тогда 
							СводныйИндикатор = 8;
							ИнформацияСпаркРиски = РезультатИндексыКонтрагента.СводныйИндикаторАдресКомандыПодсказки;
							
						ИначеЕсли РезультатИндексыКонтрагента.СводныйИндикатор = 3 Тогда 
							СводныйИндикатор = 1;
							ИнформацияСпаркРиски = РезультатИндексыКонтрагента.СводныйИндикаторАдресКомандыПодсказки;
							
						КонецЕсли
					Иначе
						МассивСтрок.Добавить(
							Новый ФорматированнаяСтрока(
								НСтр("ru='Нет информации о контрагенте'"),
								,
								,
								,
								"SPARK:NoInformation"));
								
						СводныйИндикатор = 5;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого СтрокаКонтрагент Из Контрагенты Цикл 
			Если СтрокаКонтрагент[ИмяКолонки] = РезультатИндексыКонтрагента.Контрагент Тогда 
				СтрокаКонтрагент.СводныйИндикатор = СводныйИндикатор;
				СтрокаКонтрагент.ИнформацияСпаркРиски = ИнформацияСпаркРиски;
				СтрокаКонтрагент.ИндексыСПАРКРиски = РезультатИндексыКонтрагента;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
