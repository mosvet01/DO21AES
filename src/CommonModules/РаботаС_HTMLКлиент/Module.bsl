////////////////////////////////////////////////////////////////////////////////
// Работа с HTML.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Открывает ссылку в поле HTML документа.
//
// Параметры:
//  Элемент - ПолеФормы - Элемент
//  ДанныеСобытия - Структура - Данные события.
//  СтандартнаяОбработка - Булево - Стандартная обработка.
//  Форма - ФормаКлиентскогоПриложения
//
Процедура ОткрытьСсылку(Элемент, ДанныеСобытия, СтандартнаяОбработка, Форма) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ВыбраннаяСсылка = Неопределено;
	Если ДанныеСобытия.Href <> Неопределено Тогда
		// Если у данных события заполнено свойство Href - будем считать что переход будет по этой ссылке.
		ВыбраннаяСсылка = ДанныеСобытия.Href;
	Иначе
		Попытка
			// Если у элемента события заполнено свойство Href и элемент AREA - будем считать что переход будет по этой ссылке.
			Если ВРег(ДанныеСобытия.Element.tagName) = "AREA" Тогда
				ВыбраннаяСсылка = ДанныеСобытия.Element.Href;
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Если ПустаяСтрока(ВыбраннаяСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПерейтиПоВстроеннойСсылке(Элемент.Документ, ВыбраннаяСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	СхемаСсылки = ОпределитьСхемуСсылки(ВыбраннаяСсылка);
	
	Если СхемаСсылки = "v8doc:" Тогда
		
		ОбработатьСсылку1СДокументооборота(ВыбраннаяСсылка, Форма);
		
	ИначеЕсли СхемаСсылки = "e1c://" Тогда
		
		Если СтрНайти(ВыбраннаяСсылка, "Справочник.Файлы")
			И Форма <> Неопределено Тогда
			
			Файл = РаботаС_HTMLВызовСервера.СсылкаПоНавигационной(ВыбраннаяСсылка);
			Если ЗначениеЗаполнено(Файл) Тогда
				РаботаСФайламиКлиент.ОткрытьФайлДокумента(Файл, Форма);
				Возврат;
			КонецЕсли; 	
			
		КонецЕсли; 	
		
		ПерейтиПоНавигационнойСсылке(ВыбраннаяСсылка);
		
	ИначеЕсли (СхемаСсылки = "http://" И Найти(ВыбраннаяСсылка, "e1cib") > 0)
		ИЛИ (СхемаСсылки = "https://" И Найти(ВыбраннаяСсылка, "e1cib") > 0) Тогда
		
		Если Не ПерейтиПоВнутреннейНавигационнойСсылке(ВыбраннаяСсылка) Тогда
			ПерейтиПоНавигационнойСсылке(ВыбраннаяСсылка);
		КонецЕсли;
		
	ИначеЕсли СхемаСсылки = "http://"
		Или СхемаСсылки = "https://"
		Или СхемаСсылки = "ftp://"
		Или СхемаСсылки = "file://" Тогда
		
		#Если ВебКлиент Тогда
		ПерейтиПоНавигационнойСсылке(ВыбраннаяСсылка);
		#Иначе
		ЗапуститьПриложение(ВыбраннаяСсылка);
		#КонецЕсли
		
	Иначе
		
		ПерейтиПоНавигационнойСсылке(ВыбраннаяСсылка);
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет попытку перехода по ссылке, встроенной в HTML документ.
//
// Параметры:
//  HTMLДокумент    - ВнешнийОбъект - Поле HTML документа.
//  ВыбраннаяСсылка - Строка        - Выбранная ссылка.
// 
// Возвращаемое значение:
//  Булево - Выполнен переход по встроенной в HTML документ ссылке.
//
Функция ПерейтиПоВстроеннойСсылке(HTMLДокумент, ВыбраннаяСсылка) Экспорт
	
	Попытка
		
		ПозицияРазделителя = СтрНайти(ВыбраннаяСсылка, "#");
		АдресБазы = ПолучитьНавигационнуюСсылкуИнформационнойБазы();
		
		Если ПозицияРазделителя = 1
			Или (ПозицияРазделителя <> 0
				И СтрНайти(ВыбраннаяСсылка, АдресБазы) = 1)
			Или (ПозицияРазделителя <> 0
				И СтрНайти(ВыбраннаяСсылка, "%") <> 0
				И СтрНайти(ВыбраннаяСсылка, РаботаС_HTMLВызовСервера.КодироватьСсылку(АдресБазы)) = 1) Тогда
			
			TargetHref = Сред(ВыбраннаяСсылка, ПозицияРазделителя + 1);
			TargetElement = HTMLДокумент.getElementById(TargetHref);
			Если TargetElement = Неопределено Тогда
				
				ElementsByName = HTMLДокумент.getElementsByName(TargetHref);
				Если ElementsByName.length > 0 Тогда
					TargetElement = ElementsByName["0"];
				КонецЕсли;
				
			КонецЕсли;
			
			Если TargetElement <> Неопределено Тогда
				TargetElement.scrollIntoView(true);
				Возврат Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	Исключение
		// В некоторых случаях что-то могло пойти не так, например на Mac.
	КонецПопытки;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обрабатывает ссылку 1С:Документооборота.
//
// Параметры:
//  Ссылка1СДокументооборота - Строка - Обрабатываемая ссылка.
//  Форма - ФормаКлиентскогоПриложения
//
Процедура ОбработатьСсылку1СДокументооборота(Ссылка1СДокументооборота, Форма = Неопределено)
	
	СхемаСсылок1СДокументооборота = "v8doc:";
	
	Если  ОпределитьСхемуСсылки(Ссылка1СДокументооборота) <> СхемаСсылок1СДокументооборота Тогда
		Возврат;
	КонецЕсли;
	
	Ссылка1СДокументооборота = Сред(Ссылка1СДокументооборота, СтрДлина(СхемаСсылок1СДокументооборота) + 1);
	ТипСсылки = ОпределитьТипСсылки1СДокументооборота(Ссылка1СДокументооборота);
	
	Если ТипСсылки = "e1cib/" Тогда
		
		Если СтрНайти(Ссылка1СДокументооборота, "Справочник.Файлы")
			И Форма <> Неопределено Тогда
			
			Файл = РаботаС_HTMLВызовСервера.СсылкаПоНавигационной(Ссылка1СДокументооборота);
			Если ЗначениеЗаполнено(Файл) Тогда
				РаботаСФайламиКлиент.ОткрытьФайлДокумента(Файл, Форма);
				Возврат;
			КонецЕсли; 	
			
		КонецЕсли; 	
		
		ПерейтиПоНавигационнойСсылке(Ссылка1СДокументооборота);
		
	КонецЕсли;
	
КонецПроцедуры

// Определяет схему ссылки.
//
// Параметры:
//  Ссылка - Строка - Ссылка.
// 
// Возвращаемое значение:
//  Строка - Схема ссылки.
//
Функция ОпределитьСхемуСсылки(Знач Ссылка)
	
	Ссылка = НРег(Ссылка);
	Если СтрНачинаетсяС(Ссылка, "v8doc:") Тогда
		
		Возврат "v8doc:";
		
	ИначеЕсли СтрНачинаетсяС(Ссылка, "http://") Тогда
		
		Возврат "http://";
		
	ИначеЕсли СтрНачинаетсяС(Ссылка, "https://") Тогда
		
		Возврат "https://";
		
	ИначеЕсли СтрНачинаетсяС(Ссылка, "ftp://") Тогда
		
		Возврат "ftp://";
		
	ИначеЕсли СтрНачинаетсяС(Ссылка, "e1c://") Тогда
		
		Возврат "e1c://";
		
	ИначеЕсли СтрНачинаетсяС(Ссылка, "file://") Тогда
		
		Возврат "file://";
		
	ИначеЕсли СтрНачинаетсяС(Ссылка, "mailto:") Тогда
		
		Возврат "mailto:";
		
	Иначе
		
		Возврат "";
		
	КонецЕсли;
	
КонецФункции

// Определяет тип ссылки 1С:Документооборота.
//
// Параметры:
//  Ссылка - Строка - Ссылка.
// 
// Возвращаемое значение:
//  Строка - Тип ссылки.
//
Функция ОпределитьТипСсылки1СДокументооборота(Знач Ссылка)
	
	Ссылка = НРег(Ссылка);
	Если СтрНачинаетсяС(Ссылка, "e1cib/") Тогда
		
		Возврат "e1cib/";
		
	ИначеЕсли СтрНачинаетсяС(Ссылка, "mail/") Тогда
		
		Возврат "mail/"
		
	Иначе
		
		Возврат "";
		
	КонецЕсли;
	
КонецФункции

// Выполняет попытку перехода по внутренней навигационной ссылке
//
// Параметры:
//  НавигационнаяСсылка - Строка - Навигационная ссылка.
// 
// Возвращаемое значение:
//  Булево - Переход выполнен успешно.
//
Функция ПерейтиПоВнутреннейНавигационнойСсылке(НавигационнаяСсылка)
	
	ПозицияВнутреннейНавигационнойСсылки = Найти(НавигационнаяСсылка, "#e1cib/");
	Если ПозицияВнутреннейНавигационнойСсылки = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВнутренняяНавигационнаяСсылка = Сред(НавигационнаяСсылка, ПозицияВнутреннейНавигационнойСсылки + 1);
	Попытка
		ПерейтиПоНавигационнойСсылке(ВнутренняяНавигационнаяСсылка);
	Исключение
		// Внутренней навигационный ссылки может не быть в базе.
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти