////////////////////////////////////////////////////////////////////////////////
// Модуль для работы с мероприятиями.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Получает подсказку следующего действия мероприятия.
//
// Параметры:
//  СостояниеМероприятия - ПеречислениеСсылка.СостоянияМероприятий - Состояние мероприятия.
//  СостояниеПрограммы - ПеречислениеСсылка.СостоянияМероприятий - Состояние программы мероприятия.
//  СостояниеПриглашений - ПеречислениеСсылка.СостоянияМероприятий - Состояние отправки приглашений на мероприятие.
//  СостояниеМатериаловВыступающих - ПеречислениеСсылка.СостоянияМероприятий - Состояние материалов мероприятия.
//  СостояниеПротокола - ПеречислениеСсылка.СостоянияМероприятий - Состояние протокола мероприятия.
//  ЗаполненыОсновныеРеквизиты - Булево - Признак заполненности основных реквизитов мероприятия.
//  УчитыватьКакПротокольноеМероприятие - Булево - Признак протокольного мероприятия.
//  Объект - ДанныеФормыСтруктура - Данные формы мероприятия.
//
// Возвращаемое значение:
//  Строка - Подсказка следующего действия.
//
Функция ПолучитьПодсказкуСледующегоДействия(
	СостояниеМероприятия, СостояниеПрограммы, СостояниеПриглашений, СостояниеМатериаловВыступающих,
	СостояниеПротокола, ЗаполненыОсновныеРеквизиты, УчитыватьКакПротокольноеМероприятие, Объект) Экспорт
	
	Если СостояниеМероприятия = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.МероприятиеВСтадииПодготовки")
		Или Не ЗначениеЗаполнено(СостояниеМероприятия) Тогда
		
		Если Объект.ДатаОкончания < ТекущаяДата() И ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда 
			Возврат НСтр("ru = 'Срок проведения мероприятие прошел, и оно не отмечено как проведенное или отмененное.'");
		КонецЕсли;
		
		Если Не ЗаполненыОсновныеРеквизиты Тогда
			Возврат НСтр("ru = 'Заполните основную информацию о мероприятии: тему, время и место проведения, определите состав участников.'");
		КонецЕсли;
		
		Если СостояниеПрограммы = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПрограммаНеУтверждена")
			Или Не ЗначениеЗаполнено(СостояниеПрограммы) Тогда
			Возврат НСтр("ru = 'Подготовьте программу мероприятия и отправьте на утверждение.'");
		ИначеЕсли СостояниеПрограммы = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПрограммаНаУтверждении") Тогда
			Возврат НСтр("ru = 'Программа в процессе утверждения.'");
		ИначеЕсли СостояниеПрограммы <> ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПрограммаУтверждена") Тогда
			Возврат "";
		КонецЕсли;
		
		Если СостояниеПриглашений = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПриглашенияНеПриняты")
			Или Не ЗначениеЗаполнено(СостояниеПриглашений) Тогда
			Возврат НСтр("ru = 'Отправьте приглашения участникам мероприятия.'");
		ИначеЕсли СостояниеПриглашений = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПриглашенияОтправлены") Тогда
			Возврат НСтр("ru = 'Дождитесь ответа на приглашения.'");
		ИначеЕсли СостояниеПриглашений <> ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПриглашенияПриняты") Тогда
			Возврат "";
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СостояниеМатериаловВыступающих) Тогда
			Возврат НСтр("ru = 'Запросите материалы выступлений у участников мероприятия.'");
		ИначеЕсли СостояниеМатериаловВыступающих = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.МатериалыВыступающихЗапрошены") Тогда
			Возврат НСтр("ru = 'Дождитесь материалов выступлений.'");
		ИначеЕсли СостояниеМатериаловВыступающих = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПолученыМатериалыВыступающих") Тогда
			Возврат НСтр("ru = 'Ознакомьте с материалами всех участников мероприятия.'");
		ИначеЕсли СостояниеМатериаловВыступающих = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.МатериалыОтправленыНаОзнакомление") Тогда
			Возврат НСтр("ru = 'Убедитесь, что все участники ознакомлены с материалами выступлений.'");
		ИначеЕсли СостояниеМатериаловВыступающих <> ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.СМатериаламиОзнакомились") Тогда
			Возврат "";
		КонецЕсли;
		
		Возврат НСтр("ru = 'Мероприятие можно проводить. Отметьте, кто из участников отсутствовал на мероприятии, и зафиксируйте принятые решения в отдельном файле.'");
		
	ИначеЕсли СостояниеМероприятия = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.МероприятиеПроведено") Тогда
		
		Если Не УчитыватьКакПротокольноеМероприятие Тогда
			Возврат "";
		КонецЕсли;
		
		Если Объект.ТипПротокола = ПредопределенноеЗначение("Перечисление.ТипыПрограммыПротокола.ВТаблице")
			И Объект.ТипПрограммы = ПредопределенноеЗначение("Перечисление.ТипыПрограммыПротокола.ВТаблице") Тогда 
			
			ЕстьРешениеНеПринято = Ложь;
			Для Каждого Строка Из Объект.Программа Цикл
				
				Решение = "";
				Если Строка.ТребуетПринятияРешения Тогда 
					НайденныеСтроки = Объект.Протокол.НайтиСтроки(Новый Структура("НомерПунктаПрограммы", Строка.НомерПункта));
					Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
						Если ЗначениеЗаполнено(НайденнаяСтрока.Решили) Тогда 
							Решение = НСтр("ru = 'Принято'");
							Прервать;
						КонецЕсли;	
					КонецЦикла;	
					
					Если Решение = "" Тогда 
						ЕстьРешениеНеПринято = Истина;
						Прервать;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ЕстьРешениеНеПринято Тогда 
				Возврат НСтр("ru = 'Не по всем вопросам мероприятия приняты решения.'");
			КонецЕсли;	
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СостояниеПротокола) Тогда
			Возврат НСтр("ru = 'Создайте задание на подготовку протокола мероприятия.'");
		ИначеЕсли СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколГотовиться")Тогда
			Возврат НСтр("ru = 'Дождитесь завершения подготовки протокола.'");
		ИначеЕсли СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколПодготовлен")
			Или СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколНеСогласован") Тогда
			Возврат НСтр("ru = 'Согласуйте протокол мероприятия с участниками.'");
		ИначеЕсли СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколНаСогласовании")Тогда
			Возврат НСтр("ru = 'Дождитесь завершения согласования протокола.'");
		ИначеЕсли СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколСогласован")
			Или СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколНеУтвержден") Тогда
			Возврат НСтр("ru = 'Направьте протокол мероприятия на утверждение.'");
		ИначеЕсли СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколНаУтверждении")Тогда
			Возврат НСтр("ru = 'Дождитесь утверждения протокола.'");
		ИначеЕсли СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколУтвержден")Тогда
			Возврат НСтр("ru = 'Направьте протокол на исполнение.'");
		ИначеЕсли СостояниеПротокола = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколНаИсполнении")Тогда
			Возврат НСтр("ru = 'Дождитесь исполнения протокола.'");
		ИначеЕсли СостояниеПротокола <> ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.ПротоколИсполнен")Тогда
			Возврат "";
		КонецЕсли;
		
		Возврат "";
		
	ИначеЕсли СостояниеМероприятия = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.МероприятиеОтменено") Тогда
		
		Возврат "";
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

// Меняет папку для массива мероприятий на новую.
//
// Параметры:
//  МассивМероприятий - Массив - Мероприятия, у которых необходимо изменить папку.
//  НоваяПапка - СправочникСсылка.ПапкиМероприятий - Новая папка мероприятий.
//
Процедура ИзменитьПапкуМероприятий(МассивМероприятий, НоваяПапка) Экспорт
	
	// Не указана новая папка
	Если Не ЗначениеЗаполнено(НоваяПапка) Тогда
		Возврат;
	КонецЕсли;
	
	// Нет элементов в массиве
	Если МассивМероприятий.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если УправлениеМероприятиямиВызовСервера.ИзменитьПапкуМероприятий(МассивМероприятий, НоваяПапка) Тогда
		
		Если МассивМероприятий.Количество() = 1 Тогда
			
			ПолноеОписание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Мероприятие ""%1"" перенесено в папку ""%2""'"), МассивМероприятий[0], НоваяПапка);
			
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Мероприятие перенесено.'"),
				ПолучитьНавигационнуюСсылку(МассивМероприятий[0]),
				ПолноеОписание,
				БиблиотекаКартинок.Информация32);
			
		Иначе
			
			ПолноеОписание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Мероприятия (%1 шт.) перенесены в папку ""%2""'"), МассивМероприятий.Количество(), НоваяПапка);
			
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Мероприятия перенесены.'"),
				,
				ПолноеОписание,
				БиблиотекаКартинок.Информация32);
			
		КонецЕсли;
		
		ОповеститьОбИзменении(Тип("СправочникСсылка.Мероприятия"));
		
	КонецЕсли;
	
КонецПроцедуры

// Направляет протокол мероприятия на исполнение.
//
// Параметры:
//  ПараметрыНаИсполнение - Структура - Параметры для направления протокола на исполнение.
//   * Мероприятие          - СправочникСсылка.Мероприятия              - Мероприятие.
//   * ТипПротокола         - ПеречислениеСсылка.ТипыПрограммыПротокола - Тип протокола.
//   * МатериалПротокол     - СправочникСсылка.ВнутренниеДокументы      - Документ, являющийся протоколом.
//   * РаздельноеИсполнение - Булево                                    - Использовать раздельное исполнение пунктов протокола.
//   * Владелец             - ФормаКлиентскогоПриложения                          - Владелец открывающихся для исполнения форм.
//   * ТаблицаПротокол      - ДанныеФормыКоллекция                      - Протокол мероприятия.
//
Процедура НаправитьПротоколМероприятияНаИсполнение(ПараметрыНаИсполнение) Экспорт
	
	Если ПараметрыНаИсполнение.ТипПротокола = ПредопределенноеЗначение("Перечисление.ТипыПрограммыПротокола.ВОтдельномДокументе")
		И ЗначениеЗаполнено(ПараметрыНаИсполнение.МатериалПротокол) Тогда 
		
		ОткрытьФорму("БизнесПроцесс.Исполнение.ФормаОбъекта",
			Новый Структура("Основание", ПараметрыНаИсполнение.МатериалПротокол),
			ПараметрыНаИсполнение.Владелец);
		
	ИначеЕсли ПараметрыНаИсполнение.ТипПротокола = ПредопределенноеЗначение("Перечисление.ТипыПрограммыПротокола.ВТаблице")
		И ПараметрыНаИсполнение.РаздельноеИсполнение Тогда
		
		НаправитьПротоколМероприятияНаИсполнениеРаздельное(
			ПараметрыНаИсполнение.Мероприятие,
			ПараметрыНаИсполнение.ТаблицаПротокол);
		
	Иначе
		
		Основание = Новый Структура;
		Основание.Вставить("ОперацияМероприятия", "ИсполнитьПротокол");
		Основание.Вставить("Мероприятие", ПараметрыНаИсполнение.Мероприятие);
		
		ОткрытьФорму("БизнесПроцесс.Исполнение.ФормаОбъекта",
			Новый Структура("Основание", Основание),
			ПараметрыНаИсполнение.Владелец);
		
	КонецЕсли;
	
КонецПроцедуры

// Формирует пустую структуру параметров для направления протокола на исполнение.
// 
// Возвращаемое значение:
//  Структура - Параметры для направления протокола на исполнение.
//   * Мероприятие          - СправочникСсылка.Мероприятия              - Мероприятие.
//   * ТипПротокола         - ПеречислениеСсылка.ТипыПрограммыПротокола - Тип протокола.
//   * МатериалПротокол     - СправочникСсылка.ВнутренниеДокументы      - Документ, являющийся протоколом.
//   * РаздельноеИсполнение - Булево                                    - Использовать раздельное исполнение пунктов протокола.
//   * Владелец             - ФормаКлиентскогоПриложения                          - Владелец открывающихся для исполнения форм.
//   * ТаблицаПротокол      - ДанныеФормыКоллекция                      - Протокол мероприятия.
//
Функция ПараметрыДляНаправленияПротоколаНаИсполнение() Экспорт
	
	ПараметрыНаИсполнение = Новый Структура(
		"Мероприятие, ТипПротокола, МатериалПротокол, РаздельноеИсполнение, Владелец, ТаблицаПротокол");
	ПараметрыНаИсполнение.Мероприятие =
		ПредопределенноеЗначение("Справочник.Мероприятия.ПустаяСсылка");
	ПараметрыНаИсполнение.ТипПротокола =
		ПредопределенноеЗначение("Перечисление.ТипыПрограммыПротокола.ПустаяСсылка");
	ПараметрыНаИсполнение.МатериалПротокол =
		ПредопределенноеЗначение("Справочник.ВнутренниеДокументы.ПустаяСсылка");
	ПараметрыНаИсполнение.РаздельноеИсполнение = Ложь;
	
	Возврат ПараметрыНаИсполнение;
	
КонецФункции

// Останавливает исполнение по всем пунктам протокола мероприятия.
//
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия - Мероприятие.
//
Процедура ОстановитьИсполнениеПротокола(Мероприятие) Экспорт
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Остановить исполнение протокола мероприятия ""%1""?'"),
		Мероприятие);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОстановитьИсполнениеПротоколаЗавершение",
		ЭтотОбъект,
		Мероприятие);
	
	ОбщегоНазначенияДокументооборотКлиент.ПоказатьВопросДаНет(ОписаниеОповещения, ТекстВопроса);
	
КонецПроцедуры

// См. ОстановитьИсполнениеПротокола.
//
Процедура ОстановитьИсполнениеПротоколаЗавершение(Результат, Мероприятие) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеМероприятиямиВызовСервера.ОстановитьИсполнениеПротокола(Мероприятие);
	
	ПоказатьОповещениеПользователя(,,
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Остановлено исполнение протокола мероприятия ""%1"".'"),
			Мероприятие),
		БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

// Продолжает исполнение по всем пунктам протокола мероприятия.
//
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия - Мероприятие.
//
Процедура ПродолжитьИсполнениеПротокола(Мероприятие) Экспорт
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Продолжить исполнение протокола мероприятия ""%1""?'"),
		Мероприятие);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПродолжитьИсполнениеПротоколаЗавершение",
		ЭтотОбъект,
		Мероприятие);
	
	ОбщегоНазначенияДокументооборотКлиент.ПоказатьВопросДаНет(ОписаниеОповещения, ТекстВопроса);
	
КонецПроцедуры

// См. ПродолжитьИсполнениеПротокола.
//
Процедура ПродолжитьИсполнениеПротоколаЗавершение(Результат, Мероприятие) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеМероприятиямиВызовСервера.ПродолжитьИсполнениеПротокола(Мероприятие);
	
	ПоказатьОповещениеПользователя(,,
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Продолжено исполнение протокола мероприятия ""%1"".'"),
			Мероприятие),
		БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

// Прерывает исполнение по всем пунктам протокола мероприятия.
//
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия - Мероприятие.
//
Процедура ПрерватьИсполнениеПротокола(Мероприятие) Экспорт
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Прервать исполнение протокола мероприятия ""%1""?'"),
		Мероприятие);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПрерватьИсполнениеПротоколаЗавершение",
		ЭтотОбъект,
		Мероприятие);
	
	ОбщегоНазначенияДокументооборотКлиент.ПоказатьВопросДаНет(ОписаниеОповещения, ТекстВопроса);
	
КонецПроцедуры

// См. ПрерватьИсполнениеПротокола.
//
Процедура ПрерватьИсполнениеПротоколаЗавершение(Результат, Мероприятие) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеМероприятиямиВызовСервера.ПрерватьИсполнениеПротокола(Мероприятие,
		НСтр("ru = 'Команда ""Прервать исполнение протокола"". Прерывание исполнения протокола мероприятия.'"));
	
	ПоказатьОповещениеПользователя(,,
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Прервано исполнение протокола мероприятия ""%1"".'"),
			Мероприятие),
		БиблиотекаКартинок.Информация32);
	
	ОповеститьОЗаписиПунктаПротокола(Мероприятие);
	
КонецПроцедуры

// Оповещает о записи пункта протокола мероприятия.
//
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия - Мероприятие.
//  ПунктПротокола - СправочникСсылка.ПротоколыМероприятий - Пункт протокола мероприятия.
//
Процедура ОповеститьОЗаписиПунктаПротокола(Мероприятие, ПунктПротокола = Неопределено) Экспорт
	
	ПараметрыОповещения = Новый Структура("Мероприятие, ПунктПротокола", Мероприятие, ПунктПротокола);
	Оповестить("Запись_ПунктПротокола", ПараметрыОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Направляет протокол мероприятия на исполнение раздельное.
//
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия - Мероприятия.
//  Протокол - ДанныеФормыКоллекция - Протокол мероприятия.
//
Процедура НаправитьПротоколМероприятияНаИсполнениеРаздельное(Мероприятие, Протокол = Неопределено)
	
	ПараметрыИсполнения = ПараметрыИсполнения(Мероприятие);
	Если Протокол <> Неопределено Тогда
		УправлениеМероприятиямиКлиентСервер.ОпределитьСостояниеИсполненияПротокола(Протокол, ПараметрыИсполнения);
	Иначе
		УправлениеМероприятиямиВызовСервера.ОпределитьСостояниеИсполненияПротокола(Мероприятие, ПараметрыИсполнения);
	КонецЕсли;
	
	Если ПараметрыИсполнения.СостояниеИсполненияПротокола = "НовоеИсполнение" Тогда
		ПредупреждениеПередЗапускомИсполнения(ПараметрыИсполнения);
		
	ИначеЕсли ПараметрыИсполнения.СостояниеИсполненияПротокола = "ЕстьНовыеПунктыПротокола" Тогда
		ПредупреждениеПередЗапускомИсполненияЕстьНовыеПунктыПротокола(ПараметрыИсполнения);
		
	ИначеЕсли ПараметрыИсполнения.СостояниеИсполненияПротокола = "ИсполнениеУжеЗапущено" Тогда
		ПредупреждениеПередЗапускомИсполненияИсполнениеУжеЗапущено(ПараметрыИсполнения);
		
	ИначеЕсли ПараметрыИсполнения.СостояниеИсполненияПротокола = "НетПунктовДляИсполнения" Тогда
		ПредупреждениеПередЗапускомИсполненияНетПунктовДляИсполнения(ПараметрыИсполнения);
		
	КонецЕсли;
	
КонецПроцедуры

// Формирует новую структуру параметров исполнения.
//
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия - Мероприятия.
//
// Возвращаемое значение:
//  Структура - Параметры исполнения.
//
Функция ПараметрыИсполнения(Мероприятие)
	
	ПараметрыИсполнения = Новый Структура;
	ПараметрыИсполнения.Вставить("Мероприятие", Мероприятие);
	ПараметрыИсполнения.Вставить("СостояниеИсполненияПротокола", "НовоеИсполнение");
	ПараметрыИсполнения.Вставить("ПоВсемПунктам", Ложь);
	ПараметрыИсполнения.Вставить("ЕстьПунктыТребующиеИсполненияСИсполнителями", Ложь);
	ПараметрыИсполнения.Вставить("ЕстьПунктыТребующиеИсполненияБезИсполнителей", Ложь);
	ПараметрыИсполнения.Вставить("ЕстьПунктыНаИсполненииСИсполнителями", Ложь);
	ПараметрыИсполнения.Вставить("ЕстьПунктыНаИсполненииБезИсполнителей", Ложь);
	
	Возврат ПараметрыИсполнения;
	
КонецФункции

// Показывает предупреждение перед запуском протокола на исполнение.
//
// Параметры:
//  ПараметрыИсполнения - Структура - Параметры исполнения протокола.
//
Процедура ПредупреждениеПередЗапускомИсполнения(ПараметрыИсполнения)
	
	Если Не ПараметрыИсполнения.ЕстьПунктыТребующиеИсполненияСИсполнителями Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Невозможно запустить исполнение - для пунктов протокола не указаны исполнители или ответственные.'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПредупреждениеПередЗапускомИсполненияЗавершение", ЭтотОбъект, ПараметрыИсполнения);
	ТекстВопроса = НСтр("ru = 'Все пункты протокола будут направлены на исполнение. Запустить исполнение?'");
	ДобавитьПредупреждениеОЗаполненииИсполнителей(ТекстВопроса, ПараметрыИсполнения);
	
	ОбщегоНазначенияДокументооборотКлиент.ПоказатьВопросДаНет(ОписаниеОповещения, ТекстВопроса, , , КодВозвратаДиалога.Да);
	
КонецПроцедуры

// См. ПредупреждениеПередЗапускомИсполнения.
//
Процедура ПредупреждениеПередЗапускомИсполненияЗавершение(Результат, ПараметрыИсполнения) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьНаправлениеПротоколМероприятияНаИсполнение(ПараметрыИсполнения);
	
КонецПроцедуры

// Показывает предупреждение перед запуском протокола на исполнение, если есть новые пункты протокола.
//
// Параметры:
//  ПараметрыИсполнения - Структура - Параметры исполнения протокола.
//
Процедура ПредупреждениеПередЗапускомИсполненияЕстьНовыеПунктыПротокола(ПараметрыИсполнения)
	
	Если Не ПараметрыИсполнения.ЕстьПунктыТребующиеИсполненияСИсполнителями
		И Не ПараметрыИсполнения.ЕстьПунктыНаИсполненииСИсполнителями Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Невозможно запустить исполнение - для пунктов протокола не указаны исполнители или ответственные.'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПредупреждениеПередЗапускомИсполненияЕстьНовыеПунктыПротоколаЗавершение", ЭтотОбъект, ПараметрыИсполнения);
	
	ТекстВопроса = НСтр("ru = 'По некоторым пунктам протокола уже запущено исполнение.
		|Рекомендуется отправить исполнение только новым пунктам.
		|При отправке на исполнение по всем пунктам старые исполнения будут прерваны.
		|
		|Отправить протокол мероприятия на исполнение?'");
	ДобавитьПредупреждениеОЗаполненииИсполнителей(ТекстВопроса, ПараметрыИсполнения);
	
	КнопкаПоУмолчанию = Неопределено;
	Кнопки = Новый СписокЗначений;
	Если ПараметрыИсполнения.ЕстьПунктыТребующиеИсполненияСИсполнителями Тогда
		Кнопки.Добавить(КодВозвратаДиалога.ОК, НСтр("ru = 'Да, только по новым пунктам'"));
		КнопкаПоУмолчанию = КодВозвратаДиалога.ОК;
	КонецЕсли;
	Если ПараметрыИсполнения.ЕстьПунктыНаИсполненииСИсполнителями Тогда
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Да, по всем пунктам'"));
	КонецЕсли;
	Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Нет'"));
	Если КнопкаПоУмолчанию = Неопределено Тогда
		КнопкаПоУмолчанию = КодВозвратаДиалога.Отмена;
	КонецЕсли;
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки, , КнопкаПоУмолчанию);
	
КонецПроцедуры

// См. ПредупреждениеПередЗапускомИсполненияЕстьНовыеПунктыПротокола.
//
Процедура ПредупреждениеПередЗапускомИсполненияЕстьНовыеПунктыПротоколаЗавершение(Результат, ПараметрыИсполнения) Экспорт
	
	Если Результат <> КодВозвратаДиалога.ОК И Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыИсполнения.ПоВсемПунктам = (Результат = КодВозвратаДиалога.Да);
	ВыполнитьНаправлениеПротоколМероприятияНаИсполнение(ПараметрыИсполнения);
	
КонецПроцедуры

// Показывает предупреждение перед запуском протокола на исполнение, если исполнение уже запущено.
//
// Параметры:
//  ПараметрыИсполнения - Структура - Параметры исполнения протокола.
//
Процедура ПредупреждениеПередЗапускомИсполненияИсполнениеУжеЗапущено(ПараметрыИсполнения)
	
	Если Не ПараметрыИсполнения.ЕстьПунктыНаИсполненииСИсполнителями Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Невозможно запустить исполнение - по пунктам протокола запущено исполнение и для них не указаны исполнители или ответственные.'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПредупреждениеПередЗапускомИсполненияИсполнениеУжеЗапущеноЗавершение", ЭтотОбъект, ПараметрыИсполнения);
	ТекстВопроса = НСтр("ru = 'По всем пунктам протокола уже запущено исполнение.
		|При отправке протокола на исполнение старые исполнения будут прерваны.
		|
		|Отправить протокол мероприятия на исполнение?'");
	ДобавитьПредупреждениеОЗаполненииИсполнителей(ТекстВопроса, ПараметрыИсполнения);
	
	ОбщегоНазначенияДокументооборотКлиент.ПоказатьВопросДаНет(ОписаниеОповещения, ТекстВопроса, , , КодВозвратаДиалога.Нет);
	
КонецПроцедуры

// См. ПредупреждениеПередЗапускомИсполненияИсполнениеУжеЗапущено.
//
Процедура ПредупреждениеПередЗапускомИсполненияИсполнениеУжеЗапущеноЗавершение(Результат, ПараметрыИсполнения) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыИсполнения.ПоВсемПунктам = Истина;
	ВыполнитьНаправлениеПротоколМероприятияНаИсполнение(ПараметрыИсполнения);
	
КонецПроцедуры

// Показывает предупреждение при отказе от направления протокола на исполнение, так как нет пунктов для исполнения.
//
// Параметры:
//  ПараметрыИсполнения - Структура - Параметры исполнения протокола.
//
Процедура ПредупреждениеПередЗапускомИсполненияНетПунктовДляИсполнения(ПараметрыИсполнения)
	
	ПоказатьПредупреждение(, НСтр("ru = 'Нет пунктов протокола мероприятия, по которым требуется исполнение.'"));
	
КонецПроцедуры

// Выполняет направление протокола мероприятия на исполнение.
//
// Параметры:
//  ПараметрыИсполнения - Структура - Параметры исполнения протокола.
//
Процедура ВыполнитьНаправлениеПротоколМероприятияНаИсполнение(ПараметрыИсполнения)
	
	УправлениеМероприятиямиВызовСервера.НаправитьПротоколМероприятияНаИсполнение(ПараметрыИсполнения);
	
	ПоказатьОповещениеПользователя(,,
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Направлен на исполнение протокол мероприятия ""%1"".'"),
			ПараметрыИсполнения.Мероприятие),
		БиблиотекаКартинок.Информация32);
	
	ОповеститьОЗаписиПунктаПротокола(ПараметрыИсполнения.Мероприятие);
	
КонецПроцедуры

// Добавляет к строке предупреждение о заполнении исполнителей.
//
// Параметры:
//  ТекстВопроса		 - Строка	 - Текст вопросе перед запуском исполнения.
//  ПараметрыИсполнения	 - Структура - Параметры исполнения протокола.
//
Процедура ДобавитьПредупреждениеОЗаполненииИсполнителей(ТекстВопроса, ПараметрыИсполнения)
	
	ТекстПредупрежденияОЗаполненииИсполнителей =
		Символы.ПС + Символы.ПС + НСтр("ru = 'Внимание! Не у всех пунктов указаны исполнители или ответственные.
		|Пункты без исполнителей и ответственных направлены на исполнение не будут.'");
	
	Если ПараметрыИсполнения.СостояниеИсполненияПротокола = "НовоеИсполнение"
		И ПараметрыИсполнения.ЕстьПунктыТребующиеИсполненияБезИсполнителей Тогда
		
		ТекстВопроса = ТекстВопроса + ТекстПредупрежденияОЗаполненииИсполнителей;
		
	ИначеЕсли ПараметрыИсполнения.СостояниеИсполненияПротокола = "ЕстьНовыеПунктыПротокола"
		И ((ПараметрыИсполнения.ЕстьПунктыТребующиеИсполненияСИсполнителями
					И ПараметрыИсполнения.ЕстьПунктыТребующиеИсполненияБезИсполнителей)
				Или (ПараметрыИсполнения.ЕстьПунктыНаИсполненииСИсполнителями
					И ПараметрыИсполнения.ЕстьПунктыНаИсполненииБезИсполнителей))Тогда
		
		ТекстВопроса = ТекстВопроса + ТекстПредупрежденияОЗаполненииИсполнителей;
		
	ИначеЕсли ПараметрыИсполнения.СостояниеИсполненияПротокола = "ИсполнениеУжеЗапущено"
		И ПараметрыИсполнения.ЕстьПунктыНаИсполненииБезИсполнителей Тогда
		
		ТекстВопроса = ТекстВопроса + ТекстПредупрежденияОЗаполненииИсполнителей;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти