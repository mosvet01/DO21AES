////////////////////////////////////////////////////////////////////////////////
// Подсистема "Документооборот с Банком России".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ОтправитьОтчет

Процедура ОтправитьОтчет(Организация, СсылкаНаОтчет, ВладелецФормы) Экспорт
	
	Контекст = Новый Структура;
	Контекст.Вставить("Организация", Организация);
	Контекст.Вставить("СсылкаНаОтчет", СсылкаНаОтчет);
	Если ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения")
		И ВладелецФормы.ИмяФормы = "ОбщаяФорма.РегламентированнаяОтчетность" Тогда
		ВладелецФормы = Неопределено;
	КонецЕсли;
	Контекст.Вставить("ВладелецФормы", ВладелецФормы);
	Оповещение = Новый ОписаниеОповещения("ОтправитьОтчетПослеВыгрузкиПакета", ЭтотОбъект, Контекст);	
	
	ВыгрузитьПакет(Оповещение, Организация, СсылкаНаОтчет, ВладелецФормы);
	
КонецПроцедуры

Процедура ОтправитьОтчетПослеВыгрузкиПакета(Результат, ВходящийКонтекст) Экспорт 
	
	Если Результат.Выполнено Тогда
		ВходящийКонтекст.Вставить("Пакет", Результат.Пакет);
		Если Результат.Свойство("ПараметрыАутентификации") Тогда
			ПараметрыАутентификации = Результат.ПараметрыАутентификации;
		Иначе
			ПараметрыАутентификации = Новый Структура;
		КонецЕсли;
		
		Попытка
			Отправка = ДокументооборотСБанкомРоссииВызовСервера.ОтправитьОтчет(
				ВходящийКонтекст.Организация, ВходящийКонтекст.СсылкаНаОтчет, Результат.Пакет, ПараметрыАутентификации);			
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			КраткоеПредставлениеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
			
			Если СтрНайти(КраткоеПредставлениеОшибки, "ПараметрыАутентификацииНеЗаполнены")
				ИЛИ СтрНайти(КраткоеПредставлениеОшибки, "ПараметрыАутентификацииУказаныНеВерно") Тогда
				Оповещение = Новый ОписаниеОповещения("ОтправитьОтчетПослеВводаПараметровАутентификации", ЭтотОбъект, ВходящийКонтекст);
				
				ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(
					Оповещение,
					ВходящийКонтекст.ВладелецФормы);
				
				Возврат;
			Иначе
				ДлительнаяОтправкаКлиентСервер.ВывестиОшибку(НСтр("ru = 'Неизвестная ошибка при отправке отчета'"));
				Состояние(НСтр("ru = 'Ошибка отправки отчета'"),,, БиблиотекаКартинок.ОшибкаОтправки);

				Если ВходящийКонтекст.Свойство("ОповещениеОЗавершении") Тогда
					ВыполнитьОбработкуОповещения(
						ВходящийКонтекст.ОповещениеОЗавершении, 
						Новый Структура("Выполнено", Ложь));
				КонецЕсли;
				Возврат;
			КонецЕсли;
		КонецПопытки;
		
		Состояние(НСтр("ru = 'Отчет отправлен'"),,, БиблиотекаКартинок.УспешнаяОтправка);

		Если ВходящийКонтекст.Свойство("ВладелецФормы") И ВходящийКонтекст.ВладелецФормы <> Неопределено Тогда
			ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.ОбновитьПанельСостоянияОтправкиВРегламентированномОтчете(
				ВходящийКонтекст.ВладелецФормы, "БанкРоссии");
		КонецЕсли;
		
		ПараметрыОповещения = Новый Структура; 
		ПараметрыОповещения.Вставить("Ссылка", ВходящийКонтекст.СсылкаНаОтчет);
		ПараметрыОповещения.Вставить("Организация", ВходящийКонтекст.Организация);
		Оповестить("Завершение отправки в контролирующий орган", ПараметрыОповещения, Отправка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтправитьОтчетПослеВводаПараметровАутентификации(Результат, ВходящийКонтекст) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		РезультатВыполнения = Новый Структура("Выполнено,Пакет,ПараметрыАутентификации", Истина, ВходящийКонтекст.Пакет, Результат);
		ОтправитьОтчетПослеВыгрузкиПакета(РезультатВыполнения, ВходящийКонтекст);
	Иначе
		Если ВходящийКонтекст.Свойство("ОповещениеОЗавершении") Тогда
			ВыполнитьОбработкуОповещения(
				ВходящийКонтекст.ОповещениеОЗавершении, 
				Новый Структура("Выполнено", Ложь));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВыгрузитьПакет

Процедура ВыгрузитьПакет(ОповещениеОЗавершении, Организация, СсылкаНаОтчет, ВладелецФормы = Неопределено) Экспорт
	
	Контекст = Новый Структура;
	Контекст.Вставить("Организация", Организация);
	Контекст.Вставить("СсылкаНаОтчет", СсылкаНаОтчет);
	Контекст.Вставить("ВладелецФормы", ВладелецФормы);
	Контекст.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
		
	МодульВыгрузки = ПолучитьФорму("Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента",, Контекст.ВладелецФормы);
	
	ТекстВыгрузки = "";
	ИмяФайла = "";
	Кодировка = "";

	ВыгрузкаВыполнена = МодульВыгрузки.ВыгрузитьОтчет(
		Контекст.СсылкаНаОтчет, Ложь, Ложь, 
		ТекстВыгрузки, ИмяФайла, 
		Кодировка, Ложь);
		
	Если ВыгрузкаВыполнена Тогда
		Адрес = ОперацииСФайламиЭДКОВызовСервера.ТекстВФайл(ТекстВыгрузки, Новый УникальныйИдентификатор);
		ДанныеДляВыгрузки = Новый Структура("Адрес,Имя", Адрес, ИмяФайла);
		Контекст.Вставить("ДанныеДляВыгрузки", ДанныеДляВыгрузки);
		
		Настройки = ДокументооборотСБанкомРоссииВызовСервера.ПолучитьНастройки(Контекст.Организация);
		Контекст.Вставить("Настройки", Настройки);
		Если Настройки.ОбменНастроен Тогда
			ВыгрузитьПакетПослеВыбораСертификата(Настройки.Сертификат, Контекст);
		Иначе			
			Отпечаток = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ЗначениеРеквизитаОбъекта(
				Контекст.Организация, "УчетнаяЗаписьОбмена.СертификатРуководителя");
			
			Оповещение = Новый ОписаниеОповещения("ВыгрузитьПакетПослеВыбораСертификата", ЭтотОбъект, Контекст);
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отпечаток", Отпечаток);
			ПараметрыФормы.Вставить("Организация", Контекст.Организация);
			
			ОткрытьФорму("ОбщаяФорма.ВыборСертификата", ПараметрыФормы,,,,, Оповещение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыгрузитьПакетПослеВыбораСертификата(Результат, ВходящийКонтекст) Экспорт

	Если ТипЗнч(Результат) = Тип("Строка")
		И ЗначениеЗаполнено(Результат) Тогда
		
		Если Не ВходящийКонтекст.Настройки.ОбменНастроен Тогда
			ВходящийКонтекст.Вставить("Настройки", ДокументооборотСБанкомРоссииВызовСервера.СохранитьНастройки(ВходящийКонтекст.Организация, Результат));
		КонецЕсли;
		
		Сертификат = Новый Структура("Отпечаток", Результат);
		
		Файлы = Новый Массив;
		Файлы.Добавить(ВходящийКонтекст.ДанныеДляВыгрузки);
		Пакет = ОперацииСФайламиЭДКОВызовСервера.УпаковатьФайлы(Файлы);
		
		ИмяБезРасширения = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ВходящийКонтекст.ДанныеДляВыгрузки.Имя).ИмяБезРасширения;
		
		ВходящийКонтекст.ДанныеДляВыгрузки.Адрес = Пакет;
		ВходящийКонтекст.ДанныеДляВыгрузки.Имя = ИмяБезРасширения + ".zip";
		
		Состояние(НСтр("ru = 'Выполняется подписание пакета ...'"));
		
		Оповещение = Новый ОписаниеОповещения("ВыгрузитьПакетПослеПодписания", ЭтотОбъект, ВходящийКонтекст);
		АдресФайлаПодписи = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
		КриптографияЭДКОКлиент.ПодписатьPKCS7(Оповещение, Сертификат, Пакет, Ложь, АдресФайлаПодписи); 
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыгрузитьПакетПослеПодписания(Результат, ВходящийКонтекст) Экспорт
	
	Если Результат.Выполнено Тогда
		ФайлПодписи = Новый Структура;
		ФайлПодписи.Вставить("Адрес", Результат.ФайлПодписи);
		ФайлПодписи.Вставить("Имя", ВходящийКонтекст.ДанныеДляВыгрузки.Имя + ".sig");
		
		Файлы = Новый Массив;
		Файлы.Добавить(ВходящийКонтекст.ДанныеДляВыгрузки);
		Файлы.Добавить(ФайлПодписи);
		ПакетДляОтправки = ОперацииСФайламиЭДКОВызовСервера.УпаковатьФайлы(Файлы);
		
		СохраняемыйФайл = Новый Структура;
		СохраняемыйФайл.Вставить("Адрес", ПакетДляОтправки);
		СохраняемыйФайл.Вставить("Имя", ВходящийКонтекст.ДанныеДляВыгрузки.Имя);
		
		РезультатВыполнения = Новый Структура;
		РезультатВыполнения.Вставить("Пакет", СохраняемыйФайл);
		РезультатВыполнения.Вставить("Выполнено", Истина);
		ВыполнитьОбработкуОповещения(ВходящийКонтекст.ОповещениеОЗавершении, РезультатВыполнения); 
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПроверитьВозможностьВыполненияОперации

Процедура ПроверитьВозможностьВыполненияОперации(ОповещениеОЗавершении, ВладелецФормы = Неопределено, ПараметрыАутентификации = Неопределено) Экспорт
	
	Результат = ДокументооборотСБанкомРоссииВызовСервера.ПроверитьВозможностьВыполненияОперации(ПараметрыАутентификации);
	
	Если Результат = "ПараметрыАутентификацииНеЗаполнены"
		ИЛИ Результат = "ПараметрыАутентификацииУказаныНеВерно" Тогда
		Контекст = Новый Структура;
		Контекст.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
		Контекст.Вставить("ВладелецФормы", ВладелецФормы);
		Оповещение = Новый ОписаниеОповещения("ПроверитьВозможностьВыполненияОперацииПослеВводаПараметровАутентификации", ЭтотОбъект, Контекст);
		
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(
			Оповещение,
			ВладелецФормы);
		
	ИначеЕсли Результат = "ВыполнениеРазрешено" Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, Новый Структура("Выполнено, ВыполнениеРазрешено", Истина, Истина));
	ИначеЕсли Результат = "ВыполнениеЗапрещено" Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, Новый Структура("Выполнено, ВыполнениеРазрешено", Истина, Ложь));		
	Иначе
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, Новый Структура("Выполнено, ВыполнениеРазрешено", Ложь, Ложь));		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьВозможностьВыполненияОперацииПослеВводаПараметровАутентификации(Результат, ВходящийКонтекст) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ПроверитьВозможностьВыполненияОперации(ВходящийКонтекст.ОповещениеОЗавершении, 
			ВходящийКонтекст.Владелецформы, Результат);
	Иначе
		ВыполнитьОбработкуОповещения(
			ВходящийКонтекст.ОповещениеОЗавершении, 
			Новый Структура("Выполнено, ВыполнениеРазрешено", Истина, Ложь));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПолучитьСтатусОтчета

Процедура ПолучитьСтатусОтчета(ОповещениеОЗавершении, Отправка, ВладелецФормы, ПараметрыАутентификации = Неопределено) Экспорт
	
	Контекст = Новый Структура;
	Контекст.Вставить("Отправка", Отправка);
	Контекст.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	Контекст.Вставить("ВладелецФормы", ВладелецФормы);
	
	Попытка
		Статус = ДокументооборотСБанкомРоссииВызовСервера.ПолучитьСтатусОтчета(Отправка, ПараметрыАутентификации);			
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		КраткоеПредставлениеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		
		Если СтрНайти(КраткоеПредставлениеОшибки, "ПараметрыАутентификацииНеЗаполнены")
			ИЛИ СтрНайти(КраткоеПредставлениеОшибки, "ПараметрыАутентификацииУказаныНеВерно") Тогда
			Оповещение = Новый ОписаниеОповещения("ПолучитьСтатусОтчетаПослеВводаПараметровАутентификации", ЭтотОбъект, Контекст);
			
			ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(
				Оповещение,
				Контекст.ВладелецФормы);
			
			Возврат;
		Иначе
			ДлительнаяОтправкаКлиентСервер.ВывестиОшибку(КраткоеПредставлениеОшибки);
			ВыполнитьОбработкуОповещения(
				Контекст.ОповещениеОЗавершении, 
				Новый Структура("Выполнено", Ложь));
			Возврат;
		КонецЕсли;
	КонецПопытки;
	
	ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, Новый Структура("Выполнено", Истина));
	
КонецПроцедуры

Процедура ПолучитьСтатусОтчетаПослеВводаПараметровАутентификации(Результат, ВходящийКонтекст) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ПолучитьСтатусОтчета(
			ВходящийКонтекст.ОповещениеОЗавершении, 
			ВходящийКонтекст.Отправка,
			ВходящийКонтекст.ВладелецФормы, 
			Результат);
	Иначе
		ВыполнитьОбработкуОповещения(
			ВходящийКонтекст.ОповещениеОЗавершении, 
			Новый Структура("Выполнено", Ложь));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти