////////////////////////////////////////////////////////////////////////////////
// Подсистема "Работа со сканером документов". Серверная часть.
//
// Модуль для работы с мобильным сканером, который загружает отсканированное в открытую карточку документа.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Позволяет узнать, использует ли пользователь мобильное приложение.
// см. Справочники.ПользователиМобильногоПриложения.
//
// Возвращаемое значение:
//  Булево - Истина, если пользователь найден, Ложь в противном случае.
//
Функция ИспользуетсяМобильноеПриложение() Экспорт
	
	Возврат Справочники.ПользователиМобильногоПриложения.ЭтоПользовательМП(
		Пользователи.ТекущийПользователь());
	
КонецФункции

// Снимает блокировку регистра МП_Сканы для указанной формы.
// см. МобильныйСканер.ОсвободитьСканер.
//
// Параметры:
//  Идентификатор - УникальныйИдентификатор - Идентификатор формы, для которой нужно снять блокировку.
//
Процедура ОсвободитьСканер(Идентификатор) Экспорт
	
	МП_МобильныйСканер.ОсвободитьСканер(Идентификатор);
	
КонецПроцедуры

// Делает попытку блокировки регистра МП_Сканы для указанной формы.
// см. МобильныйСканер.ЗанятьСканер.
//
// Параметры:
//  Идентификатор - УникальныйИдентификатор - Идентификатор формы, для которой нужно установить блокировку.
//
// Возвращаемое значение:
//  Булево - Истина в случае успеха, Ложь в случае неудачи.
//
Функция ЗанятьСканер(Идентификатор) Экспорт
	
	Возврат МП_МобильныйСканер.ЗанятьСканер(Идентификатор);
	
КонецФункции

// Проверяет есть ли запись со сканом в регистре МП_Сканы.
// см. МобильныйСканер.СканЗагружен.
//
// Возвращаемое значение:
//  Булево - Истина, если скан есть, Ложь если записи нет.
//
Функция СканЗагружен() Экспорт
	
	Возврат МП_МобильныйСканер.СканЗагружен();
	
КонецФункции

// Создает файл в карточке документа по двоичным данным в регистре МП_Сканы.
// После этого очищает регистр.
// см. МобильныйСканер.ОбработатьСкан.
//
// Параметры:
//  Владелец - Ссылка на объект, который будет установлен владельцем файла.
//  ИмяФайла - Строка - Будущее имя файла.
//  ИдентификаторФормыДобавления - УникальныйИдентификатор - Идентификатор карточки, к которой фудет прикреплен файл.
//
// Возвращаемое значение:
//  Структура
//   * ФайлДобавлен - Булево
//   * ФайлСсылка - Строка
//   * ТекстОшибки - Строка
//
Функция ОбработатьСкан(Владелец, ИмяФайла) Экспорт
	
	Возврат МП_МобильныйСканер.ОбработатьСкан(Владелец, ИмяФайла);
	
КонецФункции

// Удаляет скан из регистра МП_Сканы
//
Процедура УдалитьСкан() Экспорт
	
	Пользователь = Пользователи.ТекущийПользователь();
	РегистрыСведений.МП_Сканы.УдалитьСкан(Пользователь);

КонецПроцедуры

#КонецОбласти