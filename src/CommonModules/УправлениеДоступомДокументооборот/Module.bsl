
// Функция ВозможныеПраваДляНастройкиПравОбъектов возвращает описание возможных прав
// для настройки прав на объекты указанной таблицы.
//
// Параметры:
//  ОписаниеТаблицы - Неопределено - возвращается таблица всех описаний
//                  - Строка - полное имя таблицы объектов
//                  - Ссылка - ссылка таблицы объектов
//                  - Тип - тип данных таблицы объектов
//
// Возвращаемое значение:
//  ТаблицаЗначений
//
Функция ВозможныеПраваДляНастройкиПравОбъектов(Знач ОписаниеТаблицы = Неопределено) Экспорт
	
	ВозможныеПрава = УправлениеДоступомПовтИспДокументооборот.ВозможныеПраваДляНастройкиПравОбъектов();
	
	Если ОписаниеТаблицы = Неопределено Тогда
		Строки = Неопределено;
	Иначе
		Если ТипЗнч(ОписаниеТаблицы) <> Тип("Строка") Тогда
			Если ТипЗнч(ОписаниеТаблицы) <> Тип("Тип") Тогда
				ОписаниеТаблицы = ТипЗнч(ОписаниеТаблицы);
			КонецЕсли;
			МетаданныеТаблицы = Метаданные.НайтиПоТипу(ОписаниеТаблицы);
			Если Метаданные = Неопределено Тогда
				ОписаниеТаблицы = "";
			Иначе
				ОписаниеТаблицы = МетаданныеТаблицы.ПолноеИмя();
			КонецЕсли;
		
		КонецЕсли;
		Строки = ВозможныеПрава.НайтиСтроки(Новый Структура("ВладелецПрав", ОписаниеТаблицы));
	КонецЕсли;
	
	Возврат ВозможныеПрава.Скопировать(Строки);
	
КонецФункции

// Функция ЗаголовокПодчиненнойФормы параметризирует заголовок подчиненной формы,
// например, НСтр("ru = 'Права доступа: %1 (%2)'" -> "Права доступа: Иванов (Пользователь)"
//
// Параметры:
//  СсылкаНаВладельца - ссылка на объект-владелец.
//
Функция ЗаголовокПодчиненнойФормы(СтрокаЗаголовкаСПараметрами, СсылкаНаВладельца) Экспорт
	
	МетаданныеВладельца    = СсылкаНаВладельца.Метаданные();
	ПредставлениеВладельца = Строка(СсылкаНаВладельца);
	
	Если ЗначениеЗаполнено(МетаданныеВладельца.ПредставлениеОбъекта) Тогда
		ПредставлениеТипаВладельца = МетаданныеВладельца.ПредставлениеОбъекта;
		
	ИначеЕсли ЗначениеЗаполнено(МетаданныеВладельца.Синоним) Тогда
		ПредставлениеТипаВладельца = МетаданныеВладельца.Синоним;
	Иначе
		ПредставлениеТипаВладельца = МетаданныеВладельца.Имя;
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		СтрокаЗаголовкаСПараметрами,
		ПредставлениеВладельца,
		ПредставлениеТипаВладельца);
	
КонецФункции

// Функция ПолучитьСсылкуОбъекта возвращает ссылку
// старого объекта или ссылку нового объекта
//
Функция ПолучитьСсылкуОбъекта(Знач Объект, ЭтоНовый = Неопределено) Экспорт
	
	Ссылка = Объект.Ссылка;
	ЭтоНовый = НЕ ЗначениеЗаполнено(Ссылка);
	
	Если ЭтоНовый Тогда
		Ссылка = Объект.ПолучитьСсылкуНового();
		
		Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
			
			Менеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка);
			Ссылка = Менеджер.ПолучитьСсылку();
			Объект.УстановитьСсылкуНового(Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ссылка;
	
КонецФункции

// Возвращает возможные права объектов
// в виде строк таблицы значений, переданной в качестве параметра ВозможныеПрава
// со структурой колонок:
//
//   ВладелецПрав      - Строка - полное имя таблицы объектов, для которой выполняется настройка прав
//
//   Имя               - Строка - идентификатор права, например, ИзменениеПапок
//                       Право с имененем "УправлениеПравами" должно быть обязательно определено
//                       Право "УправлениеПравами" проверяется при открытии ОбщаяФорма.НастройкиПравОбъектов
//
//   Синоним           - Строка - полное наименование права, например, "Изменение папок файлов"
//
//   Сокращение        - Строка - краткое наименование права среди прав одного владельца,
//                       например, "Изменение
//                                 |папок" - это наименование используется в заголовке колонки стандартной формы настройки прав
//
//   НачальноеЗначение - Булево - начальное значение флажка права при добавлении новой строки в ОбщаяФорма.НастройкиПравОбъектов
//
//   ТребуемыеПрава    - Массив строк - имена прав, требуемых для этого права,
//                       например, право "ИзменениеФайлов" требует право "Чтение",
//                       а право "ПометкаУдаления" требует одно из прав "ИзменениеПапок|ИзменениеФайлов"
//                       При настройке прав пользователем, автоматически устанавливаются требуемые права
//
// Возвращаемое значение:
//   Таблица значений описанная выше с дополнительной колонкой:
//   ИдентификаторВладелецаПрав - СправочникСсылка.ИдентификаторыОбъектовМетаданных
//
Функция ВозможныеПрава() Экспорт
	
	ВозможныеПрава = Новый ТаблицаЗначений();
	ВозможныеПрава.Колонки.Добавить("ВладелецПрав",      Новый ОписаниеТипов("Строка",      , Новый КвалификаторыСтроки(350)));
	ВозможныеПрава.Колонки.Добавить("Имя",               Новый ОписаниеТипов("Строка",      , Новый КвалификаторыСтроки(60)));
	ВозможныеПрава.Колонки.Добавить("Синоним",           Новый ОписаниеТипов("Строка",      , Новый КвалификаторыСтроки(80)));
	ВозможныеПрава.Колонки.Добавить("Сокращение",        Новый ОписаниеТипов("Строка",      , Новый КвалификаторыСтроки(50)));
	ВозможныеПрава.Колонки.Добавить("НачальноеЗначение", Новый ОписаниеТипов("Булево, Число", Новый КвалификаторыЧисла(1, 0, ДопустимыйЗнак.Неотрицательный)));
	ВозможныеПрава.Колонки.Добавить("ТребуемыеПрава",    Новый ОписаниеТипов("Массив"));
	
	ЗаполнитьВозможныеПраваДляНастройкиПравОбъектов(ВозможныеПрава);
	
	ВозможныеПрава.Колонки.Добавить("ИдентификаторВладелецаПрав", Новый ОписаниеТипов("СправочникСсылка.ИдентификаторыОбъектовМетаданных"));
	
	Для каждого ВозможноеПраво Из ВозможныеПрава Цикл
		ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ВозможноеПраво.ВладелецПрав);
		Если ОбъектМетаданных = Неопределено Тогда
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ошибка при подготовке возможных прав для настройки прав объектов.
				           |Не найден объект метаданных заданного владельца прав:
				           |""%1""'"),
				ВозможноеПраво.ВладелецПрав);
		КонецЕсли;
		ВозможноеПраво.ИдентификаторВладелецаПрав = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ОбъектМетаданных);
		// Преобразования списков требуемых прав в массивы
		Разделитель = "|";
		Для Индекс = 0 По ВозможноеПраво.ТребуемыеПрава.Количество()-1 Цикл
			Если Найти(ВозможноеПраво.ТребуемыеПрава[Индекс], Разделитель) > 0 Тогда
				ВозможноеПраво.ТребуемыеПрава[Индекс] =
					СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
						ВозможноеПраво.ТребуемыеПрава[Индекс],
						Разделитель);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ВозможныеПрава;
	
КонецФункции

Процедура ЗаполнитьВозможныеПраваДляНастройкиПравОбъектов(ВозможныеПрава) Экспорт
	
	ЗаполнитьВозможныеПраваДляПапокФайлов(ВозможныеПрава);
	ЗаполнитьВозможныеПраваДляПапокВнутреннихДокументов(ВозможныеПрава);
	ЗаполнитьВозможныеПраваДляПапокПисем(ВозможныеПрава);
	ЗаполнитьВозможныеПраваДляПапокМероприятий(ВозможныеПрава);
	ЗаполнитьВозможныеПраваДляПапокФорума(ВозможныеПрава);
	ЗаполнитьВозможныеПраваДляПапокПроектов(ВозможныеПрава);
	
КонецПроцедуры

Процедура ЗаполнитьВозможныеПраваДляПапокФайлов(ВозможныеПрава)
	
	// Право "Чтение папок и файлов"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиФайлов";
	Право.Имя           = "ЧтениеПапокИФайлов";
	Право.Синоним       = НСтр("ru = 'Чтение папок и файлов'");
	Право.Сокращение    = НСтр("ru = 'Чтение'");
	
	// Право "Добавление папок и файлов" - ограничивает добавление файлов в папке
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиФайлов";
	Право.Имя           = "ДобавлениеПапокИФайлов";
	Право.Синоним       = НСтр("ru = 'Добавление файлов'");
	Право.Сокращение    = НСтр("ru = 'Добавление
	                                 |файлов'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ИзменениеПапокИФайлов");
	
	// Право "Изменение файлов" - ограничивает изменение файлов в папке
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиФайлов";
	Право.Имя           = "ИзменениеПапокИФайлов";
	Право.Синоним       = НСтр("ru = 'Изменение файлов'");
	Право.Сокращение    = НСтр("ru = 'Изменение
	                                 |файлов'");
	// Требуемая роль (одна из указанных).
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИФайлов");
	
	// Право "Изменение папок файлов" - ограничивает изменение структуры 
	// папок, добавление, изменение, пометку удаления
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиФайлов";
	Право.Имя           = "ИзменениеПапок";
	Право.Синоним       = НСтр("ru = 'Изменение папок файлов'");
	Право.Сокращение    = НСтр("ru = 'Изменение
	                                 |папок'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИФайлов");
	
	// Право "Пометка удаления папок и файлов" - ограничивает пометку удаления 
	// файлов в папке
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиФайлов";
	Право.Имя           = "ПометкаУдаленияПапокИФайлов";
	Право.Синоним       = НСтр("ru = 'Пометка удаления файлов'");
	Право.Сокращение    = НСтр("ru = 'Пометка
	                                 |удаления'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ИзменениеПапокИФайлов");
	
	// Право "Управление правами папок файлов"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиФайлов";
	Право.Имя           = "УправлениеПравами";
	Право.Синоним       = НСтр("ru = 'Управление правами папок файлов'");
	Право.Сокращение    = НСтр("ru = 'Управление
	                                 |правами'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИФайлов");
	
КонецПроцедуры

Процедура ЗаполнитьВозможныеПраваДляПапокВнутреннихДокументов(ВозможныеПрава)

	// Право "Чтение"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиВнутреннихДокументов";
	Право.Имя           = "ЧтениеПапокИВнутреннихДокументов";
	Право.Синоним       = НСтр("ru = 'Чтение папок и внутренних документов'");
	Право.Сокращение    = НСтр("ru = 'Чтение'");
	
	// Право "Добавление"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиВнутреннихДокументов";
	Право.Имя           = "ДобавлениеПапокИВнутреннихДокументов";
	Право.Синоним       = НСтр("ru = 'Добавление внутренних документов'");
	Право.Сокращение    = НСтр("ru = 'Добавление
	                                 |документов'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ИзменениеПапокИВнутреннихДокументов");
	
	// Право "Изменение"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиВнутреннихДокументов";
	Право.Имя           = "ИзменениеПапокИВнутреннихДокументов";
	Право.Синоним       = НСтр("ru = 'Изменение внутренних документов'");
	Право.Сокращение    = НСтр("ru = 'Изменение
	                                 |документов'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИВнутреннихДокументов");
	
	// Право "Изменение папок"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиВнутреннихДокументов";
	Право.Имя           = "ИзменениеПапокВнутреннихДокументов";
	Право.Синоним       = НСтр("ru = 'Изменение папок внутренних документов'");
	Право.Сокращение    = НСтр("ru = 'Изменение
	                                 |папок'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИВнутреннихДокументов");
	
	// Право "Пометка удаления"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиВнутреннихДокументов";
	Право.Имя           = "ПометкаУдаленияПапокИВнутреннихДокументов";
	Право.Синоним       = НСтр("ru = 'Пометка удаления внутренних документов'");
	Право.Сокращение    = НСтр("ru = 'Пометка
	                                 |удаления'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ИзменениеПапокИВнутреннихДокументов");
	
	// Право "Управление правами"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиВнутреннихДокументов";
	Право.Имя           = "УправлениеПравами";
	Право.Синоним       = НСтр("ru = 'Управление правами папок внутренних документов'");
	Право.Сокращение    = НСтр("ru = 'Управление
	                                 |правами'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИВнутреннихДокументов");

КонецПроцедуры

Процедура ЗаполнитьВозможныеПраваДляПапокПисем(ВозможныеПрава)
	
	// Право "Чтение папок и писем"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиПисем";
	Право.Имя           = "ЧтениеПапокИПисем";
	Право.Синоним       = НСтр("ru = 'Чтение папок и писем'");
	Право.Сокращение    = НСтр("ru = 'Чтение'");
	
	// Право "Добавление папок и писем" - ограничивает добавление писем в папке
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиПисем";
	Право.Имя           = "ДобавлениеПапокИПисем";
	Право.Синоним       = НСтр("ru = 'Добавление писем'");
	Право.Сокращение    = НСтр("ru = 'Добавление
	                                 |писем'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ИзменениеПапокИПисем");
	
	// Право "Изменение писем" - ограничивает изменение писем в папке
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиПисем";
	Право.Имя           = "ИзменениеПапокИПисем";
	Право.Синоним       = НСтр("ru = 'Изменение писем'");
	Право.Сокращение    = НСтр("ru = 'Изменение
	                                 |писем'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИПисем");
	
	// Право "Изменение папок писем" - ограничивает изменение структуры 
	// папок, добавление, изменение, пометку удаления
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиПисем";
	Право.Имя           = "ИзменениеПапок";
	Право.Синоним       = НСтр("ru = 'Изменение папок писем'");
	Право.Сокращение    = НСтр("ru = 'Изменение
	                                 |папок'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИписем");
	
	// Право "Пометка удаления папок и писем" - ограничивает пометку удаления 
	// писем в папке
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиПисем";
	Право.Имя           = "ПометкаУдаленияПапокИПисем";
	Право.Синоним       = НСтр("ru = 'Пометка удаления писем'");
	Право.Сокращение    = НСтр("ru = 'Пометка
	                                 |удаления'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ИзменениеПапокИПисем");
	
	// Право "Управление правами папок писем"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиПисем";
	Право.Имя           = "УправлениеПравами";
	Право.Синоним       = НСтр("ru = 'Управление правами папок писем'");
	Право.Сокращение    = НСтр("ru = 'Управление
	                                 |правами'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИПисем");
	
КонецПроцедуры

Процедура ЗаполнитьВозможныеПраваДляПапокМероприятий(ВозможныеПрава)
	
	// Право "Чтение"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиМероприятий";
	Право.Имя           = "ЧтениеПапокИМероприятий";
	Право.Синоним       = НСтр("ru = 'Чтение папок и мероприятий'");
	Право.Сокращение    = НСтр("ru = 'Чтение'");
	
	// Право "Добавление"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиМероприятий";
	Право.Имя           = "ДобавлениеПапокИМероприятий";
	Право.Синоним       = НСтр("ru = 'Добавление мероприятий'");
	Право.Сокращение    = НСтр("ru = 'Добавление
	                                 |мероприятий'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ИзменениеПапокИМероприятий");
	
	// Право "Изменение"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиМероприятий";
	Право.Имя           = "ИзменениеПапокИМероприятий";
	Право.Синоним       = НСтр("ru = 'Изменение мероприятий'");
	Право.Сокращение    = НСтр("ru = 'Изменение
	                                 |мероприятий'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИМероприятий");
	
	// Право "Изменение папок"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиМероприятий";
	Право.Имя           = "ИзменениеПапокМероприятий";
	Право.Синоним       = НСтр("ru = 'Изменение папок мероприятий'");
	Право.Сокращение    = НСтр("ru = 'Изменение
	                                 |папок'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИМероприятий");
	
	// Право "Пометка удаления"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиМероприятий";
	Право.Имя           = "ПометкаУдаленияПапокИМероприятий";
	Право.Синоним       = НСтр("ru = 'Пометка удаления мероприятий'");
	Право.Сокращение    = НСтр("ru = 'Пометка
	                                 |мероприятий'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ИзменениеПапокИМероприятий");
	
	// Право "Управление правами"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиМероприятий";
	Право.Имя           = "УправлениеПравами";
	Право.Синоним       = НСтр("ru = 'Управление правами папок мероприятий'");
	Право.Сокращение    = НСтр("ru = 'Управление
	                                 |правами'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИМероприятий");
	
КонецПроцедуры

Процедура ЗаполнитьВозможныеПраваДляПапокФорума(ВозможныеПрава)
	
	// Право "Чтение"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиФорума";
	Право.Имя           = "ЧтениеПапокИТем";
	Право.Синоним       = НСтр("ru = 'Чтение разделов и тем'");
	Право.Сокращение    = НСтр("ru = 'Чтение'");
	
	// Право "Добавление"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиФорума";
	Право.Имя           = "ДобавлениеТемИСообщений";
	Право.Синоним       = НСтр("ru = 'Добавление тем и сообщений'");
	Право.Сокращение    = НСтр("ru = 'Добавление'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИТем");
	
	// Право "Изменение"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиФорума";
	Право.Имя           = "ИзменениеТемИСообщений";
	Право.Синоним       = НСтр("ru = 'Изменение тем и сообщений'");
	Право.Сокращение    = НСтр("ru = 'Изменение'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИТем");
	
	// Право "Изменение папок"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиФорума";
	Право.Имя           = "ИзменениеПапок";
	Право.Синоним       = НСтр("ru = 'Изменение разделов'");
	Право.Сокращение    = НСтр("ru = 'Изменение
	                                 |разделов'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИТем");
	
	// Право "Пометка удаления"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиФорума";
	Право.Имя           = "ПометкаУдаленияТемИСообщений";
	Право.Синоним       = НСтр("ru = 'Удаление тем и сообщений'");
	Право.Сокращение    = НСтр("ru = 'Удаление'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ИзменениеТемИСообщений");
	
	// Право "Управление правами"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиФорума";
	Право.Имя           = "УправлениеПравами";
	Право.Синоним       = НСтр("ru = 'Управление правами разделов'");
	Право.Сокращение    = НСтр("ru = 'Управление
	                                 |правами'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИТем");

КонецПроцедуры

Процедура ЗаполнитьВозможныеПраваДляПапокПроектов(ВозможныеПрава)
	
	// Право "Чтение"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиПроектов";
	Право.Имя           = "ЧтениеПапокИПроектов";
	Право.Синоним       = НСтр("ru = 'Чтение папок и проектов'");
	Право.Сокращение    = НСтр("ru = 'Чтение'");
	
	// Право "Добавление"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиПроектов";
	Право.Имя           = "ДобавлениеПапокИПроектов";
	Право.Синоним       = НСтр("ru = 'Добавление проектов'");
	Право.Сокращение    = НСтр("ru = 'Добавление
	                                 |проектов'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ИзменениеПапокИПроектов");
	
	// Право "Изменение"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиПроектов";
	Право.Имя           = "ИзменениеПапокИПроектов";
	Право.Синоним       = НСтр("ru = 'Изменение проектов'");
	Право.Сокращение    = НСтр("ru = 'Изменение
	                                 |проектов'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИПроектов");
	
	// Право "Изменение папок"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиПроектов";
	Право.Имя           = "ИзменениеПапокПроектов";
	Право.Синоним       = НСтр("ru = 'Изменение папок проектов'");
	Право.Сокращение    = НСтр("ru = 'Изменение
	                                 |папок'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИПроектов");
	
	// Право "Пометка удаления"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиПроектов";
	Право.Имя           = "ПометкаУдаленияПапокИПроектов";
	Право.Синоним       = НСтр("ru = 'Пометка удаления проектов'");
	Право.Сокращение    = НСтр("ru = 'Пометка
	                                 |проектов'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ИзменениеПапокИПроектов");
	
	// Право "Управление правами"
	Право = ВозможныеПрава.Добавить();
	Право.ВладелецПрав  = "Справочник.ПапкиПроектов";
	Право.Имя           = "УправлениеПравами";
	Право.Синоним       = НСтр("ru = 'Управление правами папок проектов'");
	Право.Сокращение    = НСтр("ru = 'Управление
	                                 |правами'");
	// Права, требуемые для этого права.
	Право.ТребуемыеПрава.Добавить("ЧтениеПапокИПроектов");
	
КонецПроцедуры

// Добавляет роль в полномочия.
// 
// Параметры:
//  Роль - ОбъектМетаданных.Роль, Строка - объект метаданных или имя роли,
//		которую нуюжно добавить в профиль.
//  ИдентификаторПрофиля - Строка - идентификатор профиля.
// 
Процедура ДобавитьРольВПолномочия(Знач Роль, ИдентификаторПрофиля) Экспорт 
	
	Если ТипЗнч(Роль) = Тип("Строка") Тогда
		Роль = Метаданные.Роли.Найти(Роль);
	КонецЕсли;
	
	Если Роль = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Профиль = Справочники.ПрофилиГруппДоступа.ПоставляемыйПрофильПоИдентификатору(ИдентификаторПрофиля);
	Если Не ЗначениеЗаполнено(Профиль) Тогда 
		Возврат;
	КонецЕсли;
	
	ПрофильОбъект = Профиль.ПолучитьОбъект();
	РольИдентификатор = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Роль);
	НайденнаяСтрока = ПрофильОбъект.Роли.Найти(РольИдентификатор, "Роль");
	Если НайденнаяСтрока = Неопределено Тогда 
		НоваяСтрока = ПрофильОбъект.Роли.Добавить();
		НоваяСтрока.Роль = РольИдентификатор;
		ПрофильОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры
