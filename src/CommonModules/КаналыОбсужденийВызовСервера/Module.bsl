
#Область ПрограммныйИнтерфейс

Процедура ОбработатьСообщениеПользователя(Знач ИдентификаторСообщения, Знач ИдентификаторОбсуждения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеОбОбсуждении = КаналыОбсуждений.ДанныеОбОбсуждении(ИдентификаторОбсуждения);
	Если Не ДанныеОбОбсуждении.ЭтоОбсуждениеТекущегоПользователяСКаналом Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеОбОбсуждении.КаналПометкаУдаления
		Или Не ЗначениеЗаполнено(ДанныеОбОбсуждении.РольТекущегоПользователяНаКанале)
		Или ДанныеОбОбсуждении.РольТекущегоПользователяНаКанале = Перечисления.РолиУчастниковКаналовОбсуждений.Читатель Тогда
		
		ШрифтНаклонный = Новый Шрифт(,,, Истина);
		ЦветСерый = ЦветаСтиля.ЦветСлужебнойНадписиОбсуждений;
		ЦветСсылки = ЦветаСтиля.ИнформационнаяНадпись;
		
		ЧастиСообщения = Новый Массив;
		Если ДанныеОбОбсуждении.КаналПометкаУдаления Тогда
			ЧастиСообщения.Добавить(Новый ФорматированнаяСтрока(
				НСтр("ru = 'Сообщение не будет опубликовано, так как этот '"), ШрифтНаклонный, ЦветСерый));
			ЧастиСообщения.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'канал'"),
				ШрифтНаклонный, ЦветСсылки,, ПолучитьНавигационнуюСсылку(ДанныеОбОбсуждении.Канал)));
			ЧастиСообщения.Добавить(Новый ФорматированнаяСтрока(
				НСтр("ru = ' помечен на удаление'"), ШрифтНаклонный, ЦветСерый));
		Иначе
			ЧастиСообщения.Добавить(Новый ФорматированнаяСтрока(
				НСтр("ru = 'Вы не являетесь автором '"), ШрифтНаклонный, ЦветСерый));
			ЧастиСообщения.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'канала'"),
				ШрифтНаклонный, ЦветСсылки,, ПолучитьНавигационнуюСсылку(ДанныеОбОбсуждении.Канал)));
			ЧастиСообщения.Добавить(Новый ФорматированнаяСтрока(
				НСтр("ru = ', поэтому сообщение не будет опубликовано. Чтобы публиковать сообщения, обратитесь к администратору.'"),
				ШрифтНаклонный, ЦветСерый));
		КонецЕсли;
		
		Сообщение = СистемаВзаимодействия.СоздатьСообщение(ИдентификаторОбсуждения);
		Сообщение.Автор = ОбсужденияДокументооборот.ИдентификаторПользователяСВ(
			ДанныеОбОбсуждении.КаналПользователь);
		Сообщение.Получатели.Добавить(СистемаВзаимодействия.ИдентификаторТекущегоПользователя());
		Сообщение.Текст = Новый ФорматированнаяСтрока(ЧастиСообщения);
		Сообщение.Записать();
		
		Возврат;
		
	КонецЕсли;
	
	// Пересылка сообщения.
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Пользователи.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ
		|ИЗ
		|	Справочник.КаналыОбсуждений.Участники КАК КаналыОбсужденийУчастники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|		ПО КаналыОбсужденийУчастники.Участник = ПользователиВКонтейнерах.Контейнер
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|		ПО ПользователиВКонтейнерах.Пользователь = Пользователи.Ссылка
		|		
		|ГДЕ
		|	КаналыОбсужденийУчастники.Ссылка = &Канал
		|	И НЕ Пользователи.ПометкаУдаления
		|	И НЕ Пользователи.Недействителен
		|	И НЕ Пользователи.Служебный
		|	И Пользователи.ИдентификаторПользователяИБ <> &ПустойИдентификатор
		|	И Пользователи.Ссылка <> &ТекущийПользователь
		|");
	
	Запрос.УстановитьПараметр("Канал", ДанныеОбОбсуждении.Канал);
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователи.ТекущийПользователь());
	Запрос.УстановитьПараметр("ПустойИдентификатор", УникальныйИдентификаторПустой());
	
	Получатели = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ИдентификаторПользователяИБ");
	
	ПараметрыВыполненияФЗ = Новый Массив;
	ПараметрыВыполненияФЗ.Добавить(Строка(ИдентификаторСообщения));
	ПараметрыВыполненияФЗ.Добавить(Получатели);
	ПараметрыВыполненияФЗ.Добавить(ДанныеОбОбсуждении.Канал);
	ПараметрыВыполненияФЗ.Добавить(ДанныеОбОбсуждении.КаналПользователь);
	
	ФоновоеЗадание = ФоновыеЗадания.Выполнить(
		"КаналыОбсуждений.ОпубликоватьСообщениеПользователя",
		ПараметрыВыполненияФЗ,
		Строка(ИдентификаторСообщения),
		НСтр("ru = 'Публикация сообщения на канале'"));
	
КонецПроцедуры

#КонецОбласти
