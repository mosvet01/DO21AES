////////////////////////////////////////////////////////////////////////////////
// Модуль для работы с каналами обсуждений.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Отправляет пользователю сообщение о том, что он включен в участники канала.
//
// Параметры:
//  КаналСсылка - СправочникСсылка.КаналыОбсуждений - ссылка на канал.
//  Пользователь - СправочникСсылка.Пользователи - ссылка на пользователя.
//  Роль - ПеречислениеСсылка.РолиУчастниковКаналовОбсуждений - роль пользователя для канала.
//
Процедура ОтправитьПриветственноеСообщение(КаналСсылка, Пользователь, Роль) Экспорт
	
	ШрифтНаклонный = Новый Шрифт(,,, Истина);
	ЦветСерый = ЦветаСтиля.ЦветСлужебнойНадписиОбсуждений;
	ЦветСсылки = ЦветаСтиля.ИнформационнаяНадпись;
	
	ФорматированныеЧастиСтроки = Новый Массив;
	ФорматированныеЧастиСтроки.Добавить(
		Новый ФорматированнаяСтрока(НСтр("ru = 'Добро пожаловать на канал '"),
			ШрифтНаклонный, ЦветСерый));
	ФорматированныеЧастиСтроки.Добавить(
		Новый ФорматированнаяСтрока(СокрЛП(Строка(КаналСсылка)),
			ШрифтНаклонный, ЦветСсылки,, ПолучитьНавигационнуюСсылку(КаналСсылка)));
	ФорматированныеЧастиСтроки.Добавить(
		Новый ФорматированнаяСтрока("!" + Символы.ПС, ШрифтНаклонный, ЦветСерый));
	
	ПриветствиеИПояснениеШаблон = "";
	Если Роль = Перечисления.РолиУчастниковКаналовОбсуждений.Автор Тогда
		ФорматированныеЧастиСтроки.Добавить(Новый ФорматированнаяСтрока(
			НСтр("ru = 'Вы указаны в качестве автора канала и можете писать сюда сообщения, которые будут доставлены всем участникам.'"),
			ШрифтНаклонный, ЦветСерый));
	ИначеЕсли Роль = Перечисления.РолиУчастниковКаналовОбсуждений.Администратор Тогда
		ФорматированныеЧастиСтроки.Добавить(Новый ФорматированнаяСтрока(
			НСтр("ru = 'Вы указаны в качестве администратора канала и можете писать сюда сообщения и управлять составом участников.'"),
			ШрифтНаклонный, ЦветСерый));
	Иначе
		ФорматированныеЧастиСтроки.Добавить(Новый ФорматированнаяСтрока(
			НСтр("ru = 'Сюда будут приходить сообщения от авторов канала.'"),
			ШрифтНаклонный, ЦветСерый));
	КонецЕсли;
	
	ПользовательДляСВ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КаналСсылка, "ПользовательДляСВ");
	РезультатОтправки = ОбсужденияДокументооборот.ОтправитьЛичноеСообщение(
		ПользовательДляСВ, Пользователь, Новый ФорматированнаяСтрока(ФорматированныеЧастиСтроки));
	
КонецПроцедуры

// Пересылает сообщение указанным пользователям через личное сообщение от автора.
//
// Параметры:
//  ИдентификаторСообщения - Идентификатор пересылаемого сообщения.
//  ПользователиПолучатели - Массив - ссылки на пользователей или идентификаторы пользователей ИБ.
//  ПользовательАвтор - СправочникСсылка.Пользователи - пользователь,
//  	от имени которого будут отправлены личные сообщения - копии оригинала.
//  	Если не указан, в качестве автора будет автор оригинального сообщения.
//
Процедура ОпубликоватьСообщениеПользователя(
			Знач ИдентификаторСообщенияСтрокой,
			Знач ПользователиПолучатели,
			Знач КаналСсылка,
			Знач КаналПользователь) Экспорт
			
	УстановитьПривилегированныйРежим(Истина);
			
	// Оповещение о доставке.
	ИдентификаторСообщения = Новый ИдентификаторСообщенияСистемыВзаимодействия(ИдентификаторСообщенияСтрокой);
	ПересылаемоеСообщение = СистемаВзаимодействия.ПолучитьСообщение(ИдентификаторСообщения);
	СообщениеОтвет = СистемаВзаимодействия.СоздатьСообщение(ПересылаемоеСообщение.Обсуждение);
	СообщениеОтвет.Автор = ОбсужденияДокументооборот.ИдентификаторПользователяСВ(КаналПользователь);
	СообщениеОтвет.Получатели.Добавить(СистемаВзаимодействия.ИдентификаторТекущегоПользователя());
	
	ЧастиТекста = Новый Массив;
	ЧастиТекста.Добавить(Новый ФорматированнаяСтрока(
		НСтр("ru = 'Ваше сообщение доставлено всем подписчикам '"),
		Новый Шрифт(,,, Истина), ЦветаСтиля.ЦветСлужебнойНадписиОбсуждений));
	ЧастиТекста.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'канала'"),
		Новый Шрифт(,,, Истина), ЦветаСтиля.ИнформационнаяНадпись,, ПолучитьНавигационнуюСсылку(КаналСсылка)));
	ТекстОтвета = Новый ФорматированнаяСтрока(ЧастиТекста);
	
	Попытка
		РезультатПересылки = ОбсужденияДокументооборот.ПереслатьСообщениеПользователя(
			ИдентификаторСообщения, ПользователиПолучатели, КаналПользователь, Истина);
		Если РезультатПересылки.НеДоставлено > 0 Тогда
			ТекстОтвета = СтрШаблон(
				НСтр("ru = 'Сообщение не доставлено некоторым подписчикам канала (%1).
					|Подробности в журнале регистрации.'"),
				Формат(РезультатПересылки.НеДоставлено, "ЧГ=0"));
		ИначеЕсли РезультатПересылки.Доставлено = 0 Тогда
			ТекстОтвета = НСтр("ru = 'Не найдено ни одного действительного подписчика канала для доставки сообщения'");
		КонецЕсли;
	Исключение
		ТекстОтвета = СтрШаблон(НСтр("ru = 'Что-то пошло не так:
			|
			|""%1""'"), СокрЛП(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
	КонецПопытки;
	
	
	Если ТипЗнч(ТекстОтвета) = Тип("ФорматированнаяСтрока") Тогда
		СообщениеОтвет.Текст = ТекстОтвета;
	Иначе
		СообщениеОтвет.Текст = Новый ФорматированнаяСтрока(ТекстОтвета,
			Новый Шрифт(,,, Истина), ЦветаСтиля.ЦветСлужебнойНадписиОбсуждений);
	КонецЕсли;

	СообщениеОтвет.Записать();
	
КонецПроцедуры

Функция ДанныеОбОбсуждении(ИдентификаторОбсуждения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = ДанныеОбОбсужденииСтруктура();
	
	Обсуждение = СистемаВзаимодействия.ПолучитьОбсуждение(ИдентификаторОбсуждения);
	Если Обсуждение.Групповое Тогда
		Возврат Результат;
	КонецЕсли;
	
	ИдентификаторТекущегоПользователя = СистемаВзаимодействия.ИдентификаторТекущегоПользователя();
	ЕстьТекущийПользователь = Ложь;
	Для Каждого Участник Из Обсуждение.Участники Цикл
		Если Участник = ИдентификаторТекущегоПользователя Тогда
			ЕстьТекущийПользователь = Истина;
		Иначе
			ПользовательСВ = СистемаВзаимодействия.ПолучитьПользователя(Участник);
			Если ПользовательСВ.Заблокирован Тогда
				Возврат Результат;
			КонецЕсли;
			ИдентификаторПользователяИБ = ПользовательСВ.ИдентификаторПользователяИнформационнойБазы;
			Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	КаналыОбсуждений.Ссылка КАК Ссылка,
				|	КаналыОбсуждений.ПользовательДляСВ КАК ПользовательДляСВ,
				|	КаналыОбсуждений.ПометкаУдаления КАК ПометкаУдаления
				|ПОМЕСТИТЬ Канал
				|ИЗ
				|	Справочник.КаналыОбсуждений КАК КаналыОбсуждений
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
				|		ПО КаналыОбсуждений.ПользовательДляСВ = Пользователи.Ссылка
				|ГДЕ
				|	Пользователи.ИдентификаторПользователяИБ = &ИдентификаторПользователяИБ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВложенныйЗапрос.Канал КАК Канал,
				|	ВложенныйЗапрос.ПользовательДляСВ КАК ПользовательДляСВ,
				|	ВложенныйЗапрос.ПометкаУдаления КАК ПометкаУдаления,
				|	ВЫБОР ВложенныйЗапрос.ПриоритетРоли
				|		КОГДА 1
				|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РолиУчастниковКаналовОбсуждений.Читатель)
				|		КОГДА 2
				|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РолиУчастниковКаналовОбсуждений.Автор)
				|		КОГДА 3
				|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РолиУчастниковКаналовОбсуждений.Администратор)
				|		ИНАЧЕ НЕОПРЕДЕЛЕНО
				|	КОНЕЦ КАК Роль
				|ИЗ
				|	(ВЫБРАТЬ
				|		МАКСИМУМ(ВЫБОР КаналыОбсужденийУчастники.Роль
				|				КОГДА ЗНАЧЕНИЕ(Перечисление.РолиУчастниковКаналовОбсуждений.Читатель)
				|					ТОГДА 1
				|				КОГДА ЗНАЧЕНИЕ(Перечисление.РолиУчастниковКаналовОбсуждений.Автор)
				|					ТОГДА 2
				|				КОГДА ЗНАЧЕНИЕ(Перечисление.РолиУчастниковКаналовОбсуждений.Администратор)
				|					ТОГДА 3
				|				ИНАЧЕ 0
				|			КОНЕЦ) КАК ПриоритетРоли,
				|		Канал.Ссылка КАК Канал,
				|		Канал.ПользовательДляСВ КАК ПользовательДляСВ,
				|		Канал.ПометкаУдаления КАК ПометкаУдаления
				|	ИЗ
				|		Канал КАК Канал
				|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КаналыОбсуждений.Участники КАК КаналыОбсужденийУчастники
				|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
				|				ПО КаналыОбсужденийУчастники.Участник = ПользователиВКонтейнерах.Контейнер
				|					И (ПользователиВКонтейнерах.Пользователь = &ТекущийПользователь)
				|			ПО Канал.Ссылка = КаналыОбсужденийУчастники.Ссылка
				|	
				|	СГРУППИРОВАТЬ ПО
				|		Канал.Ссылка,
				|		Канал.ПользовательДляСВ,
				|		Канал.ПометкаУдаления) КАК ВложенныйЗапрос");
			Запрос.УстановитьПараметр("ИдентификаторПользователяИБ", ИдентификаторПользователяИБ);
			Запрос.УстановитьПараметр("ТекущийПользователь", Пользователи.ТекущийПользователь());
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Результат.Канал = Выборка.Канал;
				Результат.КаналПользователь = Выборка.ПользовательДляСВ;
				Результат.КаналПометкаУдаления = Выборка.ПометкаУдаления;
				Результат.РольТекущегоПользователяНаКанале = Выборка.Роль;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Результат.ЭтоОбсуждениеТекущегоПользователяСКаналом =
		ЗначениеЗаполнено(Результат.Канал) И ЕстьТекущийПользователь;
	
	Возврат Результат;
	
КонецФункции

Функция ДанныеОбОбсужденииСтруктура() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ЭтоОбсуждениеТекущегоПользователяСКаналом", Ложь);
	Результат.Вставить("Канал", Неопределено);
	Результат.Вставить("КаналПользователь", Неопределено);
	Результат.Вставить("КаналПометкаУдаления", Ложь);
	Результат.Вставить("РольТекущегоПользователяНаКанале", Неопределено);
	
	Возврат Результат;
	
КонецФункции

// Возвращает идентификаторы СВ тех каналов, в состав участников которых входит пользователь.
//
// Параметры:
//  Пользователь - СправочникСсылка, Неопределено - ссылка на пользователя.
//  	Если Неопределено, то текущий пользователь.
// Возвращаемое значение:
//  Массив -  идентификаторы пользователей-каналов в СВ.
//
Функция ИдентификаторыСВКаналовПользователя(Знач Пользователь = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторыСВКаналов = Новый Массив;
	
	Если Пользователь = Неопределено Тогда
		Пользователь = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПользователиКаналы.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ
		|ИЗ
		|	РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КаналыОбсуждений.Участники КАК КаналыОбсужденийУчастники
		|		ПО ПользователиВКонтейнерах.Контейнер = КаналыОбсужденийУчастники.Участник
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КаналыОбсуждений КАК КаналыОбсуждений
		|		ПО КаналыОбсужденийУчастники.Ссылка = КаналыОбсуждений.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК ПользователиКаналы
		|		ПО КаналыОбсуждений.ПользовательДляСВ = ПользователиКаналы.Ссылка
		|ГДЕ
		|	ПользователиВКонтейнерах.Пользователь = &Пользователь");
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Попытка
			ИдентификаторСВ = СистемаВзаимодействия.ПолучитьИдентификаторПользователя(
				Выборка.ИдентификаторПользователяИБ);
			Если ИдентификаторСВ <> Неопределено Тогда
				ИдентификаторыСВКаналов.Добавить(ИдентификаторСВ);
			КонецЕсли;
		Исключение
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ОбсужденияДокументооборот.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
		КонецПопытки;
	КонецЦикла;
	
	Возврат ИдентификаторыСВКаналов;
	
КонецФункции

#КонецОбласти
