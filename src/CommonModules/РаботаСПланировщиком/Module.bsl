////////////////////////////////////////////////////////////////////////////////
// Работа с планировщиком (сервер).
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Обновляет планировщик.
//
// Параметры:
//  Планировщик - Планировщик - Планировщик.
//  НастройкиОтображения - Структура - Настройки отображения планировщика. См. РаботаСПланировщиком.НастройкиОтображения().
//
Процедура ОбновитьПланировщик(Планировщик, НастройкиОтображения) Экспорт
	
	ЗагрузитьДанныеПланировщика(Планировщик, НастройкиОтображения);
	РаботаСПланировщикомКлиентСервер.НастроитьПланировщик(Планировщик, НастройкиОтображения);
	
КонецПроцедуры

// Формирует структуру настроек отображения планировщика.
// 
// Возвращаемое значение:
//  Структура - Настройки отображения планировщика.
//   * ПериодОтображения - Перечисления.ПериодОтображенияРабочегоКалендаря - Период отображения.
//   * ОтображаемаяДата - Дата - Отображаемая дата.
//   * ВыделенныеДаты - Массив из Дата - Выделенные даты.
//   * НастройкаОтображениеВремениЭлементов - ОтображениеВремениЭлементовПланировщика - Отображение времени элементов.
//   * ЦветКалендаряПодпись - Цвет - Цвет подписи.
//   * РазмерЯчейкиВремени - Число - Размер ячейки времени.
//   * ЦветКалендаряФонШапки - Цвет - Цвет фона шапки.
//   * ОтображатьПомеченныеНаУдаление - Булево - Отображать помеченные на удаление.
//   * ОтображатьВремяС - Число - Время начала отображения.
//   * ОтображатьВремяПо - Число - Время окончания отображения.
//   * ОтображатьСкрытыеЭлементы - Булево - Смещать время начала и окончания отображения, если в скрытых периодах есть элементы.
//   * ЦветФонаОбластиОтображения - Булево - Цвет фона области отображения
//   * ТекстЗапроса - Строка - Текст запроса.
//   * ТекстУсловияПометкаУдаления - Строка - Текст условия пометки удаления.
//   * ТекстыУсловийОтборов - Соответствие - Тексты условий отборов.
//   * Отборы - Соответствие - Отборы.
//   * ТекстДополнительныхСоединений - Строка - Часть текста запроса, которая будет заменена на дополнительные соединения.
//   * ШаблонДополнительныхСоединений - Строка - Шаблон дополнительных соединений.
//   * ШаблонДополнительногоРеквизита - Строка - Шаблон дополнительного реквизита.
//   * ТекстДополнительныхУсловий - Строка - Часть текст запроса, которая будет заменена на дополнительные условия.
//   * ШаблонДополнительныхУсловий - Строка - Шаблон дополнительных условий.
//   * ШаблонДополнительныхУсловий - Строка - Шаблон дополнительного параметра.
//   * ДополнительныеОтборы - Соответствие - Дополнительные отборы.
//   * ТекстДополнительныхЗначений - Строка - Часть текст запроса, которая будет заменена на дополнительные значения.
//   * ШаблонДополнительныхЗначений - Строка - Шаблон дополнительных значений.
//   * ШаблонСинонимаДополнительногоЗначения - Строка - Шаблон синонима дополнительного значения.
//   * ДополнительноеПредставление - Массив из Структура - Дополнительное представление. См. РаботаСПланировщикомКлиентСервер.НовыйЭлементДополнительногоПредставления().
//
Функция НастройкиОтображения() Экспорт
	
	НастройкиОтображения = Новый Структура(
		"ПериодОтображения, ОтображаемаяДата, ВыделенныеДаты,
		|НастройкаОтображениеВремениЭлементов, ЦветКалендаряПодпись, РазмерЯчейкиВремени,
		|ЦветКалендаряФонШапки, ОтображатьПомеченныеНаУдаление, ОтображатьВремяС, ОтображатьВремяПо,
		|ОтображатьСкрытыеЭлементы, ЦветФонаОбластиОтображения,
		|ТекстЗапроса, ТекстУсловияПометкаУдаления, ТекстыУсловийОтборов, Отборы,
		|ТекстДополнительныхСоединений, ШаблонДополнительныхСоединений, ШаблонДополнительногоРеквизита,
		|ТекстДополнительныхУсловий, ШаблонДополнительныхУсловий, ШаблонДополнительногоПараметра,
		|ТекстДополнительныхЗначений, ШаблонДополнительныхЗначений, ШаблонСинонимаДополнительногоЗначения,
		|ДополнительныеОтборы, ДополнительноеПредставление");
	
	НастройкиОтображения.ПериодОтображения = Перечисления.ПериодОтображенияРабочегоКалендаря.Месяц;
	НастройкиОтображения.ОтображаемаяДата = НачалоДня(ТекущаяДатаСеанса());
	НастройкиОтображения.ВыделенныеДаты =
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(НастройкиОтображения.ОтображаемаяДата);
	НастройкиОтображения.НастройкаОтображениеВремениЭлементов = ОтображениеВремениЭлементовПланировщика.НеОтображать;
	НастройкиОтображения.ЦветКалендаряПодпись = ЦветаСтиля.ЦветКалендаряПодпись;
	НастройкиОтображения.РазмерЯчейкиВремени = 15;
	НастройкиОтображения.ЦветКалендаряФонШапки = ЦветаСтиля.ЦветКалендаряФонШапки;
	НастройкиОтображения.ОтображатьПомеченныеНаУдаление = Ложь;
	НастройкиОтображения.ОтображатьВремяС = 9;
	НастройкиОтображения.ОтображатьВремяПо = 6;
	НастройкиОтображения.ОтображатьСкрытыеЭлементы = Истина;
	НастройкиОтображения.ЦветФонаОбластиОтображения = ЦветаСтиля.ЦветКалендаряДоступноеВремя;
	НастройкиОтображения.ТекстЗапроса = "";
	НастройкиОтображения.ТекстУсловияПометкаУдаления = "";
	НастройкиОтображения.ТекстыУсловийОтборов = Новый Соответствие;
	НастройкиОтображения.Отборы = Новый Соответствие;
	НастройкиОтображения.ТекстДополнительныхСоединений = "";
	НастройкиОтображения.ШаблонДополнительныхСоединений = "";
	НастройкиОтображения.ШаблонДополнительногоРеквизита = "";
	НастройкиОтображения.ТекстДополнительныхУсловий = "";
	НастройкиОтображения.ШаблонДополнительныхУсловий = "";
	НастройкиОтображения.ШаблонДополнительногоПараметра = "";
	НастройкиОтображения.ТекстДополнительныхЗначений = "";
	НастройкиОтображения.ШаблонДополнительныхЗначений = "";
	НастройкиОтображения.ШаблонСинонимаДополнительногоЗначения = "";
	НастройкиОтображения.ДополнительныеОтборы = Новый Соответствие;
	НастройкиОтображения.ДополнительноеПредставление = Новый Массив;
	
	Возврат НастройкиОтображения;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получает данные элементов планировщика в указанном периоде.
//
// Параметры:
//  ДатаНачала - Дата - Дата начала.
//  ДатаОкончания - Дата - Дата окончания.
//  НастройкиОтображения - Структура - Настройки отображения планировщика. См. РаботаСПланировщиком.НастройкиОтображения().
// 
// Возвращаемое значение:
//  Массив из Структура - Данные элементов планировщика в указанном периоде.
//
Функция ДанныеЭлементовПланировщика(ДатаНачала, ДатаОкончания, НастройкиОтображения)
	
	ДанныеЭлементовПланировщика = Новый Массив;
	
	Запрос = Новый Запрос(НастройкиОтображения.ТекстЗапроса);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("ТекущаяДатаСеанса", ТекущаяДатаСеанса());
	
	Если НастройкиОтображения.ОтображатьПомеченныеНаУдаление Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, НастройкиОтображения.ТекстУсловияПометкаУдаления, "");
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из НастройкиОтображения.ТекстыУсловийОтборов Цикл
		
		ПараметрОтбора = КлючИЗначение.Ключ;
		ТекстОтбора = КлючИЗначение.Значение;
		ЗначениеОтбора = НастройкиОтображения.Отборы[КлючИЗначение.Ключ];
		
		Если ЗначениеЗаполнено(ЗначениеОтбора) Тогда
			Запрос.УстановитьПараметр(ПараметрОтбора, ЗначениеОтбора);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, ТекстОтбора, "");
		КонецЕсли;
		
	КонецЦикла;
	
	ДополнительныеЗначенияМассив = Новый Массив;
	ДополнительныеСоединенияМассив = Новый Массив;
	ДополнительныеУсловияМассив = Новый Массив;
	
	ПутиЗначений = Новый Соответствие;
	ОбработанныеЗначения = Новый Соответствие;
	ОбработанныеСоединения = Новый Соответствие;
	НомераДополнительныхРеквизитов = Новый Соответствие;
	Для Каждого ЭлементПредставления Из НастройкиОтображения.ДополнительноеПредставление Цикл
		
		НомерДополнительногоРеквизита = НомераДополнительныхРеквизитов[ЭлементПредставления.ДополнительныйРеквизит];
		Если НомераДополнительныхРеквизитов[ЭлементПредставления.ДополнительныйРеквизит] = Неопределено Тогда
			НомераДополнительныхРеквизитов[ЭлементПредставления.ДополнительныйРеквизит] =
				НомераДополнительныхРеквизитов.Количество() + 1;
		КонецЕсли;
		НомерДополнительногоРеквизита = НомераДополнительныхРеквизитов[ЭлементПредставления.ДополнительныйРеквизит];
		НомерРеквизитаСтрокой = Формат(НомерДополнительногоРеквизита, "ЧГ=");
		
		Если ОбработанныеЗначения[ЭлементПредставления.ДополнительныйРеквизит] = Неопределено Тогда
			ПутиЗначений[ЭлементПредставления.ДополнительныйРеквизит] = СтрШаблон(
				НастройкиОтображения.ШаблонСинонимаДополнительногоЗначения,
				НомерРеквизитаСтрокой);
			ДополнительныеЗначенияМассив.Добавить(
				СтрШаблон(
					НастройкиОтображения.ШаблонДополнительныхЗначений,
					НомерРеквизитаСтрокой));
			ОбработанныеЗначения[ЭлементПредставления.ДополнительныйРеквизит] = Истина;
			
		КонецЕсли;
		
		Если ОбработанныеСоединения[ЭлементПредставления.ДополнительныйРеквизит] = Неопределено Тогда
			ДополнительныеСоединенияМассив.Добавить(
				СтрШаблон(
					НастройкиОтображения.ШаблонДополнительныхСоединений,
					НомерРеквизитаСтрокой));
			Запрос.УстановитьПараметр(
				СтрШаблон(
					НастройкиОтображения.ШаблонДополнительногоРеквизита,
					НомерРеквизитаСтрокой),
				ЭлементПредставления.ДополнительныйРеквизит);
			ОбработанныеСоединения[ЭлементПредставления.ДополнительныйРеквизит] = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого КлючИЗначение Из НастройкиОтображения.ДополнительныеОтборы Цикл
		
		НомерДополнительногоРеквизита = НомераДополнительныхРеквизитов[КлючИЗначение.Ключ];
		Если НомераДополнительныхРеквизитов[КлючИЗначение.Ключ] = Неопределено Тогда
			НомераДополнительныхРеквизитов[КлючИЗначение.Ключ] = НомераДополнительныхРеквизитов.Количество() + 1;
		КонецЕсли;
		НомерДополнительногоРеквизита = НомераДополнительныхРеквизитов[КлючИЗначение.Ключ];
		НомерРеквизитаСтрокой = Формат(НомерДополнительногоРеквизита, "ЧГ=");
		
		Если ОбработанныеСоединения[КлючИЗначение.Ключ] = Неопределено Тогда
			ДополнительныеСоединенияМассив.Добавить(
				СтрШаблон(
					НастройкиОтображения.ШаблонДополнительныхСоединений,
					НомерРеквизитаСтрокой));
			Запрос.УстановитьПараметр(
				СтрШаблон(
					НастройкиОтображения.ШаблонДополнительногоРеквизита,
					НомерРеквизитаСтрокой),
				КлючИЗначение.Ключ);
			ОбработанныеСоединения[КлючИЗначение.Ключ] = Истина;
		КонецЕсли;
		
		ДополнительныеУсловияМассив.Добавить(
			СтрШаблон(
				НастройкиОтображения.ШаблонДополнительныхУсловий,
				НомерРеквизитаСтрокой));
		
		Запрос.УстановитьПараметр(
			СтрШаблон(
				НастройкиОтображения.ШаблонДополнительногоПараметра,
				НомерРеквизитаСтрокой),
			КлючИЗначение.Значение);
		
	КонецЦикла;
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		НастройкиОтображения.ТекстДополнительныхЗначений,
		СтрСоединить(ДополнительныеЗначенияМассив, Символы.ПС));
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		НастройкиОтображения.ТекстДополнительныхСоединений,
		СтрСоединить(ДополнительныеСоединенияМассив, Символы.ПС));
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		НастройкиОтображения.ТекстДополнительныхУсловий,
		СтрСоединить(ДополнительныеУсловияМассив, Символы.ПС));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЭлементПланировщика = Новый ЭлементПланировщика;
		ЭлементПланировщика.Начало = Выборка.ДатаНачала;
		ЭлементПланировщика.Конец = Выборка.ДатаОкончания;
		ЭлементПланировщика.ЦветТекста = ЦветаСтиля.ЦветКалендаряПодпись;
		ЭлементПланировщика.ЦветФона = ЦветФона(Выборка.Цвет);
		ЭлементПланировщика.ЦветРамки = ЦветРамки(Выборка.Цвет);
		
		ЭлементПланировщика.Значение = РаботаСПланировщикомКлиентСервер.НовыйЗначениеЭлементаПланировщика();
		ЭлементПланировщика.Значение.Ссылка = Выборка.Ссылка;
		ЭлементПланировщика.Значение.ВесьДень = Выборка.ВесьДень;
		ЭлементПланировщика.Значение.ДатаНачала = Выборка.ДатаНачала;
		ЭлементПланировщика.Значение.ДатаОкончания = Выборка.ДатаОкончания;
		
		МассивПредставление = Новый Массив;
		Для Каждого ЭлементПредставления Из НастройкиОтображения.ДополнительноеПредставление Цикл
			
			ПутьЗначения = ПутиЗначений[ЭлементПредставления.ДополнительныйРеквизит];
			Значение = Выборка[ПутьЗначения];
			Если ЭлементПредставления.ЗначениеРеквизита <> Значение Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ЭлементПредставления.Представление) Тогда
				МассивПредставление.Добавить(ЭлементПредставления.Представление);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ЭлементПредставления.ИмяКартинки)
				И Метаданные.ОбщиеКартинки.Найти(ЭлементПредставления.ИмяКартинки) <> Неопределено Тогда
				ЭлементПланировщика.Картинка = БиблиотекаКартинок[ЭлементПредставления.ИмяКартинки];
			КонецЕсли;
			
		КонецЦикла;
		
		МассивПредставление.Добавить(Выборка.Наименование);
		
		ЭлементПланировщика.Текст = СтрСоединить(МассивПредставление, ", ");
		
		Если Выборка.ПометкаУдаления Тогда
			ЭлементПланировщика.Картинка = БиблиотекаКартинок.ЗаписьКалендаряУдалена;
		КонецЕсли;
		
		ДанныеЭлементовПланировщика.Добавить(ЭлементПланировщика.Выгрузить());
		
	КонецЦикла;
	
	Возврат ДанныеЭлементовПланировщика;
	
КонецФункции

// Полностью загружает данные планировщика.
//
// Параметры:
//  Планировщик - Планировщик - Планировщик.
//  НастройкиОтображения - Структура - Настройки отображения планировщика. См. РаботаСПланировщиком.НастройкиОтображения().
//
Процедура ЗагрузитьДанныеПланировщика(Планировщик, НастройкиОтображения)
	
	Планировщик.Элементы.Очистить();
	Планировщик.ИнтервалыФона.Очистить();
	
	ПериодОтображения = РаботаСПланировщикомКлиентСервер.ПериодОтображения(НастройкиОтображения);
	Для Каждого ВыделеннаяДата Из РаботаСПланировщикомКлиентСервер.ВыделенныеДаты(НастройкиОтображения) Цикл
		
		ДатаНачала =
			РаботаСПланировщикомКлиентСервер.ДатаНачалаПериода(
				ПериодОтображения,
				ВыделеннаяДата);
		
		ДатаОкончания =
			РаботаСПланировщикомКлиентСервер.ДатаОкончанияПериода(
				ПериодОтображения,
				ВыделеннаяДата);
		
		СобытияНаДату = ДанныеЭлементовПланировщика(ДатаНачала, ДатаОкончания, НастройкиОтображения);
		
		Для Каждого Событие Из СобытияНаДату Цикл
			Элемент = Планировщик.Элементы.Добавить(Событие.Начало, Событие.Конец);
			Элемент.Загрузить(Событие);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Определяет цвет рамки по цвету фона элемента планировщика..
//
// Параметры:
//  ЦветФона - Цвет - Цвет фона элемента планировщика.
// 
// Возвращаемое значение:
//  Цвет - Цвет рамки элемента планировщика.
//
Функция ЦветРамки(ЦветПланировщика)
	
	Если ЦветПланировщика = Перечисления.ЦветаПланировщика.Желтый Тогда
		ЦветРамки = ЦветаСтиля.РамкаКалендаряЖелтая;
	ИначеЕсли ЦветПланировщика = Перечисления.ЦветаПланировщика.Зеленый Тогда
		ЦветРамки = ЦветаСтиля.РамкаКалендаряЗеленая;
	ИначеЕсли ЦветПланировщика = Перечисления.ЦветаПланировщика.Красный Тогда
		ЦветРамки = ЦветаСтиля.РамкаКалендаряКрасная;
	ИначеЕсли ЦветПланировщика = Перечисления.ЦветаПланировщика.Нет Тогда
		ЦветРамки = ЦветаСтиля.РамкаКалендаряПоУмолчанию;
	ИначеЕсли ЦветПланировщика = Перечисления.ЦветаПланировщика.Оранжевый Тогда
		ЦветРамки = ЦветаСтиля.РамкаКалендаряОранжевая;
	ИначеЕсли ЦветПланировщика = Перечисления.ЦветаПланировщика.Серый Тогда
		ЦветРамки = ЦветаСтиля.РамкаКалендаряОтработана;
	ИначеЕсли ЦветПланировщика = Перечисления.ЦветаПланировщика.Синий Тогда
		ЦветРамки = ЦветаСтиля.РамкаКалендаряСиняя;
	Иначе
		ЦветРамки = ЦветаСтиля.РамкаКалендаряПоУмолчанию;
	КонецЕсли;
	
	Возврат ЦветРамки;
	
КонецФункции

// Определяет цвет фона по цвету элемента планировщика.
//
// Параметры:
//  ЦветПланировщика - ПеречислениеСсылка.ЦветаПланировщика - Цвет элемента планировщика.
// 
// Возвращаемое значение:
//  Цвет - Цвет фона элемента планировщика.
//
Функция ЦветФона(ЦветПланировщика)
	
	Если ЦветПланировщика = Перечисления.ЦветаПланировщика.Желтый Тогда
		ЦветФона = ЦветаСтиля.ЦветКалендаряЖелтый;
	ИначеЕсли ЦветПланировщика = Перечисления.ЦветаПланировщика.Зеленый Тогда
		ЦветФона = ЦветаСтиля.ЦветКалендаряЗеленый;
	ИначеЕсли ЦветПланировщика = Перечисления.ЦветаПланировщика.Красный Тогда
		ЦветФона = ЦветаСтиля.ЦветКалендаряКрасный;
	ИначеЕсли ЦветПланировщика = Перечисления.ЦветаПланировщика.Нет Тогда
		ЦветФона = ЦветаСтиля.ЦветКалендаряПоУмолчанию;
	ИначеЕсли ЦветПланировщика = Перечисления.ЦветаПланировщика.Оранжевый Тогда
		ЦветФона = ЦветаСтиля.ЦветКалендаряОранжевый;
	ИначеЕсли ЦветПланировщика = Перечисления.ЦветаПланировщика.Серый Тогда
		ЦветФона = ЦветаСтиля.ЦветКалендаряОтработано;
	ИначеЕсли ЦветПланировщика = Перечисления.ЦветаПланировщика.Синий Тогда
		ЦветФона = ЦветаСтиля.ЦветКалендаряСиний;
	Иначе
		ЦветФона = ЦветаСтиля.ЦветКалендаряПоУмолчанию;
	КонецЕсли;
	
	Возврат ЦветФона;
	
КонецФункции

#КонецОбласти