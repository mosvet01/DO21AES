#Если НЕ ВебКлиент И Не МобильныйКлиент Тогда
	
//Выполняет вставку изображения визуализации ЭП в файл MSWord вместо тэга
//
//Параметры:
//			Объект - ссылка на объект, для которого осуществляется вставка  (Файл)
//			Тэг - строка, вместо которой будет выполняться попытка вставки изображения визуализации
//			ДвоичныеДанныеИзображения - двоичные данные изображения визуализации
//
//Возвращает:
//			Истина, если тэг в файле найден и произведена вставка изображения визуализации
//			Ложь, если изображение визуализации не было вставлено
Функция ВставитьВизуализациюЭПВместоТэга(
	ДвоичныеДанныеФайла, 
	Расширение,
	Тэг, 
	ДвоичныеДанныеИзображения,
	ЧислоПодписей = 1,
	РасположениеШтампаЭПВPdf = Неопределено
) Экспорт
	
	Результат = Ложь;
	
	WordApp = Неопределено;
	
	СисИнфо = Новый СистемнаяИнформация;
	Если (СисИнфо.ТипПлатформы = ТипПлатформы.Linux_x86 
		ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.Linux_x86_64)
		И НРег(Расширение) = "doc" Тогда
		ВызватьИсключение(НСтр("ru = 'Вставка штрихкода в файл doc возможна только в Windows. Обратитесь к администратору.'"));	
	КонецЕсли;
		
	Если Расширение = "odt" Тогда
		
	    НайденТэгШтрихкода = НайтиТэгДляВставкиКартинки(ДвоичныеДанныеФайла, Расширение, Тэг); 
		Если НайденТэгШтрихкода Тогда
			
			ВысотаКартинки = ЧислоПодписей * 30;
			ДвоичныеДанныеЗаполненногоФайла = ВизуализацияЭПOpenOfficeВызовСервера.ВставитьШтрихкодВФайлODTВместоТэга(
				ДвоичныеДанныеИзображения, ДвоичныеДанныеФайла, Тэг, ВысотаКартинки);
			Возврат ДвоичныеДанныеЗаполненногоФайла;
			
		Иначе
			
			ВысотаКартинки = ЧислоПодписей * 30;
			
			ДвоичныеДанныеЗаполненногоФайла 
				= ВизуализацияЭПOpenOfficeВызовСервера.ВставитьИзображениеЭПВФайлODTСУказаниемПоложения(
					ДвоичныеДанныеИзображения, ДвоичныеДанныеФайла, РасположениеШтампаЭПВPdf, ВысотаКартинки);
			Возврат ДвоичныеДанныеЗаполненногоФайла;	
			
		КонецЕсли;
		
	ИначеЕсли АвтозаполнениеШаблоновФайловКлиентСервер.ФорматMSWord(Расширение) Тогда	
		
		Если Расширение = "doc" Тогда
			Попытка
				СисИнфо = Новый СистемнаяИнформация;
				Если СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86 ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
					WordApp = Новый COMОбъект("Word.Application");
				КонецЕсли;
			Исключение
				ВызватьИсключение(НСтр("ru = 'Ошибка работы с приложением MS Word. Необходимо проверить правильность установки приложения.'"));
			КонецПопытки;
		КонецЕсли;
		
		НайденТэгШтрихкода = НайтиТэгДляВставкиКартинки(ДвоичныеДанныеФайла, Расширение, Тэг, WordApp); 
		Если НайденТэгШтрихкода Тогда
			Если Расширение = "doc" Тогда
				ИмяФайла = ВставитьШтрихкодВФайлMSWordВместоТэга(Расширение, 
					ДвоичныеДанныеИзображения, ДвоичныеДанныеФайла, Тэг, WordApp, РасположениеШтампаЭПВPdf);	
			  	ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ИмяФайла);
				УдалитьФайлы(ИмяФайла);
					
				Если WordApp <> Неопределено Тогда
					WordApp.Quit();
					WordApp = Неопределено;
				КонецЕсли;
				
				Возврат ДвоичныеДанныеФайла;
			ИначеЕсли Расширение = "docx" Тогда
				
				ВысотаКартинки = ЧислоПодписей * 30;
				ДвоичныеДанныеЗаполненногоФайла = ВизуализацияЭПВызовСервера.ВставитьШтрихкодВместоТэгаВФайлDocx(
					Тэг, ДвоичныеДанныеИзображения, ДвоичныеДанныеФайла, Расширение, ВысотаКартинки);	
					
				Возврат ДвоичныеДанныеЗаполненногоФайла;
					
			КонецЕсли;
		Иначе
			
			Если Расширение = "doc" Тогда
				
				ИмяФайла = ВставитьКартинкуВФайлDocСУказаниемПоложения(Расширение, ДвоичныеДанныеФайла, 
					ДвоичныеДанныеИзображения, РасположениеШтампаЭПВPdf);
					
			  	ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ИмяФайла);
				УдалитьФайлы(ИмяФайла);
					
				Если WordApp <> Неопределено Тогда
					WordApp.Quit();
					WordApp = Неопределено;
				КонецЕсли;
				
				Возврат ДвоичныеДанныеФайла;
				
			ИначеЕсли Расширение = "docx" Тогда	
				
				ВысотаКартинки = ЧислоПодписей * 30;
				
				ДвоичныеДанныеФайла = ВизуализацияЭПВызовСервера.ВставитьИзображениеЭПВФайлDocxСУказаниемПоложения(
					Расширение, "", ДвоичныеДанныеФайла, ДвоичныеДанныеИзображения, РасположениеШтампаЭПВPdf, ВысотаКартинки);
					
				Возврат ДвоичныеДанныеФайла;	
				
					
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если WordApp <> Неопределено Тогда
		WordApp.Quit();
		WordApp = Неопределено;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
	
	
Функция ВставитьШтрихкодВФайлMSWordВместоТэга(Расширение, ДвоичныеДанныеКартинки, 
	ДвоичныеДанныеФайла, Тэг, WordApp = Неопределено, РасположениеШтампаЭПВPdf = Неопределено) Экспорт
	
	ЗакрыватьПриложение = Ложь;
	Если WordApp = Неопределено Тогда 
		
		СисИнфо = Новый СистемнаяИнформация;
		Если СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86 ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
			Попытка
				WordApp = Новый COMОбъект("Word.Application");
			Исключение
				ВызватьИсключение(НСтр("ru = 'Ошибка работы с приложением MS Word. Необходимо проверить правильность установки приложения.'"));
			КонецПопытки;
		Иначе
			ВызватьИсключение(НСтр("ru = 'Вставка штрихкода в файл MS Word возможна только в Windows. Обратитесь к администратору.'"));	
		КонецЕсли;
		ЗакрыватьПриложение = Истина;
		
	КонецЕсли;

	ИмяВременногоФайлаКартинки = ПолучитьИмяВременногоФайла("JPG");
	ДвоичныеДанныеКартинки.Записать(ИмяВременногоФайлаКартинки);
	
	ИмяВременногоФайлаOffice = ПолучитьИмяВременногоФайла(Расширение);
	НовыйПутьКФайлу = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанныеФайла.Записать(ИмяВременногоФайлаOffice);
	
	Док = WordApp.Documents.Add(ИмяВременногоФайлаOffice);
	
	//Выполним поиск тэга для вставки изображения вместо него
	ВставкаСделанаПоТегу = Ложь;
    НайденТэг = WordApp.Selection.Find.Execute(Тэг);
	Если НайденТэг Тогда
		//если найден, то вместо тэга вставляется картинка
		oGraphicObject = WordApp.Selection.InlineShapes.AddPicture(ИмяВременногоФайлаКартинки);
		oGraphicObject.AlternativeText = Тэг;
		ВставкаСделанаПоТегу = Истина;
	Иначе
		//тэг не найден, проверим изображения
		Для Каждого InlineShape Из WordApp.ActiveDocument.InlineShapes Цикл
			Если InlineShape.AlternativeText = Тэг Тогда
				InlineShape.Select();
				oGraphicObject = WordApp.Selection.InlineShapes.AddPicture(ИмяВременногоФайлаКартинки);
				oGraphicObject.AlternativeText = Тэг;
				ВставкаСделанаПоТегу = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	
	Если Найти(WordApp.Build, "12.") > 0 Тогда
		Если Расширение = "docx" Тогда
			Док.SaveAs(НовыйПутьКФайлу, 12);                        
		Иначе
			Док.SaveAs(НовыйПутьКФайлу, 0);
		КонецЕсли;
	Иначе
	    Если Расширение = "docx" Тогда
			Док.SaveAs(НовыйПутьКФайлу, 109);                        
		Иначе
			Док.SaveAs(НовыйПутьКФайлу);
		КонецЕсли;
	КонецЕсли;
	
	Док.Saved = Истина;
	Док.Close();
	Если ЗакрыватьПриложение Тогда
		WordApp.Close();
		WordApp.Quit();
	КонецЕсли;
	УдалитьФайлы(ИмяВременногоФайлаКартинки);
	УдалитьФайлы(ИмяВременногоФайлаOffice);
	
	Возврат НовыйПутьКФайлу;
	
КонецФункции

//Осуществляет поиск тэга для вставки изображения штрихкода в файле MSWord или Open Office Writer
//Параметры:
//			ДвоичныеДанныеФайла - двоичные данные файла, в котором осуществляется поиск тэга
//			Расширение - расширение файла, по нему определяется, с помощью какого приложения осуществлять поиск
//			Тэг - искомый тэг
//			WordApp - COM объект приложения MS Word. Необязательный параметр.
//Возвращает:
//			Истина, если тэг найден
//			Ложь, если тэг не найден или указано неподдерживаемое расширение файла
Функция НайтиТэгДляВставкиКартинки(ДвоичныеДанныеФайла, Расширение, Тэг, WordApp = Неопределено) 
	
	НайденТэгШтрихкода = Ложь;
	
	Если Расширение = "odt" Тогда
		ВременныйФайлИмя = ПолучитьИмяВременногоФайла("odt");
		ДвоичныеДанныеФайла.Записать(ВременныйФайлИмя);
		НайденТэгШтрихкода = АвтозаполнениеШаблоновФайловКлиентСервер.НайтиДанныеВФайлеOpenOfficeWriter(ВременныйФайлИмя, Тэг, "Строка");
		УдалитьФайлы(ВременныйФайлИмя);
	ИначеЕсли АвтозаполнениеШаблоновФайловКлиентСервер.ФорматMSWord(Расширение) Тогда
		ВременныйФайлИмя = ПолучитьИмяВременногоФайла(Расширение);
		ДвоичныеДанныеФайла.Записать(ВременныйФайлИмя);
		Если Расширение = "doc" Тогда
			НайденТэгШтрихкода = АвтозаполнениеШаблоновФайловКлиентСервер.ПроверитьНаличиеСтрокиВФайлеMSWord(ВременныйФайлИмя, Тэг, WordApp);
		ИначеЕсли Расширение = "docx" Тогда
			НайденТэгШтрихкода = АвтозаполнениеШаблоновФайловКлиентСервер.ПроверитьНаличиеСтрокиВФайлеDocX(Тэг, ВременныйФайлИмя);
		КонецЕсли;
		УдалитьФайлы(ВременныйФайлИмя);	
	КонецЕсли;

	Возврат НайденТэгШтрихкода;
	
Конецфункции

Функция ВставитьКартинкуВФайлDocСУказаниемПоложения(Расширение, 
	ДвоичныеДанныеФайла, ДвоичныеДанныеКартинки, 
	ПоложениеНаСтранице)
			
	СисИнфо = Новый СистемнаяИнформация;
	Если СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86 ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		Попытка
			WordApp = Новый COMОбъект("Word.Application");
		Исключение
			ВызватьИсключение(НСтр("ru = 'Ошибка работы с приложением MS Word. Необходимо проверить правильность установки приложения.'"));
		КонецПопытки;
	Иначе
		ВызватьИсключение(НСтр("ru = 'Вставка штрихкода в файл MS Word возможна только в Windows. Обратитесь к администратору.'"));	
	КонецЕсли;
	
	ВерсияСтрока = WordApp.Build;
	МассивСтр = СтрРазделить(ВерсияСтрока, ".", Ложь);
	ВерсияЧисло = 0;
	Попытка
		ВерсияЧисло = Число(МассивСтр[0]);
	Исключение
		ВерсияЧисло = 0;
	КонецПопытки;		
	
	ИмяВременногоФайлаOffice = ПолучитьИмяВременногоФайла(Расширение);
	НовыйПутьКФайлу = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанныеФайла.Записать(ИмяВременногоФайлаOffice);
	
	ИмяВременногоФайлаКартинки = ПолучитьИмяВременногоФайла("JPG");
	ДвоичныеДанныеКартинки.Записать(ИмяВременногоФайлаКартинки);
	
	Док = WordApp.Documents.Add(ИмяВременногоФайлаOffice);
	   
	oGraphicObject = Док.Shapes.AddTextBox(1, 100, 100, 300, 150);
	
	//устанавливаем привязку положения к печатной области
	oGraphicObject.RelativeHorizontalPosition = 0;
	oGraphicObject.RelativeVerticalPosition = 0;  
	
	Если ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.ВариантыПечатиШтампаЭП.ПравыйНижний") Тогда
		СмещениеПоГоризонтали = "MAX";
		СмещениеПоВертикали = "MAX";
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.ВариантыПечатиШтампаЭП.ПравыйВерхний") Тогда
		СмещениеПоГоризонтали = "MAX";
		СмещениеПоВертикали = "MIN";
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.ВариантыПечатиШтампаЭП.ЛевыйВерхний") Тогда
		СмещениеПоГоризонтали = "MIN";
		СмещениеПоВертикали = "MIN";
	ИначеЕсли ПоложениеНаСтранице = ПредопределенноеЗначение("Перечисление.ВариантыПечатиШтампаЭП.ЛевыйНижний") Тогда
		СмещениеПоГоризонтали = "MIN";
		СмещениеПоВертикали = "MAX";
	КонецЕсли;
	
	Если СмещениеПоГоризонтали = "MAX" Тогда
		//выравнивание к правому краю
		oGraphicObject.Left = -999996;
	ИначеЕсли СмещениеПоГоризонтали = "MIN" Тогда
		//выравнивание к левому краю
		oGraphicObject.left = -999998;
	//Иначе
	//	//если задано произвольное расположение, то переведем смещение по горизонтали из миллиметров в point'ы
	//	//1 point = 1/72"
	//	oGraphicObject.RelativeHorizontalPosition = 1;
	//	Если НЕ ЗначениеЗаполнено(ДанныеОПоложении.СмещениеПоГоризонтали) Тогда
	//		ДанныеОПоложении.СмещениеПоГоризонтали = 0;
	//	КонецЕсли;
	//	oGraphicObject.left = (ДанныеОПоложении.СмещениеПоГоризонтали / 25.4) * 72;
	КонецЕсли;
	
	Если СмещениеПоВертикали = "MAX" Тогда
		//выравнивание по нижнему краю
		oGraphicObject.Top = -999997;
	ИначеЕсли СмещениеПоВертикали = "MIN" Тогда
		//выравнивание по верхнему краю
		oGraphicObject.Top = -999999;
	//Иначе
	//	//если задано произвольное расположение, то переведем смещение по горизонтали из миллиметров в point'ы
	//	oGraphicObject.RelativeVerticalPosition = 1;
	//	Если НЕ ЗначениеЗаполнено(ДанныеОПоложении.СмещениеПоВертикали) Тогда
	//		ДанныеОПоложении.СмещениеПоВертикали = 0;
	//	КонецЕсли;
	//	oGraphicObject.Top =(ДанныеОПоложении.СмещениеПоВертикали / 25.4) * 72;
	КонецЕсли;  

	oGraphicObject.Select();

	WordApp.Selection.ShapeRange.Line.Visible = Ложь;
	
	//WordApp.Selection.InlineShapes.AddPicture(ИмяВременногоФайлаКартинки);
	Если ВерсияЧисло < 12 Тогда  // ниже word 2007 - т.е. 2003 и ниже
	
		WordApp.Selection.InlineShapes.AddPicture(ИмяВременногоФайлаКартинки);
	
	Иначе	
	
	    range = WordApp.Selection.Range;
        КартинкаWord = WordApp.Selection.InlineShapes.AddPicture(
			ИмяВременногоФайлаКартинки, False, True, range);
			
	КонецЕсли;	
	
	WordApp.Selection.ShapeRange.TextFrame.AutoSize = Истина;
	WordApp.Selection.ShapeRange.Fill.Visible = Ложь;
	WordApp.Selection.Font.Bold = Истина;
	
	//Если СмещениеПоГоризонтали = "MAX" ИЛИ СмещениеПоГоризонтали = "MIN" Тогда 
	//	oGraphicObject.ConvertToFrame();		
	//КонецЕсли;
	
	Если Найти(WordApp.Build, "12.") > 0 Тогда
		Если Расширение = "docx" Тогда
			Док.SaveAs(НовыйПутьКФайлу, 12);                        
		Иначе
			Док.SaveAs(НовыйПутьКФайлу, 0);
		КонецЕсли;
	Иначе
	    Если Расширение = "docx" Тогда
			Док.SaveAs(НовыйПутьКФайлу, 109);                        
		Иначе
			Док.SaveAs(НовыйПутьКФайлу);
		КонецЕсли;
	КонецЕсли;
	Док.Saved = Истина;	
	Док.Close(); 
	WordApp.Quit();
	WordApp = Неопределено;
	
	УдалитьФайлы(ИмяВременногоФайлаOffice);
	
	Возврат НовыйПутьКФайлу;
	
КонецФункции

#КонецЕсли
