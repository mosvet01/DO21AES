#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДокументРезультат.Очистить();
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	// Заполнение программных представлений состояний.
	ГруппыСостоянийПредставления = Перечисления.СостоянияЭДОДокументооборот.ГруппыСостоянийПредставления();
	ТекстВыборкиПредставленийСостояний = Новый Массив;
	ТекстВыборкиПредставленийСостояний.Добавить("ПОМЕСТИТЬ ПредставленияСостоянийЭДО");
	Для Каждого Эл Из Перечисления.СостоянияЭДОДокументооборот.СписокПредставлений(Истина, Ложь, Истина) Цикл
		ТекстВыборкиПредставленийСостояний.Добавить(СтрШаблон(
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(%1),
			|	ЗНАЧЕНИЕ(%2),
			|	""%3"",
			|	""%4"",
			|	""%5""",
			ПолучитьПолноеИмяПредопределенногоЗначения(Эл.Значение.Значение),
			ПолучитьПолноеИмяПредопределенногоЗначения(Эл.Значение.Направление),
			Эл.Значение.Группа,
			Эл.Представление, ""));
		
		Если Эл.Значение.Значение = Перечисления.СостоянияЭДОДокументооборот.НеСформирован
			И Эл.Значение.Направление = Перечисления.НаправленияЭДО.Исходящий Тогда
			Настройки.ПараметрыДанных.УстановитьЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПредставлениеСостояниеЭДОНеНачатоОрганизация"), "");
		КонецЕсли;
	КонецЦикла;
	СхемаКомпоновкиДанных.НаборыДанных[0].Запрос = СтрЗаменить(СхемаКомпоновкиДанных.НаборыДанных[0].Запрос,
		"ПОМЕСТИТЬ ПредставленияСостоянийЭДО",
		СтрСоединить(ТекстВыборкиПредставленийСостояний, "
		|ОБЪЕДИНИТЬ ВСЕ
		|"));
		
	// Заполнение отборов по представлениям состояний.
	ВсеЗначенияСостояний = Новый Массив;
	ЕстьЗначенияСостоянийНеРавно = Ложь;
	Отборы = Новый Массив;
	Отборы.Добавить(Настройки.Отбор.Элементы);
	Пока Отборы.Количество() Цикл
		Для Каждого Поле Из Отборы.Получить(0) Цикл
			
			Если Не Поле.Использование Или Поле.ИдентификаторПользовательскойНастройки = "&Обработано" Тогда
			ИначеЕсли ТипЗнч(Поле) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
				Отборы.Добавить(Поле.Элементы);
				
			ИначеЕсли Поле.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СостояниеЭДОПредставлениеОрганизация")
				Или Поле.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СостояниеЭДОПредставлениеКонтрагент") Тогда
				
				ЭтоРавенство = Поле.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно
							Или Поле.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
				
				Если Не ЭтоРавенство Тогда
					ЕстьЗначенияСостоянийНеРавно = Истина;
				КонецЕсли;
				
				// Отбор по значениям групп состояний переносим на свое поле.
				Если ТипЗнч(Поле.ПравоеЗначение) = Тип("СписокЗначений") Тогда
					
					Если ЭтоРавенство Тогда
						Для Каждого Эл Из Перечисления.СостоянияЭДОДокументооборот.ЗначенияПоПредсталению(Поле.ПравоеЗначение, Истина) Цикл
							Если ВсеЗначенияСостояний.Найти(Эл.Значение) = Неопределено Тогда
								ВсеЗначенияСостояний.Добавить(Эл.Значение);
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					
					ГруппыСостояний = Перечисления.СостоянияЭДОДокументооборот.ГруппыСостоянийЗначения();
					ГруппаОтборов = Неопределено;
					Корзина = Новый массив;
					Для Каждого Эл Из Поле.ПравоеЗначение Цикл
						ВГруппе = ГруппыСостояний.Получить(Эл.Значение);
						Если ВГруппе <> Неопределено Тогда
							Если ГруппаОтборов = Неопределено Тогда
								ГруппаОтборов = Отборы.Получить(0).Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
								ГруппаОтборов.ТипГруппы = ?(ЭтоРавенство, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
								ГруппаОтборов.ИдентификаторПользовательскойНастройки = "&Обработано";
							КонецЕсли;
							НПоле = ГруппаОтборов.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
							НПоле.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СостояниеЭДОГруппа");
							НПоле.ВидСравнения = ?(ЭтоРавенство, ВидСравненияКомпоновкиДанных.Равно, ВидСравненияКомпоновкиДанных.НеРавно);
							НПоле.ПравоеЗначение = Эл.Значение;
							Корзина.Добавить(Эл);
						КонецЕсли;
					КонецЦикла;
					Если ГруппаОтборов <> Неопределено Тогда
						Если Корзина.Количество() = Поле.ПравоеЗначение.Количество() Тогда
							ГруппаОтборов.Использование = Ложь;
							Поле.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СостояниеЭДОГруппа");
						Иначе
							Для Каждого Эл Из Корзина Цикл
								Поле.ПравоеЗначение.Удалить(Эл);
							КонецЦикла;
							ЗаполнитьЗначенияСвойств(ГруппаОтборов.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")), Поле);
							Поле.Использование = Ложь;
						КонецЕсли;
					КонецЕсли;
					
				Иначе
					
					ВГруппе = Перечисления.СостоянияЭДОДокументооборот.ГруппыСостоянийЗначения().Получить(Поле.ПравоеЗначение);
					Если ВГруппе <> Неопределено Тогда
						Поле.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СостояниеЭДОГруппа");
						Если ЭтоРавенство Тогда
							Для Каждого Эл Из ВГруппе Цикл
								Если ВсеЗначенияСостояний.Найти(Эл) = Неопределено Тогда
									ВсеЗначенияСостояний.Добавить(Эл);
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
						
					ИначеЕсли ЭтоРавенство Тогда
						Эл = Перечисления.СостоянияЭДОДокументооборот.ЗначенияПоПредсталению(Поле.ПравоеЗначение, Истина);
						Если ВсеЗначенияСостояний.Найти(Эл) = Неопределено Тогда
							ВсеЗначенияСостояний.Добавить(Эл);
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Отборы.Удалить(0);
	КонецЦикла;
	
	Если ЕстьЗначенияСостоянийНеРавно
		Или ВсеЗначенияСостояний.Количество() = 0
		Или ВсеЗначенияСостояний.Найти(Перечисления.СостоянияЭДОДокументооборот.НеСформирован) <> Неопределено И ВсеЗначенияСостояний.Количество() > 1 Тогда
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтборДокументыЭДО"), Истина);		
		
	ИначеЕсли ВсеЗначенияСостояний.Найти(Перечисления.СостоянияЭДОДокументооборот.НеСформирован) <> Неопределено
		И ВсеЗначенияСостояний.Количество() = 1 Тогда
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтборДокументыЭДОНеНачато"), Истина);
		
	Иначе
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтборСостояниеЭДО"), ВсеЗначенияСостояний);
	КонецЕсли;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);

	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ОбщегоНазначенияДокументооборот.УстановитьЦветаДиаграмм(ДокументРезультат);

КонецПроцедуры

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли