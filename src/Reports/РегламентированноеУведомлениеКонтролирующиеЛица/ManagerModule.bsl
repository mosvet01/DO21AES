#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2019_1";
	Стр.КНД = "1150085";
	Стр.ВерсияФормата = "5.01";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеКонтролирующиеЛица.Форма.ФормаОтчета";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2017_1";
	Стр.ОписаниеФормы = "Форма в соответствии с письмом ФНС России от 28.12.2018 № СД-4-3/25909@ (рекомендованная форма)";
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2019_1";
	Стр.ОписаниеФормы = "Форма в соответствии с приказом ФНС России от 05.06.2019 № ММВ-7-3/279@";
	Стр.ДатаНачала = Дата('20200101');
	
	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2019_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2019_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2019_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2017_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2019_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2019_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2019_1" Тогда 
		Данные = Объект.ДанныеУведомления.Получить();
		Данные.Вставить("ПодписантФамилия", Объект.ПодписантФамилия);
		Данные.Вставить("ПодписантИмя", Объект.ПодписантИмя);
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2019_1(Данные, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2019_1(СведенияОтправки)
	Префикс = "UT_SVKLMK";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Процедура Проверить_Форма2019_1(Данные, УникальныйИдентификатор)
	Титульная = Данные.ДанныеУведомления.Титульная;
	
	Если (Не ЗначениеЗаполнено(Титульная.НалПер))
		Или (Не ЗначениеЗаполнено(Титульная.ПрНП)) Тогда 
		
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан налоговый период и/или код налогоплательщика на титульной странице", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
		
	Ошибок = 0;
	ЛистыАБ = 0;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистА Цикл 
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда 
			ЛистыАБ = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистБ Цикл 
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда 
			ЛистыАБ = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЛистыАБ = 0 Тогда 
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Отсутствует Лист А и Лист Б", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистА Цикл 
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда
			СтрОписание = "ИО-"+Формат(Лист.Значение.НомерКИКЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
			
			Если Не ЗначениеЗаполнено(Лист.Значение.ДоляПрямУч)
				И Не ЗначениеЗаполнено(Лист.Значение.ДоляКосУч) Тогда 
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 2.2 или 2.3 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
		
			Если (Не ЗначениеЗаполнено(Лист.Значение.Код101)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код102))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код103)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код104))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код105)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 101-105 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.Код201)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код202))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код203)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код204))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код205)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 201-205 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Лист.Значение.ПрСамПризн) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнен пункт 1.3 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.НаимОрг)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимОргЛат)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 1-2 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
		КонецЕсли;
			
		Если Ошибок > 3 Тогда
			ВызватьИсключение "";
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистБ Цикл
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда
			СтрОписание = "ИС-"+Формат(Лист.Значение.НомерКИКЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.Код106)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код107))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код108)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код109))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код110)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код111))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код112)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 106-112 на листе Б/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Лист.Значение.ПрСамПризн) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнен пункт 3 на листе Б/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(Лист.Значение.НаимОрг)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимОргЛат))
				Или (Не ЗначениеЗаполнено(Лист.Значение.НаимДокУчр)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимДокУчрЛат))
				Или (Не ЗначениеЗаполнено(Лист.Значение.ДатаУчрИСДата)) Или (Не ЗначениеЗаполнено(Лист.Значение.СтрРег)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 2-6 на листе Б/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистВ Цикл
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИК) Тогда 
			СтрОписание = Лист.Значение.НомерКИК;
			
			Если Лист.Значение.ПорОпрПрКИК = "1" И Не ЗначениеЗаполнено(Лист.Значение.ДатаПослДнПерДата) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункт 3 на листе В при значении п.2 = 1/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если Лист.Значение.ПорОпрПрКИК = "1" И Не ЗначениеЗаполнено(Лист.Значение.ДатаСостФОДата) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункт 4 на листе В при значении п.2 = 1/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если Лист.Значение.ПорОпрПрКИК = "2" И Не ЗначениеЗаполнено(Лист.Значение.ДатаПослДнПерГл25Дата) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункт 5 на листе В при значении п.2 = 2/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(Лист.Значение.Код1001)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код1002))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код1003)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код1004))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код1005)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код1006))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код1007)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код1008)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 1001-1008 на листе В/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(Лист.Значение.ПорОпрПрКИК)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункт 2 на листе В/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистГ1 Цикл
		Если ЗначениеЗаполнено(Лист.Значение.НомерРосОрг) Тогда 
			СтрОписание = "РО-"+Формат(Лист.Значение.НомерРосОрг, "ЧЦ=5; ЧВН=; ЧГ=");
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.ОГРН)) Или (Не ЗначениеЗаполнено(Лист.Значение.ИННЮЛ))
				Или (Не ЗначениеЗаполнено(Лист.Значение.КПП)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимОрг)) Тогда 
			
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены обязательные пункты 2-5 на листе Г-1/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистГ2 Цикл
		Если ЗначениеЗаполнено(Лист.Значение.НомерИО) Тогда 
			СтрОписание = "ИО-"+Формат(Лист.Значение.НомерИО, "ЧЦ=5; ЧВН=; ЧГ=");
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.НаимОрг)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимОргЛат))
				Или (Не ЗначениеЗаполнено(Лист.Значение.СтрРег)) Тогда 
			
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены обязательные пункты 1-3 на листе Г-2/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр Цикл 
		Если ЗначениеЗаполнено(Стр.НомерУч) И Не (ЗначениеЗаполнено(Стр.ДоляУчКосв) Или ЗначениеЗаполнено(Стр.ДоляУчПрям)) Тогда 
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("В свободных строках листа Г должен быть заполнен пункт 3.2 или  3.3", УникальныйИдентификатор);
			Ошибок = Ошибок + 1;
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Ошибок > 0 Тогда
		ВызватьИсключение "";
	КонецЕсли;
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2019_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура;
	ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Ложь);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПЮЛ(Объект, ОсновныеСведения);
	
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.ДатаПодписи, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("ФамилияПодп", Объект.ПодписантФамилия);
	ОсновныеСведения.Вставить("ИмяПодп", Объект.ПодписантИмя);
	ОсновныеСведения.Вставить("ОтчествоПодп", Объект.ПодписантОтчество);
	ОсновныеСведения.Вставить("НаимДок", Объект.ПодписантДокумент);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("КодНО", Данные.ДанныеУведомления.Титульная.КодНО);
	ОсновныеСведения.Вставить("ПрПодп", Данные.ДанныеУведомления.Титульная.ПРИЗНАК_НП_ПОДВАЛ);
	ОсновныеСведения.Вставить("ИННТитул", Данные.ДанныеУведомления.Титульная.ИНН);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2019_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2019_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДанныеУведомления.Вставить("ПодписантФамилия", Объект.ПодписантФамилия);
	ДанныеУведомления.Вставить("ПодписантИмя", Объект.ПодписантИмя);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2019_1(ДанныеУведомления, УникальныйИдентификатор);
	Если Ошибки.Количество() > 0 Тогда 
		Если ДанныеУведомления.Свойство("РазрешитьВыгружатьСОшибками") И ДанныеУведомления.РазрешитьВыгружатьСОшибками = Ложь Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""", Объект.Ссылка);
			ВызватьИсключение "";
		Иначе 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""", Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2019_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2019_1");
	ЗаполнитьДанными_Форма2019_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2019_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры(ДанныеУведомления);
	ЗаполнитьДаннымиУзелНов(ДанныеУведомления, ДеревоВыгрузки);
КонецПроцедуры

Функция СтраницаЗаполнена(Данные)
	Если ТипЗнч(Данные) = Тип("Структура") Тогда 
		Для Каждого КЗ Из Данные Цикл 
			Если ТипЗнч(КЗ.Значение) = Тип("УникальныйИдентификатор") Тогда 
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(КЗ.Значение) Тогда 
				Возврат Истина
			КонецЕсли;
		КонецЦикла;
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

Процедура ДополнитьПараметры_ЛистБВ(Параметры, СтруктураВыгрузки, НомерУчПосл)
	ОТЧ = Новый ОписаниеТипов("Число");
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистБ Цикл
		ПарамСтр = Стр.Значение;
		Если ПарамСтр.НомерКонтрЛиц <> НомерУчПосл Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого КЗ Из ПарамСтр Цикл 
			Если ЗначениеЗаполнено(КЗ.Значение) И Не СтруктураВыгрузки.Свойство(КЗ.Ключ + "_Б") Тогда 
				СтруктураВыгрузки.Вставить(КЗ.Ключ + "_Б", КЗ.Значение);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Элт Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ДоляПрямУч;ДоляКосУч;ДоляСмешУч;ДоляУчСупДет", ";") Цикл
			Если Не ЗначениеЗаполнено(ПарамСтр[Элт]) И Не СтруктураВыгрузки.Свойство(Элт + "_Б") Тогда
				СтруктураВыгрузки.Вставить(Элт + "_Б", 0);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	НомераПоследовательностейУчастия = Новый Соответствие;
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистВ Цикл
		ПарамСтр = Стр.Значение;
		Если ПарамСтр.НомерКонтрЛиц <> НомерУчПосл Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого КЗ Из ПарамСтр Цикл 
			Если ЗначениеЗаполнено(КЗ.Значение) И Не СтруктураВыгрузки.Свойство(КЗ.Ключ + "_В") Тогда 
				СтруктураВыгрузки.Вставить(КЗ.Ключ + "_В", КЗ.Значение);
			КонецЕсли;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ПарамСтр["НомерПосл"]) Тогда 
			НомераПоследовательностейУчастия.Вставить(ПарамСтр["НомерПосл"]);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого КЗ Из НомераПоследовательностейУчастия Цикл 
		НомерПосл = КЗ.Ключ;
		Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистВ Цикл
			ПарамСтр = Стр.Значение;
			Если ПарамСтр.НомерКонтрЛиц <> НомерУчПосл Или ПарамСтр.НомерПосл <> НомерПосл Тогда
				Продолжить;
			КонецЕсли;
			
			Структура_ЛистВ = Новый Структура("УИД, УИДРодителя", Новый УникальныйИдентификатор, СтруктураВыгрузки.УИД);
			Структура_ЛистВ.Вставить("НомерПосл", Прав("00000" + НомерПосл, 5));
			Структура_ЛистВ.Вставить("ДоляКосвПослИт", ПарамСтр.ДоляКосвПослИт);
			Параметры.ДанныеМногостраничныхРазделов.ИтоговаяСтруктураВыгрузки_ЛистВ.Добавить(Структура_ЛистВ);
			
			НомераЛистовГ = Новый Соответствие;
			Для Каждого МнгСтр Из Параметры.ДанныеДопСтрокБД.МнгСтр Цикл 
				Если МнгСтр.УИД <> ПарамСтр.УИД Тогда 
					Продолжить;
				КонецЕсли;
				
				Структура_ЛистВ_Детализация = Новый Структура("УИД, УИДРодителя", Новый УникальныйИдентификатор, Структура_ЛистВ.УИД);
				Структура_ЛистВ_Детализация.Вставить("НомерУчПосл", МнгСтр.НомерУч);
				Структура_ЛистВ_Детализация.Вставить("ДоляУчПрям", МнгСтр.ДоляУчПрям);
				Структура_ЛистВ_Детализация.Вставить("ДоляУчКосв", МнгСтр.ДоляУчКосв);
				Параметры.ДанныеМногостраничныхРазделов.ИтоговаяСтруктураВыгрузки_ЛистВ_Детализация.Добавить(Структура_ЛистВ_Детализация);
				
				Если ЗначениеЗаполнено(МнгСтр.НомерУч) Тогда 
					НомераЛистовГ.Вставить(МнгСтр.НомерУч, 1);
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрГ Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ1 Цикл
				ЛистГ1 = СтрГ.Значение;
				НомУч = "УИ-" + Формат(ЛистГ1.НомерУчПослЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
				Если ЛистГ1.УИДРодителя <> ПарамСтр.УИД
					Или ОТЧ.ПривестиЗначение(ЛистГ1.НомерПосл) <> ОТЧ.ПривестиЗначение(НомерПосл) 
					Или Не ЗначениеЗаполнено(НомераЛистовГ[НомУч]) Тогда 
					Продолжить;
				КонецЕсли;
				
				Структура_ЛистГ = Новый Структура("УИД, УИДРодителя", Новый УникальныйИдентификатор, Структура_ЛистВ.УИД);
				Для Каждого КЗ Из ЛистГ1 Цикл 
					Если ЗначениеЗаполнено(КЗ.Значение) И Не Структура_ЛистГ.Свойство(КЗ.Ключ) Тогда 
						Структура_ЛистГ.Вставить(КЗ.Ключ, КЗ.Значение);
					КонецЕсли;
				КонецЦикла;
				Структура_ЛистГ.Вставить("НомерУчПосл", НомУч);
				Структура_ЛистГ.НомерПосл = Формат(ЛистГ1.НомерПосл, "ЧЦ=5; ЧВН=; ЧГ=");
				Параметры.ДанныеМногостраничныхРазделов.ИтоговаяСтруктураВыгрузки_ЛистГ1.Добавить(Структура_ЛистГ);
			КонецЦикла;
			Для Каждого СтрГ Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ2 Цикл
				ЛистГ2 = СтрГ.Значение;
				НомУч = "УР-" + Формат(ЛистГ2.НомерУчПослЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
				Если ЛистГ2.УИДРодителя <> ПарамСтр.УИД
					Или ОТЧ.ПривестиЗначение(ЛистГ2.НомерПосл) <> ОТЧ.ПривестиЗначение(НомерПосл) 
					Или Не ЗначениеЗаполнено(НомераЛистовГ[НомУч]) Тогда 
					Продолжить;
				КонецЕсли;
				
				Структура_ЛистГ = Новый Структура("УИД, УИДРодителя", Новый УникальныйИдентификатор, Структура_ЛистВ.УИД);
				Для Каждого КЗ Из ЛистГ2 Цикл 
					Если ЗначениеЗаполнено(КЗ.Значение) И Не Структура_ЛистГ.Свойство(КЗ.Ключ) Тогда 
						Структура_ЛистГ.Вставить(КЗ.Ключ, КЗ.Значение);
					КонецЕсли;
				КонецЦикла;
				Структура_ЛистГ.Вставить("НомерУчПосл", НомУч);
				Структура_ЛистГ.НомерПосл = Формат(ЛистГ2.НомерПосл, "ЧЦ=5; ЧВН=; ЧГ=");
				Параметры.ДанныеМногостраничныхРазделов.ИтоговаяСтруктураВыгрузки_ЛистГ2.Добавить(Структура_ЛистГ);
			КонецЦикла;
			Для Каждого СтрГ Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ3 Цикл
				ЛистГ3 = СтрГ.Значение;
				НомУч = "УС-" + Формат(ЛистГ3.НомерУчПослЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
				Если ЛистГ3.УИДРодителя <> ПарамСтр.УИД
					Или ОТЧ.ПривестиЗначение(ЛистГ3.НомерПосл) <> ОТЧ.ПривестиЗначение(НомерПосл) 
					Или Не ЗначениеЗаполнено(НомераЛистовГ[НомУч]) Тогда 
					Продолжить;
				КонецЕсли;
				
				Структура_ЛистГ = Новый Структура("УИД, УИДРодителя", Новый УникальныйИдентификатор, Структура_ЛистВ.УИД);
				Для Каждого КЗ Из ЛистГ3 Цикл 
					Если ЗначениеЗаполнено(КЗ.Значение) И Не Структура_ЛистГ.Свойство(КЗ.Ключ) Тогда 
						Структура_ЛистГ.Вставить(КЗ.Ключ, КЗ.Значение);
					КонецЕсли;
				КонецЦикла;
				Структура_ЛистГ.Вставить("НомерУчПосл", НомУч);
				Структура_ЛистГ.НомерПосл = Формат(ЛистГ3.НомерПосл, "ЧЦ=5; ЧВН=; ЧГ=");
				Параметры.ДанныеМногостраничныхРазделов.ИтоговаяСтруктураВыгрузки_ЛистГ3.Добавить(Структура_ЛистГ);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ДополнитьПараметры(Параметры)
	Если Не ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.НомерКорректировки) Тогда 
		Параметры.ДанныеУведомления.Титульная.НомерКорректировки = "0";
	КонецЕсли;
	
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ИтоговаяСтруктураВыгрузки_ЛистВ", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ИтоговаяСтруктураВыгрузки_ЛистВ_Детализация", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ИтоговаяСтруктураВыгрузки_ЛистГ1", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ИтоговаяСтруктураВыгрузки_ЛистГ2", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ИтоговаяСтруктураВыгрузки_ЛистГ3", Новый СписокЗначений);
	
	ЛистыРазделаА = Новый Соответствие;
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистАРаздел1 Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) И ЗначениеЗаполнено(ПарамСтр.НомерКонтрЛицЧисло) Тогда
			НомерУчПосл = "ИО-" + Формат(ПарамСтр.НомерКонтрЛицЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
			Если ЛистыРазделаА[НомерУчПосл] <> Неопределено Тогда 
				Продолжить;
			КонецЕсли;
			
			СтруктураВыгрузки = Новый Структура("УИД, НомерУчПосл_А1", Новый УникальныйИдентификатор, НомерУчПосл);
			Для Каждого КЗ Из ПарамСтр Цикл 
				Если ЗначениеЗаполнено(КЗ.Значение) И Не СтруктураВыгрузки.Свойство(КЗ.Ключ) Тогда 
					СтруктураВыгрузки.Вставить(КЗ.Ключ + "_А1", КЗ.Значение);
				КонецЕсли;
			КонецЦикла;
			ЛистыРазделаА[НомерУчПосл] = СтруктураВыгрузки;
			ДополнитьПараметры_ЛистБВ(Параметры, СтруктураВыгрузки, НомерУчПосл);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистАРаздел2 Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) И ЗначениеЗаполнено(ПарамСтр.НомерРосОргЧисло) Тогда
			НомерУчПосл = "РО-" + Формат(ПарамСтр.НомерРосОргЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
			Если ЛистыРазделаА[НомерУчПосл] <> Неопределено Тогда 
				Продолжить;
			КонецЕсли;
			
			СтруктураВыгрузки = Новый Структура("УИД, НомерУчПосл_А2", Новый УникальныйИдентификатор, НомерУчПосл);
			Для Каждого КЗ Из ПарамСтр Цикл 
				Если ЗначениеЗаполнено(КЗ.Значение) И Не СтруктураВыгрузки.Свойство(КЗ.Ключ) Тогда 
					СтруктураВыгрузки.Вставить(КЗ.Ключ + "_А2", КЗ.Значение);
				КонецЕсли;
			КонецЦикла;
			ЛистыРазделаА[НомерУчПосл] = СтруктураВыгрузки;
			ДополнитьПараметры_ЛистБВ(Параметры, СтруктураВыгрузки, НомерУчПосл);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистАРаздел3 Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) И ЗначениеЗаполнено(ПарамСтр.НомерКонтрФЛицЧисло) Тогда
			НомерУчПосл = "ФЛ-" + Формат(ПарамСтр.НомерКонтрФЛицЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
			Если ЛистыРазделаА[НомерУчПосл] <> Неопределено Тогда 
				Продолжить;
			КонецЕсли;
			
			СтруктураВыгрузки = Новый Структура("УИД, НомерУчПосл_А3", Новый УникальныйИдентификатор, НомерУчПосл);
			Для Каждого КЗ Из ПарамСтр Цикл 
				Если ЗначениеЗаполнено(КЗ.Значение) И Не СтруктураВыгрузки.Свойство(КЗ.Ключ) Тогда 
					СтруктураВыгрузки.Вставить(КЗ.Ключ + "_А3", КЗ.Значение);
				КонецЕсли;
			КонецЦикла;
			ЛистыРазделаА[НомерУчПосл] = СтруктураВыгрузки;
			ДополнитьПараметры_ЛистБВ(Параметры, СтруктураВыгрузки, НомерУчПосл);
		КонецЕсли;
	КонецЦикла;
	
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ИтоговаяСтруктураВыгрузки", Новый СписокЗначений);
	Для Каждого КЗ Из ЛистыРазделаА Цикл
		Параметры.ДанныеМногостраничныхРазделов.ИтоговаяСтруктураВыгрузки.Добавить(КЗ.Значение);
	КонецЦикла;
	Возврат;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ1 Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("НомерУчПосл", "УИ-" + Формат(ПарамСтр.НомерУчПослЧисло, "ЧЦ=5; ЧВН=; ЧГ="));
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ2 Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("НомерУчПосл", "УР-" + Формат(ПарамСтр.НомерУчПослЧисло, "ЧЦ=5; ЧВН=; ЧГ="));
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ3 Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("НомерУчПосл", "УФ-" + Формат(ПарамСтр.НомерУчПослЧисло, "ЧЦ=5; ЧВН=; ЧГ="));
		КонецЕсли;
	КонецЦикла;
	
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ЛистАДляВыгрузки", Новый СписокЗначений);
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистАРаздел1 Цикл
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.НомерКонтрЛицЧисло) Тогда
			ПарамСтр.Вставить("НомерКонтрЛиц", "ИО-" + Формат(ПарамСтр.НомерКонтрЛицЧисло, "ЧЦ=5; ЧВН=; ЧГ="));
			ПарамСтр.Вставить("А1_НаимОрг", ПарамСтр.НаимОрг);
			Параметры.ДанныеМногостраничныхРазделов.ЛистАДляВыгрузки.Добавить(ПарамСтр);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистАРаздел2 Цикл
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.НомерРосОргЧисло) Тогда
			ПарамСтр.Вставить("НомерРосОрг", "РО-" + Формат(ПарамСтр.НомерРосОргЧисло, "ЧЦ=5; ЧВН=; ЧГ="));
			ПарамСтр.Вставить("А2_НаимОрг", ПарамСтр.НаимОрг);
			Параметры.ДанныеМногостраничныхРазделов.ЛистАДляВыгрузки.Добавить(ПарамСтр);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистАРаздел3 Цикл
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.НомерКонтрФЛицЧисло) Тогда
			ПарамСтр.Вставить("НомерКонтрФЛиц", "ФЛ-" + Формат(ПарамСтр.НомерКонтрФЛицЧисло, "ЧЦ=5; ЧВН=; ЧГ="));
			Параметры.ДанныеМногостраничныхРазделов.ЛистАДляВыгрузки.Добавить(ПарамСтр);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Узел, ПараметрыТекущейСтраницы = Неопределено, УИДРодителя = Неопределено)
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		Если Стр.Тип = "А" Или Стр.Тип = "A" Или Стр.Тип = "П" Тогда
			Если ЗначениеЗаполнено(Стр.Ключ) Тогда
				ЗначениеПоказателя = Неопределено;
				Если ПараметрыТекущейСтраницы <> Неопределено И ПараметрыТекущейСтраницы.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда 
					Если ЗначениеПоказателя = Неопределено И (Стр.Обязательность = "О" Или Стр.Обязательность = "O") И Стр.Формат = "N" Тогда 
						ЗначениеПоказателя = 0;
					КонецЕсли;
					РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
				ИначеЕсли ПараметрыТекущейСтраницы = Неопределено 
					И ЗначениеЗаполнено(Стр.Раздел)
					И ПараметрыВыгрузки.ДанныеУведомления.Свойство(Стр.Раздел, ЗначениеПоказателя) Тогда 
					Если ЗначениеПоказателя.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда
						Если ЗначениеПоказателя = Неопределено И (Стр.Обязательность = "О" Или Стр.Обязательность = "O") И Стр.Формат = "N" Тогда 
							ЗначениеПоказателя = 0;
						КонецЕсли;
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда
			Если Стр.Многостраничность = Истина Тогда
				Многостраничность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеМногостраничныхРазделов.Свойство(Стр.Раздел, Многостраничность)
					И ТипЗнч(Многостраничность) = Тип("СписокЗначений") Тогда
				
					Для Каждого СтрМнгч Из Многостраничность Цикл 
						Если УИДРодителя = Неопределено Или СтрМнгч.Значение.УИДРодителя = УИДРодителя Тогда 
							НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
							ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, НовУзел, СтрМнгч.Значение, СтрМнгч.Значение.УИД);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			ИначеЕсли Стр.Многострочность = Истина Тогда
				Для Каждого МнгСтрока Из ПараметрыВыгрузки.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", УИДРодителя)) Цикл
					НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
					ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, НовУзел, ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(МнгСтрока));
				КонецЦикла;
			Иначе
				ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Стр, ПараметрыТекущейСтраницы, УИДРодителя)
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ВывестиЧислоНаПечать(Число, ПрефиксПараметра, ОбластиМакета) Экспорт
	Инд = 1;
	ИмяПараметра = ПрефиксПараметра + "_1";
	Область = ОбластиМакета.Найти(ИмяПараметра);
	ЗнаковПослеЗапятой = 0;
	ЗнаковДоЗапятой = 1;
	
	Если Область = Неопределено 
		Или Область.Лево <> Область.Право Тогда 
		Возврат;
	КонецЕсли;
	
	Координата = Область.Лево;
	
	Пока Истина Цикл 
		Инд = Инд + 1;
		ИмяПараметра = ПрефиксПараметра + "_" + Инд;
		Область = ОбластиМакета.Найти(ИмяПараметра);
		Если Область = Неопределено 
			Или Область.Лево <> Область.Право Тогда 
			Прервать;
		КонецЕсли;
		
		ЗнаковДоЗапятой = ЗнаковДоЗапятой + 1;
		Если ЗнаковПослеЗапятой > 0 
			Или Область.Лево > Координата + 1 Тогда 
			
			ЗнаковПослеЗапятой = ЗнаковПослеЗапятой + 1;
			ЗнаковДоЗапятой = ЗнаковДоЗапятой - 1;
		КонецЕсли;
		
		Координата = Координата + 1;
	КонецЦикла;
	
	Если Число = 0 Тогда 
		Ч = "-------------------------------------------------";
	Иначе
		Ч = Лев(Формат(Цел(Число), "ЧН=0; ЧГ=") + "-------------------------------------------------", ЗнаковДоЗапятой);
		Ч2 = Прав("00000000000000000000000000000000000000000000" + Формат(   (Число - Цел(Число)) * Pow(10, ЗнаковПослеЗапятой), "ЧГ="), ЗнаковПослеЗапятой);
		Пока Прав(Ч2, 1) = "0" Цикл 
			Ч2 = Лев(Ч2, СтрДлина(Ч2) - 1);
		КонецЦикла;
		Ч = Ч + Ч2 + "-------------------------------------------------";
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Ч, ПрефиксПараметра, ОбластиМакета);
КонецПроцедуры

Процедура НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП)
	Попытка
		МакетПФ = Отчеты.РегламентированноеУведомлениеКонтролирующиеЛица.ПолучитьМакет(ИмяМакета);
	Исключение
		Возврат;
	КонецПопытки;
	
	НомСтр = НомСтр + 1;
	Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
		Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области, "-");
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда 
			ВывестиЧислоНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли КЗ.Значение = Неопределено Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", КЗ.Ключ, МакетПФ.Области, "-");
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", МакетПФ.Области, "-");
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, СтруктураДанныхСтраницы);
	ПечатнаяФорма.Вывести(МакетПФ);
КонецПроцедуры

Процедура НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПарам, ПечатнаяФорма, НомСтр, ИННКПП)
	МакетыПФ = СтрПарам.МакетыПФ;
	ИмяМакета = СтрПарам.ИмяМакета;
	
	Если Не ЗначениеЗаполнено(МакетыПФ) И Не ЗначениеЗаполнено(ИмяМакета) Тогда 
		Для Каждого СтрПодч Из СтрПарам.Строки Цикл
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ИННКПП);
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МакетыПФ) Тогда 
		МассивИменМакетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МакетыПФ, ";");
	Иначе 
		МассивИменМакетов = Новый Массив;
		МассивИменМакетов.Добавить("Печать_" + ИмяМакета);
	КонецЕсли;
	
	Если СтруктураПараметров.ДанныеУведомления.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
			СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[СтрПарам.ИДНаименования];
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
				НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП);
				Если СтрПарам.ИДНаименования = "Титульная" Тогда
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантФамилия, "ПодпФ", ПечатнаяФорма.Области, "-");
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантИмя, "ПодпИ", ПечатнаяФорма.Области, "-");
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантОтчество, "ПодпО", ПечатнаяФорма.Области, "-");
					Если Не ЗначениеЗаполнено(СтруктураДанныхСтраницы.НомерКорректировки) Тогда
						УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0--", "НомерКорректировки", ПечатнаяФорма.Области);
					КонецЕсли;
				КонецЕсли;
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли СтруктураПараметров.ДанныеМногостраничныхРазделов.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого МнгСтр Из СтруктураПараметров.ДанныеМногостраничныхРазделов[СтрПарам.ИДНаименования] Цикл
			Если СтрПарам.УИД <> МнгСтр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;
			
			Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
				Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(МнгСтр.Значение) Тогда 
					Если СтрПарам.ИДНаименования = "ЛистВ" Тогда
						ДопСтроки = СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", МнгСтр.Значение.УИД));
						
						Для Инд = 0 По ДопСтроки.ВГраница() Цикл 
							Если Инд%10 = 0 Тогда 
								НапечататьСтруктуру(МнгСтр.Значение, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП);
							КонецЕсли;
							
							СтрокаНаЛисте = "_" + (Инд%10 + 1);
							ТекМнгСтрока = ДопСтроки[Инд];
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ТекМнгСтрока.НомерУч, "НомерУч"+СтрокаНаЛисте, ПечатнаяФорма.Области, "-");
							ВывестиЧислоНаПечать(ТекМнгСтрока.ДоляУчПрям, "ДоляУчПрям"+СтрокаНаЛисте, ПечатнаяФорма.Области);
							ВывестиЧислоНаПечать(ТекМнгСтрока.ДоляУчКосв, "ДоляУчКосв"+СтрокаНаЛисте, ПечатнаяФорма.Области);
							
							Если Инд%10 = 9 Или Инд = ДопСтроки.ВГраница() Тогда
								Если Инд = ДопСтроки.ВГраница() И Инд%10 <> 9 Тогда 
									Пока Инд%10 <> 9 Цикл
										Инд = Инд + 1;
										СтрокаНаЛисте = "_" + (Инд%10 + 1);
										УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("-------------", "НомерУч"+СтрокаНаЛисте, ПечатнаяФорма.Области, "-");
										ВывестиЧислоНаПечать(0, "ДоляУчПрям"+СтрокаНаЛисте, ПечатнаяФорма.Области);
										ВывестиЧислоНаПечать(0, "ДоляУчКосв"+СтрокаНаЛисте, ПечатнаяФорма.Области);
									КонецЦикла;
								КонецЕсли;
								УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
								ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
							КонецЕсли;
						КонецЦикла;
					Иначе 
						НапечататьСтруктуру(МнгСтр.Значение, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП);
						Если СтрПарам.ИДНаименования = "ЛистАРаздел1" Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.НомерКонтрЛицЧисло, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "НомерКИКЧисло", ПечатнаяФорма.Области);
						ИначеЕсли СтрПарам.ИДНаименования = "ЛистАРаздел2" Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.НомерРосОргЧисло, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "НомерКИКЧисло", ПечатнаяФорма.Области);
						ИначеЕсли СтрПарам.ИДНаименования = "ЛистАРаздел3" Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.НомерКонтрФЛицЧисло, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "НомерКИКЧисло", ПечатнаяФорма.Области);
						ИначеЕсли СтрПарам.ИДНаименования = "ЛистГ1" Или СтрПарам.ИДНаименования = "ЛистГ2" Или СтрПарам.ИДНаименования = "ЛистГ2" Или СтрПарам.ИДНаименования = "ЛистГ3" Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.НомерУчПослЧисло, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "НомерУчПослЧисло", ПечатнаяФорма.Области);
						КонецЕсли;
						Если СтрПарам.ИДНаименования = "ЛистБ" Тогда 
							Если Не ЗначениеЗаполнено(МнгСтр.Значение.ДоляПрямУч) Тогда 
								УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0-------------------------------", "ДоляПрямУч", ПечатнаяФорма.Области);
							КонецЕсли;
							Если Не ЗначениеЗаполнено(МнгСтр.Значение.ДоляКосУч) Тогда 
								УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0-------------------------------", "ДоляКосУч", ПечатнаяФорма.Области);
							КонецЕсли;
							Если Не ЗначениеЗаполнено(МнгСтр.Значение.ДоляСмешУч) Тогда 
								УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0-------------------------------", "ДоляСмешУч", ПечатнаяФорма.Области);
							КонецЕсли;
							Если Не ЗначениеЗаполнено(МнгСтр.Значение.ДоляУчСупДет) Тогда 
								УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0-------------------------------", "ДоляУчСупДет", ПечатнаяФорма.Области);
							КонецЕсли;
						КонецЕсли;
						УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрПодч Из СтрПарам.Строки Цикл
				НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ИННКПП);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2017_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Титульная.ИНН);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ИННКПП);
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2019_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Титульная.ИНН);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ИННКПП);
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2019_1(Данные, УникальныйИдентификатор)
	ОТЧ = Новый ОписаниеТипов("Число");
	ТаблицаОшибок = Новый СписокЗначений;
	Титульная = Данные.ДанныеУведомления.Титульная;
	
	Если Не ЗначениеЗаполнено(Титульная.КодНО) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код налогового органа на титульной странице", "Титульная", "КодНО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Наименование) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано наименование организации на титульной странице", "Титульная", "Наименование"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ИНН)
		Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Истина, "") Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен/неправильно заполнен ИНН на титульной странице", "Титульная", "ИНН"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КПП)
		Или Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Титульная.КПП, "") Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен/неправильно заполнен КПП на титульной странице", "Титульная", "КПП"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ОГРН)
		Или Не РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(Титульная.ОГРН, Истина, "") Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен/неправильно заполнен ОГРН на титульной странице", "Титульная", "ОГРН"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак подписанта на титульной странице", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "1" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Тогда 
		Если Не ЗначениеЗаполнено(Данные.ПодписантИмя) Или Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан /неправильно указан подписант", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
		КонецЕсли;
	КонецЕсли;
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	
	НомераНаЛистахА = Новый Соответствие;
	
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ЛистАРаздел1 Цикл 
		ЛистА = Стр.Значение;
		Если Не ЗначениеЗаполнено(ЛистА.НомерКонтрЛицЧисло) Тогда 
			Продолжить;
		КонецЕсли;
		
		НомераНаЛистахА.Вставить("ИО-" + Формат(ЛистА.НомерКонтрЛицЧисло, "ЧЦ=5; ЧВН=; ЧГ="), 1);
		
		Если Не ЗначениеЗаполнено(ЛистА.НаимОрг) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано наименование организации (рус)", "ЛистАРаздел1", "НаимОрг", ЛистА.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистА.НаимОргЛат) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано наименование организации (лат)", "ЛистАРаздел1", "НаимОргЛат", ЛистА.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистА.СтрРег) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана страна регистрации", "ЛистАРаздел1", "СтрРег", ЛистА.УИД));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ЛистАРаздел2 Цикл 
		ЛистА = Стр.Значение;
		Если Не ЗначениеЗаполнено(ЛистА.НомерРосОргЧисло) Тогда 
			Продолжить;
		КонецЕсли;
		
		НомераНаЛистахА.Вставить("РО-" + Формат(ЛистА.НомерРосОргЧисло, "ЧЦ=5; ЧВН=; ЧГ="), 1);
		
		Если Не ЗначениеЗаполнено(ЛистА.НаимОрг) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано наименование организации", "ЛистАРаздел2", "НаимОрг", ЛистА.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистА.ИННЮЛ) 
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ЛистА.ИННЮЛ, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан / неправильно указан ИНН", "ЛистАРаздел2", "ИННЮЛ", ЛистА.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистА.КПП) 
			Или Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(ЛистА.КПП, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан / неправильно указан КПП", "ЛистАРаздел2", "КПП", ЛистА.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистА.ОГРН) 
			Или Не РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(ЛистА.ОГРН, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан / неправильно указан ОГРН", "ЛистАРаздел2", "ОГРН", ЛистА.УИД));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ЛистАРаздел3 Цикл 
		ЛистА = Стр.Значение;
		Если Не ЗначениеЗаполнено(ЛистА.НомерКонтрФЛицЧисло) Тогда 
			Продолжить;
		КонецЕсли;
		
		НомераНаЛистахА.Вставить("ФЛ-" + Формат(ЛистА.НомерКонтрФЛицЧисло, "ЧЦ=5; ЧВН=; ЧГ="), 1);
		
		Если Не ЗначениеЗаполнено(ЛистА.ПрГражд) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак гражданства", "ЛистАРаздел3", "ПрГражд", ЛистА.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистА.Пол) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак пола", "ЛистАРаздел3", "Пол", ЛистА.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистА.ДатаРожд) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата рождения", "ЛистАРаздел3", "ДатаРожд", ЛистА.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистА.МестоРожд) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано место рождения", "ЛистАРаздел3", "МестоРожд", ЛистА.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистА.ОКСМ) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код страны", "ЛистАРаздел3", "ОКСМ", ЛистА.УИД));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистА.Фамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана фамилия", "ЛистАРаздел3", "Фамилия", ЛистА.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистА.Имя) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано имя", "ЛистАРаздел3", "Имя", ЛистА.УИД));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЛистА.ИННФЛ)
			И Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ЛистА.ИННФЛ, Ложь, "") Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан ИНН", "ЛистАРаздел3", "ИННФЛ", ЛистА.УИД));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистА.КодВидДокЛичн) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код документа", "ЛистАРаздел3", "КодВидДокЛичн", ЛистА.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистА.СерНомДокЛичн) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана серия и номер документа", "ЛистАРаздел3", "СерНомДокЛичн", ЛистА.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистА.ДатаДокЛичн) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата выдачи документа", "ЛистАРаздел3", "ДатаДокЛичн", ЛистА.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистА.ВыдДокЛичн) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан орган, выдавший документ", "ЛистАРаздел3", "ВыдДокЛичн", ЛистА.УИД));
		КонецЕсли;
		Если ЗначениеЗаполнено(ЛистА.КодФЛНПРег) И Не ЗначениеЗаполнено(ЛистА.СтрРегФЛ) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код в стране регистрации", "ЛистАРаздел3", "СтрРегФЛ", ЛистА.УИД));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЛистА.КодВидДокРег)
			Или ЗначениеЗаполнено(ЛистА.СерНомДокРег)
			Или ЗначениеЗаполнено(ЛистА.ДатаДокРег)
			Или ЗначениеЗаполнено(ЛистА.ВыдДокРег) Тогда 
			
			Если Не ЗначениеЗаполнено(ЛистА.КодВидДокРег) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код вида документа", "ЛистАРаздел3", "КодВидДокРег", ЛистА.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистА.СерНомДокРег) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана серия/номер документа", "ЛистАРаздел3", "СерНомДокРег", ЛистА.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистА.ДатаДокРег) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата выдачи документа", "ЛистАРаздел3", "ДатаДокРег", ЛистА.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистА.ВыдДокРег) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан орган, выдавший документ", "ЛистАРаздел3", "ВыдДокРег", ЛистА.УИД));
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЛистА.КодСтр)
			Или ЗначениеЗаполнено(ЛистА.АдрТекст) Тогда 
			
			Если Не ЗначениеЗаполнено(ЛистА.КодСтр) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код страны", "ЛистАРаздел3", "КодСтр", ЛистА.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистА.АдрТекст) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан адрес", "ЛистАРаздел3", "АдрТекст", ЛистА.УИД));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ЛистБ Цикл 
		ЛистБ = Стр.Значение;
		Если Не ЗначениеЗаполнено(ЛистБ.НомерКонтрЛиц) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если НомераНаЛистахА[ЛистБ.НомерКонтрЛиц] = Неопределено Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не найден лист А с номером " + ЛистБ.НомерКонтрЛиц, "ЛистБ", "НомерКонтрЛиц", ЛистБ.УИД));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистБ["ОснКонтрЛицМК"]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано описание оснований на листе Б", "ЛистБ", "ОснКонтрЛицМК", ЛистБ.УИД));
		КонецЕсли;
		
		Для Каждого Элт Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ПрПериодКонтрЛиц,Код201,Код202,Код203,Код204,Код205", ",") Цикл 
			Если Не ЗначениеЗаполнено(ЛистБ[Элт]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан обязательный признак на листе Б", "ЛистБ", Элт, ЛистБ.УИД));
			КонецЕсли;
		КонецЦикла;
		
		Если (ЛистБ.Код201 = "1" И Не ЗначениеЗаполнено(ЛистБ["ДоляПрямУч"]))
			Или (ЛистБ.Код201 = "0" И ЗначениеЗаполнено(ЛистБ["ДоляПрямУч"])) Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указана доля прямого участия на листе Б", "ЛистБ", "ДоляПрямУч", ЛистБ.УИД));
		КонецЕсли;
		Если (ЛистБ.Код202 = "1" И Не ЗначениеЗаполнено(ЛистБ["ДоляКосУч"]))
			Или (ЛистБ.Код202 = "0" И ЗначениеЗаполнено(ЛистБ["ДоляКосУч"])) Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указана доля косвенного участия на листе Б", "ЛистБ", "ДоляКосУч", ЛистБ.УИД));
		КонецЕсли;
		Если (ЛистБ.Код203 = "1" И Не ЗначениеЗаполнено(ЛистБ["ДоляСмешУч"]))
			Или (ЛистБ.Код203 = "0" И ЗначениеЗаполнено(ЛистБ["ДоляСмешУч"])) Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указана доля смешанного участия на листе Б", "ЛистБ", "ДоляСмешУч", ЛистБ.УИД));
		КонецЕсли;
		Если (ЛистБ.Код204 = "1" И Не ЗначениеЗаполнено(ЛистБ["ДоляУчСупДет"]))
			Или (ЛистБ.Код204 = "0" И ЗначениеЗаполнено(ЛистБ["ДоляУчСупДет"])) Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указана доля участия родственников на листе Б", "ЛистБ", "ДоляУчСупДет", ЛистБ.УИД));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ЛистВ Цикл 
		ЛистВ = Стр.Значение;
		Если Не ЗначениеЗаполнено(ЛистВ.НомерКонтрЛиц) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если НомераНаЛистахА[ЛистВ.НомерКонтрЛиц] = Неопределено Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не найден лист А с номером " + ЛистВ.НомерКонтрЛиц, "ЛистВ", "НомерКонтрЛиц", ЛистВ.УИД));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистВ.ДоляУчКосвИт) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана доля участия", "ЛистВ", "ДоляУчКосвИт", ЛистВ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистВ.НомерПосл) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан номер последовательности", "ЛистВ", "НомерПосл", ЛистВ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистВ.ДоляКосвПослИт) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана доля участия в последовательности", "ЛистВ", "ДоляКосвПослИт", ЛистВ.УИД));
		КонецЕсли;
		
		Инд = 0;
		Для Каждого СтрМнг Из Данные.ДанныеДопСтрокБД.МнгСтр Цикл 
			Если СтрМнг.УИД = ЛистВ.УИД Тогда 
				Инд = Инд + 1;
				Если Не ЗначениеЗаполнено(СтрМнг.НомерУч) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан номер участника", "ЛистВ", "НомерУч___" + Инд, ЛистВ.УИД));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрГ Из Данные.ДанныеМногостраничныхРазделов.ЛистГ1 Цикл
			СтрГЗначение = СтрГ.Значение;
			Если СтрГЗначение.УИДРодителя <> ЛистВ.УИД
				Или Не ЗначениеЗаполнено(СтрГЗначение.НомерУчПослЧисло) Тогда 
				
				Продолжить;
			КонецЕсли;
			
			Если ОТЧ.ПривестиЗначение(СтрГЗначение.НомерПосл) <> ОТЧ.ПривестиЗначение(ЛистВ.НомерПосл) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Номер последовательности участия в листе Г1 должен совпадать с номером последовательности в листе В", "ЛистГ1", "НомерПосл", СтрГЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрГЗначение.НаимОрг) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано наименование организации (рус)", "ЛистГ1", "НаимОрг", СтрГЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрГЗначение.НаимОргЛат) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано наименование организации (лат)", "ЛистГ1", "НаимОргЛат", СтрГЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрГЗначение.СтрРег) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана страна регистрации", "ЛистГ1", "СтрРег", СтрГЗначение.УИД));
			КонецЕсли;
		КонецЦикла;
		Для Каждого СтрГ Из Данные.ДанныеМногостраничныхРазделов.ЛистГ2 Цикл
			СтрГЗначение = СтрГ.Значение;
			Если СтрГЗначение.УИДРодителя <> ЛистВ.УИД
				Или Не ЗначениеЗаполнено(СтрГЗначение.НомерУчПослЧисло) Тогда 
				
				Продолжить;
			КонецЕсли;
			
			Если ОТЧ.ПривестиЗначение(СтрГЗначение.НомерПосл) <> ОТЧ.ПривестиЗначение(ЛистВ.НомерПосл) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Номер последовательности участия в листе Г2 должен совпадать с номером последовательности в листе В", "ЛистГ2", "НомерПосл", СтрГЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрГЗначение.НаимОрг) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано наименование организации", "ЛистГ2", "НаимОрг", СтрГЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрГЗначение.ИННЮЛ) 
				Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(СтрГЗначение.ИННЮЛ, Истина, "") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан / неправильно указан ИНН", "ЛистГ2", "ИННЮЛ", СтрГЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрГЗначение.КПП) 
				Или Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(СтрГЗначение.КПП, "") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан / неправильно указан КПП", "ЛистГ2", "КПП", СтрГЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрГЗначение.ОГРН) 
				Или Не РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(СтрГЗначение.ОГРН, Истина, "") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан / неправильно указан ОГРН", "ЛистГ2", "ОГРН", СтрГЗначение.УИД));
			КонецЕсли;
		КонецЦикла;
		Для Каждого СтрГ Из Данные.ДанныеМногостраничныхРазделов.ЛистГ3 Цикл
			СтрГЗначение = СтрГ.Значение;
			Если СтрГЗначение.УИДРодителя <> ЛистВ.УИД
				Или Не ЗначениеЗаполнено(СтрГЗначение.НомерУчПослЧисло) Тогда 
				
				Продолжить;
			КонецЕсли;
			
			Если ОТЧ.ПривестиЗначение(СтрГЗначение.НомерПосл) <> ОТЧ.ПривестиЗначение(ЛистВ.НомерПосл) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Номер последовательности участия в листе Г3 должен совпадать с номером последовательности в листе В", "ЛистГ3", "НомерПосл", СтрГЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрГЗначение.ОргФорм) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана организационная форма", "ЛистГ3", "ОргФорм", СтрГЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрГЗначение.НаимОрг) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано наименование иностранной структуры (рус)", "ЛистГ3", "НаимОрг", СтрГЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрГЗначение.НаимОргЛат) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано наименование иностранной структуры (лат)", "ЛистГ3", "НаимОргЛат", СтрГЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрГЗначение.ДатаУчрИС) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата учреждения", "ЛистГ3", "ДатаУчрИС", СтрГЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрГЗначение.СтрРег) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана страна регистрации", "ЛистГ3", "СтрРег", СтрГЗначение.УИД));
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТаблицаОшибок;
КонецФункции

#КонецОбласти
#КонецЕсли
