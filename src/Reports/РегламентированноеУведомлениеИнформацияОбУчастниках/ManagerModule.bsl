#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2020_1";
	Стр.КНД = "1110302";
	Стр.ВерсияФормата = "5.01";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2020_1";
	Стр.ОписаниеФормы = "Форма информации об организации системы внутреннего контроля";
	Стр.ДатаНачала = '20201001';
	Стр.ДатаКонца = '20991231';
	
	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2020_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2020_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2020_1" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Электронный формат для данной формы не опубликован'"));
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2020_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2020_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2020_1" Тогда 
		Данные = Объект.ДанныеУведомления.Получить();
		Данные.Вставить("Организация", Объект.Организация);
		Данные.Вставить("ПодписантФамилия", Объект.ПодписантФамилия);
		Данные.Вставить("ПодписантИмя", Объект.ПодписантИмя);
		Данные.Вставить("Организация", Объект.Организация);
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2020_1(Данные, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2020_1(СведенияОтправки)
	Префикс = "ON_NALMOND25";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2020_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	Если Не ЗначениеЗаполнено(Титульная.КодНО) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан налоговый орган", "Титульная", "КодНО"));
	ИначеЕсли Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНО) Или СтрДлина(СокрЛП(Титульная.КодНО)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан налоговый орган", "Титульная", "КодНО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ГодНМ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан год", "Титульная", "ГодНМ"));
	ИначеЕсли Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.ГодНМ) Или СтрДлина(СокрЛП(Титульная.ГодНМ)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан год", "Титульная", "ГодНМ"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.Наименование) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации", "Титульная", "Наименование"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата формирования документа", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДатаИнф) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата, по состоянию на которую сформирована представляемая информация", "Титульная", "ДатаИнф"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ИНН) Или Не ЗначениеЗаполнено(Титульная.КПП) Тогда
		Если Не ЗначениеЗаполнено(Титульная.ИНН) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан ИНН", "Титульная", "ИНН"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КПП) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан КПП", "Титульная", "КПП"));
		КонецЕсли;
	Иначе
		Если Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан ИНН", "Титульная", "ИНН"));
		КонецЕсли;
		Если Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Титульная.КПП, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан КПП", "Титульная", "КПП"));
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	ИначеЕсли Не (Титульная.ПРИЗНАК_НП_ПОДВАЛ = "1" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2") Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если (Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Или Не ЗначениеЗаполнено(Данные.ПодписантИмя)) Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Необходимо указать подписанта", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Долж) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана должность подписанта", "Титульная", "Долж"));
	КонецЕсли;
	
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ подписанта", "Титульная", "НаимДок"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ИтДоляПрямУчНМ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана доля прямого участия", "Титульная", "ИтДоляПрямУчНМ"));
	КонецЕсли;
	
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.СвУчПрям Цикл 
		Проверить_СвУч(Стр.Значение, ТаблицаОшибок, "СвУчПрям");
	КонецЦикла;
	
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ИнфУчаст Цикл
		Проверить_ИнфУчаст(Стр.Значение, ТаблицаОшибок, Данные);
	КонецЦикла;
	
	Возврат ТаблицаОшибок;
КонецФункции

Процедура Проверить_ИнфУчаст(СтрИнфУчаст, ТаблицаОшибок, Данные)
	Если ЗначениеЗаполнено(СтрИнфУчаст.НомГруп)
		Или ЗначениеЗаполнено(СтрИнфУчаст.ИтДоляПрямУч)
		Или ЗначениеЗаполнено(СтрИнфУчаст.ИтДоляКосвУчНМ) 
		Или ЗначениеЗаполнено(СтрИнфУчаст.ТипУчастникаИнфУчаст) Тогда 
		
		Если Не ЗначениеЗаполнено(СтрИнфУчаст.ИтДоляПрямУч) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана доля участия", "ИнфУчаст", "ИтДоляПрямУч", СтрИнфУчаст.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрИнфУчаст.ТипУчастникаИнфУчаст) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан тип участника", "ИнфУчаст", "ТипУчастникаИнфУчаст", СтрИнфУчаст.УИД));
		ИначеЕсли СтрИнфУчаст.ТипУчастникаИнфУчаст <> "1"
			И СтрИнфУчаст.ТипУчастникаИнфУчаст <> "2" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан тип участника", "ИнфУчаст", "ТипУчастникаИнфУчаст", СтрИнфУчаст.УИД));
		КонецЕсли;
		
		Если СтрИнфУчаст.ТипУчастникаИнфУчаст = "1" Тогда
			Если Не ЗначениеЗаполнено(СтрИнфУчаст.РО_НаимОрг) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указано наименование организации", "ИнфУчаст", "РО_НаимОрг", СтрИнфУчаст.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрИнфУчаст.РО_ИННЮЛ) Или Не ЗначениеЗаполнено(СтрИнфУчаст.РО_КПП) Тогда 
				Если Не ЗначениеЗаполнено(СтрИнфУчаст.РО_ИННЮЛ) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан ИНН", "ИнфУчаст", "РО_ИННЮЛ", СтрИнфУчаст.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(СтрИнфУчаст.РО_КПП) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан КПП", "ИнфУчаст", "РО_КПП", СтрИнфУчаст.УИД));
				КонецЕсли;
			Иначе
				Если Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(СтрИнфУчаст.РО_ИННЮЛ, Истина, "") Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Неправильно указан ИНН", "ИнфУчаст", "РО_ИННЮЛ", СтрИнфУчаст.УИД));
				КонецЕсли;
				Если Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(СтрИнфУчаст.РО_КПП, "") Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Неправильно указан КПП", "ИнфУчаст", "РО_КПП", СтрИнфУчаст.УИД));
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли СтрИнфУчаст.ТипУчастникаИнфУчаст = "2" Тогда 
			Если Не ЗначениеЗаполнено(СтрИнфУчаст.ИО_НаимИнОрг) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указано наименование организации", "ИнфУчаст", "ИО_НаимИнОрг", СтрИнфУчаст.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрИнфУчаст.ИО_КодРег) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан код региона", "ИнфУчаст", "ИО_КодРег", СтрИнфУчаст.УИД));
			ИначеЕсли СтрДлина(СтрИнфУчаст.ИО_КодРег) <> 3 Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Неправильно указан код региона", "ИнфУчаст", "ИО_КодРег", СтрИнфУчаст.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрИнфУчаст.ИО_РегНом) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан регистрационный номер", "ИнфУчаст", "ИО_РегНом", СтрИнфУчаст.УИД));
			КонецЕсли;
		КонецЕсли;
		Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.СвУчКосв Цикл
			Если Стр.Значение.УИДРодителя = СтрИнфУчаст.УИД
				И УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Стр.Значение) Тогда 
				
				Проверить_СвУч(Стр.Значение, ТаблицаОшибок, "ИнфУчаст");
			КонецЕсли;
		КонецЦикла
	Иначе
		Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.СвУчКосв Цикл
			Если Стр.Значение.УИДРодителя = СтрИнфУчаст.УИД
				И УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Стр.Значение) Тогда 
				
				Если Не ЗначениеЗаполнено(СтрИнфУчаст.ИтДоляПрямУч) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Страница не должна заполняться", "СвУчКосв", "НомУч", Стр.Значение.УИД));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла
	КонецЕсли;

КонецПроцедуры

Процедура Проверить_СвУч(СтрСвУч, ТаблицаОшибок, ИмяМногостраничногоРаздела)
	Если Не ЗначениеЗаполнено(СтрСвУч.НомУч) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан номер участника", ИмяМногостраничногоРаздела, "НомУч", СтрСвУч.УИД));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СтрСвУч.ДоляПрямУч) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана доля прямого участия", ИмяМногостраничногоРаздела, "ДоляПрямУч", СтрСвУч.УИД));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтрСвУч.ТипУчастника) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан тип участника", ИмяМногостраничногоРаздела, "ТипУчастника", СтрСвУч.УИД));
	ИначеЕсли СтрСвУч.ТипУчастника <> "1"
		И СтрСвУч.ТипУчастника <> "2"
		И СтрСвУч.ТипУчастника <> "3" Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан тип участника", ИмяМногостраничногоРаздела, "ТипУчастника", СтрСвУч.УИД));
	КонецЕсли;
	
	Если СтрСвУч.ТипУчастника = "1" Тогда
		Если Не ЗначениеЗаполнено(СтрСвУч.РО_НаимОргУч) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование организации", ИмяМногостраничногоРаздела, "РО_НаимОргУч", СтрСвУч.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрСвУч.РО_КодНО) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан налоговый орган", ИмяМногостраничногоРаздела, "РО_КодНО", СтрСвУч.УИД));
		ИначеЕсли Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(СтрСвУч.РО_КодНО) Или СтрДлина(СокрЛП(СтрСвУч.РО_КодНО)) <> 4 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан налоговый орган", ИмяМногостраничногоРаздела, "РО_КодНО", СтрСвУч.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрСвУч.РО_ИННЮЛ) Или Не ЗначениеЗаполнено(СтрСвУч.РО_КПП) Тогда 
			Если Не ЗначениеЗаполнено(СтрСвУч.РО_ИННЮЛ) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан ИНН", ИмяМногостраничногоРаздела, "РО_ИННЮЛ", СтрСвУч.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрСвУч.РО_КПП) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан КПП", ИмяМногостраничногоРаздела, "РО_КПП", СтрСвУч.УИД));
			КонецЕсли;
		Иначе
			Если Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(СтрСвУч.РО_ИННЮЛ, Истина, "") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Неправильно указан ИНН", ИмяМногостраничногоРаздела, "РО_ИННЮЛ", СтрСвУч.УИД));
			КонецЕсли;
			Если Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(СтрСвУч.РО_КПП, "") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Неправильно указан КПП", ИмяМногостраничногоРаздела, "РО_КПП", СтрСвУч.УИД));
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли СтрСвУч.ТипУчастника = "2" Тогда
		Если Не ЗначениеЗаполнено(СтрСвУч.ИО_НаимИнУч) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование организации", ИмяМногостраничногоРаздела, "ИО_НаимИнУч", СтрСвУч.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрСвУч.ИО_НаимИнУчЛат) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование организации латиницей", ИмяМногостраничногоРаздела, "ИО_НаимИнУчЛат", СтрСвУч.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрСвУч.ИО_КодРег) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код региона", ИмяМногостраничногоРаздела, "ИО_КодРег", СтрСвУч.УИД));
		ИначеЕсли СтрДлина(СтрСвУч.ИО_КодРег) <> 3 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан код региона", ИмяМногостраничногоРаздела, "ИО_КодРег", СтрСвУч.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрСвУч.ИО_РегНом) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан регистрационный номер", ИмяМногостраничногоРаздела, "ИО_РегНом", СтрСвУч.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрСвУч.ИО_АдрРегТекст) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан адрес в стране регистрации", ИмяМногостраничногоРаздела, "ИО_АдрРегТекст", СтрСвУч.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрСвУч.ИО_АдрРегТекстЛат) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан адрес в стране регистрации латиницей", ИмяМногостраничногоРаздела, "ИО_АдрРегТекстЛат", СтрСвУч.УИД));
		КонецЕсли;
	ИначеЕсли СтрСвУч.ТипУчастника = "3" Тогда
		Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_Фамилия) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана фамилия", ИмяМногостраничногоРаздела, "ФЛ_Фамилия", СтрСвУч.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_Имя) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано имя", ИмяМногостраничногоРаздела, "ФЛ_Имя", СтрСвУч.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_Пол) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан пол", ИмяМногостраничногоРаздела, "ФЛ_Пол", СтрСвУч.УИД));
		ИначеЕсли СтрСвУч.ФЛ_Пол <> "1" И СтрСвУч.ФЛ_Пол <> "2" Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан пол", ИмяМногостраничногоРаздела, "ФЛ_Пол", СтрСвУч.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_ДатаРожд) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата рождения", ИмяМногостраничногоРаздела, "ФЛ_ДатаРожд", СтрСвУч.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_МестоРожд) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано место рождения", ИмяМногостраничногоРаздела, "ФЛ_МестоРожд", СтрСвУч.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_Гражд) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак гражданства", ИмяМногостраничногоРаздела, "ФЛ_Гражд", СтрСвУч.УИД));
		ИначеЕсли СтрСвУч.ФЛ_Гражд <> "1"
			И СтрСвУч.ФЛ_Гражд <> "2"
			И СтрСвУч.ФЛ_Гражд <> "3" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан признак гражданства", ИмяМногостраничногоРаздела, "ФЛ_Гражд", СтрСвУч.УИД));
		КонецЕсли;
		
		Если СтрСвУч.ФЛ_Гражд = "2" Тогда 
			Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_КодРег) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан код региона", ИмяМногостраничногоРаздела, "ФЛ_КодРег", СтрСвУч.УИД));
			ИначеЕсли СтрДлина(СтрСвУч.ФЛ_КодРег) <> 3 Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Неправильно указан код региона", ИмяМногостраничногоРаздела, "ФЛ_КодРег", СтрСвУч.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_АдрМЖИнТекст) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан адрес в стране постоянного проживания", ИмяМногостраничногоРаздела, "ФЛ_АдрМЖИнТекст", СтрСвУч.УИД));
			КонецЕсли;
		ИначеЕсли СтрСвУч.ФЛ_Гражд = "1" Тогда 
			Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_ТипМест) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан тип места пребывания", ИмяМногостраничногоРаздела, "ФЛ_ТипМест", СтрСвУч.УИД));
			ИначеЕсли СтрСвУч.ФЛ_ТипМест <> "1"
				И СтрСвУч.ФЛ_ТипМест <> "2" Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Неправильно указан тип места пребывания", ИмяМногостраничногоРаздела, "ФЛ_ТипМест", СтрСвУч.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_АдрМЖРФТекст) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан адрес в Российской Федерации", ИмяМногостраничногоРаздела, "ФЛ_АдрМЖРФТекст", СтрСвУч.УИД));
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрСвУч.ФЛ_КодРег) И СтрДлина(СтрСвУч.ФЛ_КодРег) <> 3 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан код региона", ИмяМногостраничногоРаздела, "ФЛ_КодРег", СтрСвУч.УИД));
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(СтрСвУч.ФЛ_КодРег) И СтрДлина(СтрСвУч.ФЛ_КодРег) <> 3 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан код региона", ИмяМногостраничногоРаздела, "ФЛ_КодРег", СтрСвУч.УИД));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрСвУч.ФЛ_КодВидДок1)
			Или ЗначениеЗаполнено(СтрСвУч.ФЛ_СерНомДок1)
			Или ЗначениеЗаполнено(СтрСвУч.ФЛ_ДатаДок1)
			Или ЗначениеЗаполнено(СтрСвУч.ФЛ_ВыдДок1) Тогда
			
			Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_КодВидДок1) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан код документа", ИмяМногостраничногоРаздела, "ФЛ_КодВидДок1", СтрСвУч.УИД));
			ИначеЕсли СтрДлина(СтрСвУч.ФЛ_КодВидДок1) <> 2 Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Неправильно указан код документа", ИмяМногостраничногоРаздела, "ФЛ_КодВидДок1", СтрСвУч.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_СерНомДок1) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан номер документа", ИмяМногостраничногоРаздела, "ФЛ_СерНомДок1", СтрСвУч.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_ДатаДок1) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата выдачи документа", ИмяМногостраничногоРаздела, "ФЛ_ДатаДок1", СтрСвУч.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_ВыдДок1) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан орган, выдавший документ", ИмяМногостраничногоРаздела, "ФЛ_ВыдДок1", СтрСвУч.УИД));
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрСвУч.ФЛ_КодВидДок2)
				Или ЗначениеЗаполнено(СтрСвУч.ФЛ_СерНомДок2)
				Или ЗначениеЗаполнено(СтрСвУч.ФЛ_ДатаДок2)
				Или ЗначениеЗаполнено(СтрСвУч.ФЛ_ВыдДок2) Тогда
				
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Документ, подтверждающий регистрацию не указывается", ИмяМногостраничногоРаздела, "ФЛ_КодВидДок2", СтрСвУч.УИД));
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполнено(СтрСвУч.ФЛ_КодВидДок2)
			Или ЗначениеЗаполнено(СтрСвУч.ФЛ_СерНомДок2)
			Или ЗначениеЗаполнено(СтрСвУч.ФЛ_ДатаДок2)
			Или ЗначениеЗаполнено(СтрСвУч.ФЛ_ВыдДок2) Тогда
			
			Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_КодВидДок2) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан код документа", ИмяМногостраничногоРаздела, "ФЛ_КодВидДок2", СтрСвУч.УИД));
			ИначеЕсли СтрДлина(СтрСвУч.ФЛ_КодВидДок2) <> 2 Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Неправильно указан код документа", ИмяМногостраничногоРаздела, "ФЛ_КодВидДок2", СтрСвУч.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_СерНомДок2) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан номер документа", ИмяМногостраничногоРаздела, "ФЛ_СерНомДок2", СтрСвУч.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_ДатаДок2) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата выдачи документа", ИмяМногостраничногоРаздела, "ФЛ_ДатаДок2", СтрСвУч.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрСвУч.ФЛ_ВыдДок2) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан орган, выдавший документ", ИмяМногостраничногоРаздела, "ФЛ_ВыдДок2", СтрСвУч.УИД));
			КонецЕсли;
			
		Иначе
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан документ", ИмяМногостраничногоРаздела, "ФЛ_КодВидДок1", СтрСвУч.УИД));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2020_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура;
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Ложь);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПЮЛ(Объект, ОсновныеСведения);
	Иначе
		ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Истина);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	КонецЕсли;
	
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.ДатаПодписи, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("ФамилияПодп", Объект.ПодписантФамилия);
	ОсновныеСведения.Вставить("ИмяПодп", Объект.ПодписантИмя);
	ОсновныеСведения.Вставить("ОтчествоПодп", Объект.ПодписантОтчество);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("КодНО", Данные.ДанныеУведомления.Титульная.КодНО);
	ОсновныеСведения.Вставить("ПрПодп", Данные.ДанныеУведомления.Титульная.ПРИЗНАК_НП_ПОДВАЛ);
	ОсновныеСведения.Вставить("ИННТитул", Данные.ДанныеУведомления.Титульная.ИНН);
	ОсновныеСведения.Вставить("ИННЮЛ", Данные.ДанныеУведомления.Титульная.ИНН);
	ОсновныеСведения.Вставить("НаимДок", Данные.ДанныеУведомления.Титульная.НаимДок);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2020_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2020_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДанныеУведомления.Вставить("Организация", Объект.Организация);
	ДанныеУведомления.Вставить("ПодписантФамилия", Объект.ПодписантФамилия);
	ДанныеУведомления.Вставить("ПодписантИмя", Объект.ПодписантИмя);
	ДанныеУведомления.Вставить("Организация", Объект.Организация);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2020_1(ДанныеУведомления, УникальныйИдентификатор);
	Если Ошибки.Количество() > 0 Тогда 
		Если ДанныеУведомления.Свойство("РазрешитьВыгружатьСОшибками") И ДанныеУведомления.РазрешитьВыгружатьСОшибками = Ложь Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""", Объект.Ссылка);
			ВызватьИсключение "";
		Иначе 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""", Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2020_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2020_1");
	ЗаполнитьДанными_Форма2020_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ДополнитьПараметры_2020(Параметры)
КонецПроцедуры

Процедура ЗаполнитьДанными_Форма2020_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры_2020(ДанныеУведомления);
	ЗаполнитьДаннымиУзелНов(ДанныеУведомления, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
КонецПроцедуры

Процедура ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Узел, ПараметрыТекущейСтраницы = Неопределено, УИДРодителя = Неопределено)
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		Если Стр.Тип = "А" Или Стр.Тип = "A" Или Стр.Тип = "П" Тогда
			Если Стр.Многострочность = Истина Тогда
				Многострочность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеДопСтрокБД.Свойство(Стр.Раздел, Многострочность)
					И ТипЗнч(Многострочность) = Тип("ТаблицаЗначений") Тогда
				
					Для Каждого СтрМнгч Из Многострочность Цикл
						Если ЗначениеЗаполнено(УИДРодителя)
							И УИДРодителя <> СтрМнгч.УИД Тогда 
							
							Продолжить;
						КонецЕсли;
						
						НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(НовУзел, СтрМнгч[НовУзел["Ключ"]]);
					КонецЦикла;
					
					РегламентированнаяОтчетность.УдалитьУзел(Стр);
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(Стр.Ключ) Тогда
				ЗначениеПоказателя = Неопределено;
				Если ПараметрыТекущейСтраницы <> Неопределено И ПараметрыТекущейСтраницы.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда 
					РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
				ИначеЕсли ПараметрыТекущейСтраницы = Неопределено 
					И ЗначениеЗаполнено(Стр.Раздел)
					И ПараметрыВыгрузки.ДанныеУведомления.Свойство(Стр.Раздел, ЗначениеПоказателя) Тогда 
					Если ЗначениеПоказателя.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда
			Если Стр.Многостраничность = Истина Тогда
				Многостраничность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеМногостраничныхРазделов.Свойство(Стр.Раздел, Многостраничность)
					И ТипЗнч(Многостраничность) = Тип("СписокЗначений") Тогда
				
					Для Каждого СтрМнгч Из Многостраничность Цикл 
						Если УИДРодителя = Неопределено Или СтрМнгч.Значение.УИДРодителя = УИДРодителя Тогда 
							НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
							ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, НовУзел, СтрМнгч.Значение, СтрМнгч.Значение.УИД);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			Иначе
				
				Если Стр.Многострочность = Истина Тогда
					Многострочность = Неопределено;
					Если ПараметрыВыгрузки.ДанныеДопСтрокБД.Свойство(Стр.Раздел, Многострочность)
						И ТипЗнч(Многострочность) = Тип("ТаблицаЗначений") Тогда
					
						Для Каждого СтрМнгч Из Многострочность Цикл
							Если ЗначениеЗаполнено(УИДРодителя)
								И УИДРодителя <> СтрМнгч.УИД Тогда 
								
								Продолжить;
							КонецЕсли;
							
							НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
							ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, НовУзел, 
								ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрМнгч));
						КонецЦикла;
						
						РегламентированнаяОтчетность.УдалитьУзел(Стр);
					КонецЕсли;
					Иначе
						ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Стр, ПараметрыТекущейСтраницы, УИДРодителя);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2020_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("ПечатьВСледующихВерсиях"));
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1, Ложь);
	Возврат Листы;
КонецФункции
#КонецОбласти
#КонецЕсли
