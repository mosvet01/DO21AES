#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
Функция СформироватьНовоеУведомлениеПоДаннымЗаполнения(Организация, Регистрация, ДанныеЗаполнения, СсылкаНаСохрУведомление = Неопределено ) Экспорт 
	
	
	Если ЗначениеЗаполнено(СсылкаНаСохрУведомление) Тогда
		
		УведомлениеОбъект = СсылкаНаСохрУведомление.ПолучитьОбъект();
		
	Иначе
		
		УведомлениеОбъект = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		
		УведомлениеОбъект.Дата = ТекущаяДатаСеанса();
		УведомлениеОбъект.УстановитьВремя();
		УведомлениеОбъект.УстановитьНовыйНомер();
		УведомлениеОбъект.ДатаПодписи = ТекущаяДатаСеанса();
		
		УведомлениеОбъект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УменьшениеНалогаНаСтраховыеВзносы;
		УведомлениеОбъект.ИмяОтчета = "РегламентированноеУведомлениеУменьшениеНалогаНаСтраховыеВзносы";
		УведомлениеОбъект.ИмяФормы = РегламентированнаяОтчетность.ПолучитьАктуальнуюФормуУведомления(УведомлениеОбъект.ВидУведомления, УведомлениеОбъект.Дата);
	КонецЕсли;
	
	УведомлениеОбъект.Организация = Организация;
	УведомлениеОбъект.РегистрацияВИФНС = Регистрация;
	
	Руководитель = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация,
		УведомлениеОбъект.Дата, "ФамилияИП,ИмяИП,ОтчествоИП,ИННФЛ,ТелДом");
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Регистрация, "Код,Представитель,ДокументПредставителя");
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		ПРИЗНАК_НП_ПОДВАЛ = "2";
		НаимДок = Реквизиты.ДокументПредставителя;
		СведенияОПредставителе = РегламентированнаяОтчетностьВызовСервера.ПолучитьПоКодамСведенияОПредставителе(
			Организация, Реквизиты.Код, "");
		Если ЗначениеЗаполнено(СведенияОПредставителе.НаименованиеОрганизацииПредставителя) Тогда
			ПодписантСтр = СведенияОПредставителе.ФИОПредставителя;
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(СведенияОПредставителе.ФИОПредставителя);
			УведомлениеОбъект.ПодписантФамилия = СокрЛП(ФИО.Фамилия);
			УведомлениеОбъект.ПодписантИмя = СокрЛП(ФИО.Имя);
			УведомлениеОбъект.ПодписантОтчество = СокрЛП(ФИО.Отчество);
		Иначе
			ДанныеПредставителя = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОФизЛице(Реквизиты.Представитель, , ТекущаяДатаСеанса());
			УведомлениеОбъект.ПодписантФамилия = СокрЛП(ДанныеПредставителя.Фамилия);
			УведомлениеОбъект.ПодписантИмя = СокрЛП(ДанныеПредставителя.Имя);
			УведомлениеОбъект.ПодписантОтчество = СокрЛП(ДанныеПредставителя.Отчество);
		КонецЕсли;
	Иначе
		ПРИЗНАК_НП_ПОДВАЛ = "1";
		НаимДок = "";
		УведомлениеОбъект.ПодписантФамилия = Руководитель.ФамилияИП;
		УведомлениеОбъект.ПодписантИмя = Руководитель.ИмяИП;
		УведомлениеОбъект.ПодписантОтчество = Руководитель.ОтчествоИП;
	КонецЕсли;
	
	ИдентификаторыОбычныхСтраниц = Новый Структура("ЛистА, ЛистБ, Титульная",
		Новый УникальныйИдентификатор, Новый УникальныйИдентификатор, Новый УникальныйИдентификатор);
		
	ДанныеДопСтрокБД = Новый Структура("МнгСтр", Новый ТаблицаЗначений);
	ДанныеДопСтрокБД.МнгСтр.Колонки.Добавить("ДатаВыдПат");
	ДанныеДопСтрокБД.МнгСтр.Колонки.Добавить("НомерПат");
	ДанныеДопСтрокБД.МнгСтр.Колонки.Добавить("СумНалПатУм");
	ДанныеДопСтрокБД.МнгСтр.Колонки.Добавить("УИД");
	
	Для Каждого Стр Из ДанныеЗаполнения.ЛистА Цикл 
		НовСтр = ДанныеДопСтрокБД.МнгСтр.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
		НовСтр.УИД = ИдентификаторыОбычныхСтраниц.ЛистА;
	КонецЦикла;
	
	ДанныеУведомления = Новый Структура("ЛистА, ЛистБ, Титульная",
		Новый Структура, Новый Структура, Новый Структура);
		
	Макет = Отчеты.РегламентированноеУведомлениеУменьшениеНалогаНаСтраховыеВзносы.ПолучитьМакет("Титульная");
	Для Каждого Обл Из Макет.Области Цикл 
		Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			И Обл.СодержитЗначение = Истина Тогда 
			
			ДанныеУведомления.Титульная.Вставить(Обл.Имя);
		КонецЕсли;
	КонецЦикла;
	
	ДанныеУведомления.Титульная.ДАТА_ПОДПИСИ = УведомлениеОбъект.ДатаПодписи;
	ДанныеУведомления.Титульная.ИНН = Руководитель.ИННФЛ;
	ДанныеУведомления.Титульная.Имя = Руководитель.ИмяИП;
	ДанныеУведомления.Титульная.КодНО = Реквизиты.Код;
	ДанныеУведомления.Титульная.НаимДок = НаимДок;
	ДанныеУведомления.Титульная.Отчество = Руководитель.ОтчествоИП;
	ДанныеУведомления.Титульная.ПРИЗНАК_НП_ПОДВАЛ = ПРИЗНАК_НП_ПОДВАЛ;
	ДанныеУведомления.Титульная.Тлф = Руководитель.ТелДом;
	ДанныеУведомления.Титульная.ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ = СокрЛП(УведомлениеОбъект.ПодписантФамилия 
		+ " " + УведомлениеОбъект.ПодписантИмя + " " + УведомлениеОбъект.ПодписантОтчество);
	ДанныеУведомления.Титульная.Фамилия = Руководитель.ФамилияИП;
	
	Для Каждого КЗ Из ДанныеЗаполнения.ЛистБ Цикл
		ДанныеУведомления.ЛистБ.Вставить(КЗ.Ключ, КЗ.Значение);
	КонецЦикла;
	
	ДеревоСтраниц = Новый ДеревоЗначений;
	ДеревоСтраниц.Колонки.Добавить("ИДНаименования");
	ДеревоСтраниц.Колонки.Добавить("ИмяМакета");
	ДеревоСтраниц.Колонки.Добавить("ИндексКартинки");
	ДеревоСтраниц.Колонки.Добавить("МакетыПФ");
	ДеревоСтраниц.Колонки.Добавить("Многостраничность");
	ДеревоСтраниц.Колонки.Добавить("Многострочность");
	ДеревоСтраниц.Колонки.Добавить("МногострочныеЧасти");
	ДеревоСтраниц.Колонки.Добавить("Наименование");
	ДеревоСтраниц.Колонки.Добавить("УИД");
	
	Титульная = ДеревоСтраниц.Строки.Добавить();
	Титульная.ИДНаименования = "Титульная";
	Титульная.ИмяМакета = "Титульная";
	Титульная.ИндексКартинки = 1;
	Титульная.МакетыПФ = "Печать_Форма2020_1_Титульная";
	Титульная.Многостраничность = Ложь;
	Титульная.Многострочность = Ложь;
	Титульная.МногострочныеЧасти = Новый СписокЗначений;
	Титульная.Наименование = "Титульная страница";
	Титульная.УИД = ИдентификаторыОбычныхСтраниц.Титульная;
	
	ЛистА = ДеревоСтраниц.Строки.Добавить();
	ЛистА.ИДНаименования = "ЛистА";
	ЛистА.ИмяМакета = "ЛистА";
	ЛистА.ИндексКартинки = 1;
	ЛистА.МакетыПФ = "Печать_Форма2020_1_ЛистА";
	ЛистА.Многостраничность = Ложь;
	ЛистА.Многострочность = Истина;
	ЛистА.МногострочныеЧасти = Новый СписокЗначений;
	ЛистА.Наименование = "Лист А";
	ЛистА.УИД = ИдентификаторыОбычныхСтраниц.ЛистА;
	ЛистА.МногострочныеЧасти.Добавить("МнгСтр");
	
	ЛистБ = ДеревоСтраниц.Строки.Добавить();
	ЛистБ.ИДНаименования = "ЛистБ";
	ЛистБ.ИмяМакета = "ЛистБ";
	ЛистБ.ИндексКартинки = 1;
	ЛистБ.МакетыПФ = "Печать_Форма2020_1_ЛистБ";
	ЛистБ.Многостраничность = Ложь;
	ЛистБ.Многострочность = Ложь;
	ЛистБ.МногострочныеЧасти = Новый СписокЗначений;
	ЛистБ.Наименование = "Лист Б";
	ЛистБ.УИД = ИдентификаторыОбычныхСтраниц.ЛистБ;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ИдентификаторыОбычныхСтраниц", ИдентификаторыОбычныхСтраниц);
	СтруктураПараметров.Вставить("ДанныеДопСтрокБД", ДанныеДопСтрокБД);
	СтруктураПараметров.Вставить("ДеревоСтраниц", ДеревоСтраниц);
	СтруктураПараметров.Вставить("ДанныеМногостраничныхРазделов", Новый Структура);
	СтруктураПараметров.Вставить("ДанныеУведомления", ДанныеУведомления);
	СтруктураПараметров.Вставить("РазрешитьВыгружатьСОшибками", Ложь);
	
	УведомлениеОбъект.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
	УведомлениеОбъект.Записать();
	
	Возврат УведомлениеОбъект.Ссылка;
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2020_1";
	Стр.КНД = "1112021";
	Стр.ВерсияФормата = "5.01";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2020_1";
	Стр.ОписаниеФормы = "Уведомление об уменьшении суммы налога на сумму страховых взносов в соответствии с письмом ФНС России от 26.01.2021 № СД-4-3/785@";
	Стр.ДатаНачала = '20201001';
	Стр.ДатаКонца = '20991231';
	
	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2020_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2020_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2020_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2020_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2020_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2020_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2020_1" Тогда 
		Данные = Объект.ДанныеУведомления.Получить();
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2020_1(Объект, Данные, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2020_1(СведенияОтправки)
	Префикс = "UT_UVUMNALPNS";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2020_1(Объект, Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	ОТЧ = Новый ОписаниеТипов("Число");
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	Если Не ЗначениеЗаполнено(Титульная.КодНО) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан налоговый орган", "Титульная", "КодНО"));
	ИначеЕсли Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНО) Или СтрДлина(Титульная.КодНО) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан налоговый орган", "Титульная", "КодНО"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.Фамилия) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана фамилия", "Титульная", "Фамилия"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Имя) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано имя", "Титульная", "Имя"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ИНН)
		Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Ложь, "") Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан / неправильно указан ИНН", "Титульная", "ИНН"));
	КонецЕсли;
	
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ <> "1" И Титульная.ПРИЗНАК_НП_ПОДВАЛ <> "2" Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан / неправильно указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Тогда 
		
		Если Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан документ представителя", "Титульная", "НаимДок"));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.ПодписантФамилия) Или Не ЗначениеЗаполнено(Объект.ПодписантИмя) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан представитель", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
		КонецЕсли;
	КонецЕсли;
	
	ЕстьСтроки = Ложь;
	Инд = 0;
	Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр Цикл
		Инд = Инд + 1;
		Если ЗначениеЗаполнено(Стр.НомерПат) 
			Или ЗначениеЗаполнено(Стр.ДатаВыдПат) 
			Или ЗначениеЗаполнено(Стр.СумНалПатУм) Тогда 
			
			ЕстьСтроки = Истина;
			
			Если Не ЗначениеЗаполнено(Стр.НомерПат) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан номер патента", "ЛистА", "НомерПат___" + Формат(Инд, "ЧГ=")));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Стр.ДатаВыдПат) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата выдачи патента", "ЛистА", "ДатаВыдПат___" + Формат(Инд, "ЧГ=")));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЕстьСтроки Тогда  
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнены данные по патентам", "ЛистА", "НомерПат___1"));
	КонецЕсли;
	
	ЛистБ = Данные.ДанныеУведомления.ЛистБ;
	Если ЛистБ.ПрНП <> "1" И ЛистБ.ПрНП <> "2" Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан / неправильно указан признак налогоплательщика", "ЛистБ", "ПрНП"));
	КонецЕсли;
	
	Возврат ТаблицаОшибок;
КонецФункции

Процедура Проверить_Форма2020_1(Данные, УникальныйИдентификатор)
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2020_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура;
	ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Ложь);
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПЮЛ(Объект, ОсновныеСведения);
	
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.ДатаПодписи, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("ФамилияПодп", Объект.ПодписантФамилия);
	ОсновныеСведения.Вставить("ИмяПодп", Объект.ПодписантИмя);
	ОсновныеСведения.Вставить("ОтчествоПодп", Объект.ПодписантОтчество);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("КодНО", Данные.ДанныеУведомления.Титульная.КодНО);
	ОсновныеСведения.Вставить("ПрПодп", Данные.ДанныеУведомления.Титульная.ПРИЗНАК_НП_ПОДВАЛ);
	ОсновныеСведения.Вставить("ТлфПодп", Данные.ДанныеУведомления.Титульная.Тлф);
	ОсновныеСведения.Вставить("ИННТитул", Данные.ДанныеУведомления.Титульная.ИНН);
	ОсновныеСведения.Вставить("ИННФЛ", Данные.ДанныеУведомления.Титульная.ИНН);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2020_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2020_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2020_1(Объект, ДанныеУведомления, УникальныйИдентификатор);
	Если Ошибки.Количество() > 0 Тогда 
		Если ДанныеУведомления.Свойство("РазрешитьВыгружатьСОшибками") И ДанныеУведомления.РазрешитьВыгружатьСОшибками = Ложь Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""");
			ВызватьИсключение "";
		Иначе 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""");
		КонецЕсли;
	КонецЕсли;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2020_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2020_1");
	ЗаполнитьДанными_Форма2020_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2020_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры(ДанныеУведомления);
	ЗаполнитьДаннымиУзелНов(ДанныеУведомления, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
КонецПроцедуры

Процедура ДополнитьПараметры(Параметры)
КонецПроцедуры

Процедура ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Узел, ПараметрыТекущейСтраницы = Неопределено, УИДРодителя = Неопределено)
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		Если Стр.Тип = "А" Или Стр.Тип = "A" Или Стр.Тип = "П" Тогда
			Если ЗначениеЗаполнено(Стр.Ключ) Тогда
				ЗначениеПоказателя = Неопределено;
				Если ПараметрыТекущейСтраницы <> Неопределено И ПараметрыТекущейСтраницы.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда 
					РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
				ИначеЕсли ПараметрыТекущейСтраницы = Неопределено 
					И ЗначениеЗаполнено(Стр.Раздел)
					И ПараметрыВыгрузки.ДанныеУведомления.Свойство(Стр.Раздел, ЗначениеПоказателя) Тогда 
					Если ЗначениеПоказателя.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда
			Если Стр.Многостраничность = Истина Тогда
				Многостраничность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеМногостраничныхРазделов.Свойство(Стр.Раздел, Многостраничность)
					И ТипЗнч(Многостраничность) = Тип("СписокЗначений") Тогда
				
					Для Каждого СтрМнгч Из Многостраничность Цикл 
						Если УИДРодителя = Неопределено Или СтрМнгч.Значение.УИДРодителя = УИДРодителя Тогда 
							НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
							ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, НовУзел, СтрМнгч.Значение, СтрМнгч.Значение.УИД);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			ИначеЕсли Стр.Многострочность = Истина Тогда
				Многострочность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеДопСтрокБД.Свойство(Стр.Раздел, Многострочность) 
					И ТипЗнч(Многострочность) = Тип("ТаблицаЗначений") Тогда
					
					Для Каждого СтрМнгч Из Многострочность Цикл 
						Если УИДРодителя = Неопределено Или СтрМнгч.УИД = УИДРодителя Тогда 
							НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
							ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, НовУзел, ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрМнгч), СтрМнгч.УИД);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			Иначе
				ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Стр, ПараметрыТекущейСтраницы, УИДРодителя)
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП)
	Попытка
		МакетПФ = Отчеты.РегламентированноеУведомлениеУменьшениеНалогаНаСтраховыеВзносы.ПолучитьМакет(ИмяМакета);
	Исключение
		Возврат;
	КонецПопытки;
	
	НомСтр = НомСтр + 1;
	Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
		Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(КЗ.Значение), КЗ.Ключ, МакетПФ.Области, "-");
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоСПрочеркамиНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли КЗ.Значение = Неопределено Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", КЗ.Ключ, МакетПФ.Области, "-");
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", МакетПФ.Области, "-");
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, СтруктураДанныхСтраницы);
	ПечатнаяФорма.Вывести(МакетПФ);
КонецПроцедуры

Процедура НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПарам, ПечатнаяФорма, НомСтр, ИННКПП)
	МакетыПФ = СтрПарам.МакетыПФ;
	ИмяМакета = СтрПарам.ИмяМакета;
	
	Если Не ЗначениеЗаполнено(МакетыПФ) И Не ЗначениеЗаполнено(ИмяМакета) Тогда 
		Для Каждого СтрПодч Из СтрПарам.Строки Цикл
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ИННКПП);
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МакетыПФ) Тогда 
		МассивИменМакетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МакетыПФ, ";");
	Иначе 
		МассивИменМакетов = Новый Массив;
		МассивИменМакетов.Добавить("ПФ_" + ИмяМакета);
	КонецЕсли;
	
	Если СтруктураПараметров.ДанныеУведомления.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
			СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[СтрПарам.ИДНаименования];
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
				НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП);
				Если СтрПарам.ИДНаименования = "Титульная" Тогда
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(Объект.ПодписантФамилия), "ПодпФ", ПечатнаяФорма.Области, "-");
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(Объект.ПодписантИмя), "ПодпИ", ПечатнаяФорма.Области, "-");
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(Объект.ПодписантОтчество), "ПодпО", ПечатнаяФорма.Области, "-");
					ПечатнаяФорма.Области.ЭлАдрес.Текст = СтруктураДанныхСтраницы.ЭлАдрес;
					Если Не ЗначениеЗаполнено(СтруктураДанныхСтраницы.НомерКорректировки) Тогда
						УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0--", "НомерКорректировки", ПечатнаяФорма.Области);
					КонецЕсли;
				КонецЕсли;
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2020_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Титульная.ИНН);
	
	НомСтр = 0;
	НапечататьСтруктуру(СтруктураПараметров.ДанныеУведомления["Титульная"], НомСтр, "Печать_Форма2020_1_Титульная", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(Объект.ПодписантФамилия), "ПодпФ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(Объект.ПодписантИмя), "ПодпИ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(Объект.ПодписантОтчество), "ПодпО", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	Инд = 0;
	НапечататьСтруктуру(СтруктураПараметров.ДанныеУведомления["ЛистА"], НомСтр, "Печать_Форма2020_1_ЛистА", ПечатнаяФорма, ИННКПП);
	Для Каждого Стр Из СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр Цикл
		Если ЗначениеЗаполнено(Стр.НомерПат) 
			Или ЗначениеЗаполнено(Стр.ДатаВыдПат)
			Или ЗначениеЗаполнено(Стр.СумНалПатУм) Тогда 
			
			Инд = Инд + 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(СокрЛП(Стр.НомерПат), "НомерПат_" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(СокрЛП(Стр.ДатаВыдПат), "ДатаВыдПат_" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоСПрочеркамиНаПечать(СокрЛП(Стр.СумНалПатУм), "СумНалПатУм_" + Инд, ПечатнаяФорма.Области);
		КонецЕсли;
		
		Если Инд = 7 Тогда
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			НапечататьСтруктуру(СтруктураПараметров.ДанныеУведомления["ЛистА"], НомСтр, "Печать_Форма2020_1_ЛистА", ПечатнаяФорма, ИННКПП);
			Инд = 0;
		КонецЕсли;
	КонецЦикла;
	
	Если Инд > 0 Тогда 
		Пока Инд < 8 Цикл 
			Инд = Инд + 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "НомерПат_" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "ДатаВыдПат_" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "СумНалПатУм_" + Инд, ПечатнаяФорма.Области, "-");
		КонецЦикла;
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	КонецЕсли;
	
	НапечататьСтруктуру(СтруктураПараметров.ДанныеУведомления["ЛистБ"], НомСтр, "Печать_Форма2020_1_ЛистБ", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	Возврат Листы;
КонецФункции

#КонецОбласти
#КонецЕсли
