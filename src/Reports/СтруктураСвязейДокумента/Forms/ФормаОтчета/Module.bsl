
&НаКлиенте
Процедура Сформировать(Команда)
	
	ОчиститьСообщения();
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;	
	
	СформироватьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	ОтчетОбъект.Сформировать(Результат, Документ, ТипыСвязей, КоличествоУровней);
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Документ") И ЗначениеЗаполнено(Параметры.Документ) Тогда 
		Документ = Параметры.Документ;
		СформироватьНаСервере();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("Документ");
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("Справочник.ВходящиеДокументы", 	НСтр("ru = 'Входящий документ'"));
	СписокВыбора.Добавить("Справочник.ИсходящиеДокументы",  НСтр("ru = 'Исходящий документ'"));
	СписокВыбора.Добавить("Справочник.ВнутренниеДокументы", НСтр("ru = 'Внутренний документ'"));
	СписокВыбора.Добавить("Справочник.Мероприятия", НСтр("ru = 'Мероприятие'"));
	СписокВыбора.Добавить("Справочник.Проекты", НСтр("ru = 'Проект'"));
	СписокВыбора.Добавить("Справочник.Файлы", НСтр("ru = 'Файл'"));
	СписокВыбора.Добавить("Справочник.ШаблоныВнутреннихДокументов", НСтр("ru = 'Шаблон внутреннего документа'"));
	СписокВыбора.Добавить("Справочник.ШаблоныВходящихДокументов", НСтр("ru = 'Шаблон входящего документа'"));
	СписокВыбора.Добавить("Справочник.ШаблоныИсходящихДокументов", НСтр("ru = 'Шаблон исходящего документа'"));
	СписокВыбора.Добавить("Документ.ВходящееПисьмо", НСтр("ru = 'Входящее письмо'"));
	СписокВыбора.Добавить("Документ.ИсходящееПисьмо", НСтр("ru = 'Исходящее письмо'"));
	СписокВыбора.Добавить("Документ.ВходящееСообщениеСВД", НСтр("ru = 'Входящее сообщение СВД'"));
	СписокВыбора.Добавить("Документ.ИсходящееСообщениеСВД", НСтр("ru = 'Исходящее сообщение СВД'"));
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Элемент", Элемент);
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДокументНачалоВыбораПродолжение",
		ЭтотОбъект,
		ПараметрыОповещения);

	ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбора, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументНачалоВыбораПродолжение(ВыбранныйЭлемент, Параметры) Экспорт 

	Если ВыбранныйЭлемент = Неопределено Тогда 
		Возврат;
	КонецЕсли;	

	Элемент = Параметры.Элемент;
	ИмяТипа = СтрЗаменить(ВыбранныйЭлемент.Значение, "Справочник.", "СправочникСсылка.");
	ИмяТипа = СтрЗаменить(ИмяТипа, "Документ.", "ДокументСсылка.");
	ОписаниеТипа = Новый ОписаниеТипов(ИмяТипа);
	ТекущаяСтрока = ОписаниеТипа.ПривестиЗначение(Документ);
	
	ПараметрыФормы = Новый Структура("ТекущаяСтрока", ТекущаяСтрока);
	Если ВыбранныйЭлемент.Значение = "Справочник.Файлы" Тогда 
		ОткрытьФорму("Справочник.Файлы.Форма.ФормаВыбораФайлаВПапках", ПараметрыФормы, Элемент);
	Иначе	
		ОткрытьФорму(ВыбранныйЭлемент.Значение + ".ФормаВыбора", ПараметрыФормы, Элемент);
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ТипыСвязейОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТипыСвязей.Очистить();
	ТипыСвязей.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ТипыСвязей");
	
КонецПроцедуры

&НаКлиенте
Процедура ТипыСвязейНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОчиститьСообщения();
	Если Не ЗначениеЗаполнено(Документ) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Поле ""Объект"" не заполнено'"),,"Документ",,);
		Возврат;			
	КонецЕсли;	
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ТипыСвязейНачалоВыбораПродолжение",
		ЭтотОбъект);

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Документ", Документ);
	ПараметрыФормы.Вставить("ВыбранныеТипыСвязей", ТипыСвязей);
	
	ОткрытьФорму("Отчет.СтруктураСвязейДокумента.Форма.ВыборТиповСвязи", ПараметрыФормы, ЭтаФорма,,,,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипыСвязейНачалоВыбораПродолжение(ВыбранныеТипыСвязей, Параметры) Экспорт 
	
	Если ТипЗнч(ВыбранныеТипыСвязей) = Тип("СписокЗначений") Тогда 
		ТипыСвязей.ЗагрузитьЗначения(ВыбранныеТипыСвязей.ВыгрузитьЗначения());
	КонецЕсли;	

КонецПроцедуры	

