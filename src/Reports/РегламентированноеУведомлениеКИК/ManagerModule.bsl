#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2019_1";
	Стр.КНД = "1120416";
	Стр.ВерсияФормата = "5.02";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеКИК.Форма.Форма2017_1";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2017_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 13.12.2016 № ММВ-7-13/679@";
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2019_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 26.08.2019 № ММВ-7-13/422@";
	
	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2019_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2019_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2017_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2017_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2019_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2017_1" Тогда 
		Данные = Объект.ДанныеУведомления.Получить();
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2019_1" Тогда
		Данные = Объект.ДанныеУведомления.Получить();
		Данные.Вставить("Организация", Объект.Организация);
		Данные.Вставить("ПодписантФамилия", Объект.ПодписантФамилия);
		Данные.Вставить("ПодписантИмя", Объект.ПодписантИмя);
		Данные.Вставить("ПодписантОтчество", Объект.ПодписантОтчество);
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2019_1(Данные, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(СведенияОтправки)
	Префикс = "UT_UVKIK";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Процедура Проверить_Форма2017_1(Данные, УникальныйИдентификатор)
	Титульная = Данные.ДанныеУведомления.Титульная;
	
	Если (Не ЗначениеЗаполнено(Титульная.НалПер))
		Или (Не ЗначениеЗаполнено(Титульная.ПрНП)) Тогда 
		
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не указан налоговый период и/или код налогоплательщика на титульной странице", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
		
	Ошибок = 0;
	ЛистыАБ = 0;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистА Цикл 
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда 
			ЛистыАБ = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистБ Цикл 
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда 
			ЛистыАБ = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЛистыАБ = 0 Тогда 
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Отсутствует Лист А и Лист Б", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистА Цикл 
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда
			СтрОписание = "ИО-"+Формат(Лист.Значение.НомерКИКЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
			
			Если Не ЗначениеЗаполнено(Лист.Значение.ДоляПрямУч)
				И Не ЗначениеЗаполнено(Лист.Значение.ДоляКосУч) Тогда 
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 2.2 или 2.3 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
		
			Если (Не ЗначениеЗаполнено(Лист.Значение.Код101)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код102))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код103)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код104))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код105)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 101-105 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.Код201)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код202))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код203)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код204))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код205)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 201-205 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Лист.Значение.ПрСамПризн) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнен пункт 1.3 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.НаимОрг)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимОргЛат)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 1-2 на листе А/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
		КонецЕсли;
			
		Если Ошибок > 3 Тогда
			ВызватьИсключение "";
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистБ Цикл
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда
			СтрОписание = "ИС-"+Формат(Лист.Значение.НомерКИКЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.Код106)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код107))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код108)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код109))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код110)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код111))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код112)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 106-112 на листе Б/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Лист.Значение.ПрСамПризн) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнен пункт 3 на листе Б/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(Лист.Значение.НаимОрг)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимОргЛат))
				Или (Не ЗначениеЗаполнено(Лист.Значение.НаимДокУчр)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимДокУчрЛат))
				Или (Не ЗначениеЗаполнено(Лист.Значение.ДатаУчрИСДата)) Или (Не ЗначениеЗаполнено(Лист.Значение.СтрРег)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 2-6 на листе Б/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистВ Цикл
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИК) Тогда 
			СтрОписание = Лист.Значение.НомерКИК;
			
			Если Лист.Значение.ПорОпрПрКИК = "1" И Не ЗначениеЗаполнено(Лист.Значение.ДатаПослДнПерДата) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункт 3 на листе В при значении п.2 = 1/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если Лист.Значение.ПорОпрПрКИК = "1" И Не ЗначениеЗаполнено(Лист.Значение.ДатаСостФОДата) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункт 4 на листе В при значении п.2 = 1/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если Лист.Значение.ПорОпрПрКИК = "2" И Не ЗначениеЗаполнено(Лист.Значение.ДатаПослДнПерГл25Дата) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункт 5 на листе В при значении п.2 = 2/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(Лист.Значение.Код1001)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код1002))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код1003)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код1004))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код1005)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код1006))
				Или (Не ЗначениеЗаполнено(Лист.Значение.Код1007)) Или (Не ЗначениеЗаполнено(Лист.Значение.Код1008)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункты 1001-1008 на листе В/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(Лист.Значение.ПорОпрПрКИК)) Тогда
				
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены пункт 2 на листе В/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистГ1 Цикл
		Если ЗначениеЗаполнено(Лист.Значение.НомерРосОрг) Тогда 
			СтрОписание = "РО-"+Формат(Лист.Значение.НомерРосОрг, "ЧЦ=5; ЧВН=; ЧГ=");
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.ОГРН)) Или (Не ЗначениеЗаполнено(Лист.Значение.ИННЮЛ))
				Или (Не ЗначениеЗаполнено(Лист.Значение.КПП)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимОрг)) Тогда 
			
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены обязательные пункты 2-5 на листе Г-1/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистГ2 Цикл
		Если ЗначениеЗаполнено(Лист.Значение.НомерИО) Тогда 
			СтрОписание = "ИО-"+Формат(Лист.Значение.НомерИО, "ЧЦ=5; ЧВН=; ЧГ=");
			
			Если (Не ЗначениеЗаполнено(Лист.Значение.НаимОрг)) Или (Не ЗначениеЗаполнено(Лист.Значение.НаимОргЛат))
				Или (Не ЗначениеЗаполнено(Лист.Значение.СтрРег)) Тогда 
			
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнены обязательные пункты 1-3 на листе Г-2/" + СтрОписание, УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр Цикл 
		Если ЗначениеЗаполнено(Стр.НомерУч) И Не (ЗначениеЗаполнено(Стр.ДоляУчКосв) Или ЗначениеЗаполнено(Стр.ДоляУчПрям)) Тогда 
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("В свободных строках листа Г должен быть заполнен пункт 3.2 или  3.3", УникальныйИдентификатор);
			Ошибок = Ошибок + 1;
			Если Ошибок > 3 Тогда
				ВызватьИсключение "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Ошибок > 0 Тогда
		ВызватьИсключение "";
	КонецЕсли;
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура;
	ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация));
	
	Если ОсновныеСведения.ЭтоПБОЮЛ Тогда
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	Иначе 
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПЮЛ(Объект, ОсновныеСведения);
	КонецЕсли;
	
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.ДатаПодписи, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("ФамилияПодп", Объект.ПодписантФамилия);
	ОсновныеСведения.Вставить("ИмяПодп", Объект.ПодписантИмя);
	ОсновныеСведения.Вставить("ОтчествоПодп", Объект.ПодписантОтчество);
	ОсновныеСведения.Вставить("НаимДок", Объект.ПодписантДокумент);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("КодНО", Данные.ДанныеУведомления.Титульная.КодНО);
	ОсновныеСведения.Вставить("ПрПодп", Данные.ДанныеУведомления.Титульная.ПРИЗНАК_НП_ПОДВАЛ);
	ОсновныеСведения.Вставить("ЭлАдрес", Данные.ДанныеУведомления.Титульная.ЭлАдрес);
	ОсновныеСведения.Вставить("ТлфПодп", Данные.ДанныеУведомления.Титульная.Тлф);
	ОсновныеСведения.Вставить("ИННПодп", Данные.ДанныеУведомления.Титульная.ИННФЛ);
	ОсновныеСведения.Вставить("ИННТитул", Данные.ДанныеУведомления.Титульная.ИНН);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2019_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура;
	ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация));
	
	Если ОсновныеСведения.ЭтоПБОЮЛ Тогда
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	Иначе 
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПЮЛ(Объект, ОсновныеСведения);
	КонецЕсли;
	
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.ДатаПодписи, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("ФамилияПодп", Объект.ПодписантФамилия);
	ОсновныеСведения.Вставить("ИмяПодп", Объект.ПодписантИмя);
	ОсновныеСведения.Вставить("ОтчествоПодп", Объект.ПодписантОтчество);
	ОсновныеСведения.Вставить("НаимДок", Объект.ПодписантДокумент);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("КодНО", Данные.ДанныеУведомления.Титульная.КодНО);
	ОсновныеСведения.Вставить("ПрПодп", Данные.ДанныеУведомления.Титульная.ПРИЗНАК_НП_ПОДВАЛ);
	ОсновныеСведения.Вставить("ЭлАдрес", Данные.ДанныеУведомления.Титульная.ЭлАдрес);
	ОсновныеСведения.Вставить("ТлфПодп", Данные.ДанныеУведомления.Титульная.Тлф);
	ОсновныеСведения.Вставить("ИННПодп", Данные.ДанныеУведомления.Титульная.ИННФЛ);
	ОсновныеСведения.Вставить("ИННТитул", Данные.ДанныеУведомления.Титульная.ИНН);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2017_1(ДанныеУведомления, УникальныйИдентификатор);
	Если Ошибки.Количество() > 0 Тогда 
		Если ДанныеУведомления.Свойство("РазрешитьВыгружатьСОшибками") И ДанныеУведомления.РазрешитьВыгружатьСОшибками = Ложь Тогда 
			ОбщегоНазначения.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""", Объект.Ссылка);
			ВызватьИсключение "";
		Иначе 
			ОбщегоНазначения.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""", Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2017_1");
	ЗаполнитьДанными_Форма2017_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_Форма2019_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДанныеУведомления.Вставить("Организация", Объект.Организация);
	ДанныеУведомления.Вставить("ПодписантФамилия", Объект.ПодписантФамилия);
	ДанныеУведомления.Вставить("ПодписантИмя", Объект.ПодписантИмя);
	ДанныеУведомления.Вставить("ПодписантОтчество", Объект.ПодписантОтчество);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2019_1(ДанныеУведомления, УникальныйИдентификатор);
	Если Ошибки.Количество() > 0 Тогда 
		Если ДанныеУведомления.Свойство("РазрешитьВыгружатьСОшибками") И ДанныеУведомления.РазрешитьВыгружатьСОшибками = Ложь Тогда 
			ОбщегоНазначения.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""", Объект.Ссылка);
			ВызватьИсключение "";
		Иначе 
			ОбщегоНазначения.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""", Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2019_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2019_1");
	ЗаполнитьДанными_Форма2019_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2017_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры_2017(ДанныеУведомления);
	ЗаполнитьДаннымиУзелНов(ДанныеУведомления, ДеревоВыгрузки);
КонецПроцедуры

Функция ПолучитьСтруктураЛистГ1ДляВыгрузки_2017()
	Возврат Новый Структура("УИД, УИДРодителя, НомерРосОрг, ОГРН, ИННЮЛ, КПП, НаимОрг");
КонецФункции

Функция ПолучитьСтруктураЛистГ2ДляВыгрузки_2017()
	Рез = Новый Структура("УИД, УИДРодителя");
	Рез.Вставить("НомерИО");
	Рез.Вставить("НаимОрг");
	Рез.Вставить("НаимОргЛат");
	Рез.Вставить("СтрРег");
	Рез.Вставить("РегНомер");
	Рез.Вставить("КодНПРег");
	Рез.Вставить("АдрСтрРег");
	Возврат Рез;
КонецФункции

Функция ПолучитьСтруктураЛистГ00ДляВыгрузки_2017()
	Возврат Новый Структура("УИД, УИДРодителя, ДоляУчКосв, ДоляУчПрям, НомерУч");
КонецФункции

Функция ПолучитьСтруктураЛистГ0ДляВыгрузки_2017()
	Возврат Новый Структура("УИД, УИДРодителя, НомерПосл, ДоляКосвПослИт");
КонецФункции

Функция ПолучитьСтруктураЛистГДляВыгрузки_2017()
	Возврат Новый Структура("УИД, НомерКИК, НаимОрг, ДоляУчКосвИт");
КонецФункции

Процедура СформироватьПараметрыДляЛистовГ_2017(Параметры)
	УИДыЛистГ = Новый Соответствие;
	ВсеУчастникиЛистыГ = Новый Соответствие;
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ Цикл
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.НомерКИК) Тогда 
			Если ВсеУчастникиЛистыГ[ПарамСтр.НомерКИК] = Неопределено Тогда 
				ВсеУчастникиЛистыГ.Вставить(ПарамСтр.НомерКИК, Новый СписокЗначений);
				УИДыЛистГ.Вставить(ПарамСтр.НомерКИК, ПарамСтр.УИД);
			КонецЕсли;
			ВсеУчастникиЛистыГ[ПарамСтр.НомерКИК].Добавить(ПарамСтр);
		КонецЕсли;
	КонецЦикла;
	
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ЛистГДляВыгрузки", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ЛистГ0ДляВыгрузки", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ЛистГ00ДляВыгрузки", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ЛистГ1ДляВыгрузки", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ЛистГ2ДляВыгрузки", Новый СписокЗначений);
	
	Для Каждого КЗ Из ВсеУчастникиЛистыГ Цикл
		Стр = ПолучитьСтруктураЛистГДляВыгрузки_2017();
		ЗаполнитьЗначенияСвойств(Стр, КЗ.Значение[0].Значение);
		Параметры.ДанныеМногостраничныхРазделов.ЛистГДляВыгрузки.Добавить(Стр);
		
		УИДРодителя = КЗ.Значение[0].Значение.УИД;
		Для Каждого Элт Из КЗ.Значение Цикл
			Стр = ПолучитьСтруктураЛистГ0ДляВыгрузки_2017();
			ЗаполнитьЗначенияСвойств(Стр, Элт.Значение);
			Стр.УИДРодителя = УИДРодителя;
			Стр.НомерПосл = Формат(Стр.НомерПосл, "ЧЦ=5; ЧН=; ЧВН=; ЧГ=");
			Параметры.ДанныеМногостраничныхРазделов.ЛистГ0ДляВыгрузки.Добавить(Стр);
			
			МнгСтрСтроки = Параметры.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", Элт.Значение.УИД));
			Для Каждого СтрокаМнг Из МнгСтрСтроки Цикл
				СтрПодч = ПолучитьСтруктураЛистГ00ДляВыгрузки_2017();
				ЗаполнитьЗначенияСвойств(СтрПодч, СтрокаМнг);
				СтрПодч.УИДРодителя = Стр.УИД;
				Параметры.ДанныеМногостраничныхРазделов.ЛистГ00ДляВыгрузки.Добавить(СтрПодч);
			КонецЦикла;
			
			Для Каждого ЛистГ1 Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ1 Цикл 
				Если ЛистГ1.Значение.УИДРодителя = Элт.Значение.УИД 
					И ЗначениеЗаполнено(ЛистГ1.Значение.НомерРосОрг) Тогда 
					
					СтрГ1 = ПолучитьСтруктураЛистГ1ДляВыгрузки_2017();
					ЗаполнитьЗначенияСвойств(СтрГ1, ЛистГ1.Значение);
					СтрГ1.УИДРодителя = УИДРодителя;
					СтрГ1.НомерРосОрг = "РО-" + Формат(СтрГ1.НомерРосОрг, "ЧЦ=5; ЧН=; ЧВН=; ЧГ=");
					Параметры.ДанныеМногостраничныхРазделов.ЛистГ1ДляВыгрузки.Добавить(СтрГ1);
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого ЛистГ2 Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ2 Цикл 
				Если ЛистГ2.Значение.УИДРодителя = Элт.Значение.УИД 
					И ЗначениеЗаполнено(ЛистГ2.Значение.НомерИО) Тогда 
					
					СтрГ2 = ПолучитьСтруктураЛистГ2ДляВыгрузки_2017();
					ЗаполнитьЗначенияСвойств(СтрГ2, ЛистГ2.Значение);
					СтрГ2.УИДРодителя = УИДРодителя;
					СтрГ2.НомерИО = "ИО-" + Формат(СтрГ2.НомерИО, "ЧЦ=5; ЧН=; ЧВН=; ЧГ=");
					Параметры.ДанныеМногостраничныхРазделов.ЛистГ2ДляВыгрузки.Добавить(СтрГ2);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьДанными_Форма2019_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры_2019(ДанныеУведомления);
	ЗаполнитьДаннымиУзелНов(ДанныеУведомления, ДеревоВыгрузки);
КонецПроцедуры

Функция ПолучитьСтруктураЛистГ1ДляВыгрузки_2019()
	Возврат Новый Структура("УИД, УИДРодителя, НомерРосОрг, ОГРН, ИННЮЛ, КПП, НаимОрг, ПрПредДокОсв");
КонецФункции

Функция ПолучитьСтруктураЛистГ2ДляВыгрузки_2019()
	Рез = Новый Структура("УИД, УИДРодителя");
	Рез.Вставить("НомерИО");
	Рез.Вставить("НаимОргЛат");
	Рез.Вставить("СтрРег");
	Рез.Вставить("РегНомер");
	Рез.Вставить("КодНПРег");
	Рез.Вставить("АдрСтрРег");
	Возврат Рез;
КонецФункции

Функция ПолучитьСтруктураЛистГ00ДляВыгрузки_2019()
	Возврат Новый Структура("УИД, УИДРодителя, ДоляУчКосв, ДоляУчПрям, НомерУч");
КонецФункции

Функция ПолучитьСтруктураЛистГ0ДляВыгрузки_2019()
	Возврат Новый Структура("УИД, УИДРодителя, НомерПосл, ДоляКосвПослИт");
КонецФункции

Функция ПолучитьСтруктураЛистГДляВыгрузки_2019()
	Возврат Новый Структура("УИД, НомерКИК, НаимОрг, ДоляУчКосвИт");
КонецФункции

Процедура СформироватьПараметрыДляЛистовГ_2019(Параметры)
	УИДыЛистГ = Новый Соответствие;
	ВсеУчастникиЛистыГ = Новый Соответствие;
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ Цикл
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.НомерКИК) Тогда 
			Если ВсеУчастникиЛистыГ[ПарамСтр.НомерКИК] = Неопределено Тогда 
				ВсеУчастникиЛистыГ.Вставить(ПарамСтр.НомерКИК, Новый СписокЗначений);
				УИДыЛистГ.Вставить(ПарамСтр.НомерКИК, ПарамСтр.УИД);
			КонецЕсли;
			ВсеУчастникиЛистыГ[ПарамСтр.НомерКИК].Добавить(ПарамСтр);
		КонецЕсли;
	КонецЦикла;
	
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ЛистГДляВыгрузки", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ЛистГ0ДляВыгрузки", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ЛистГ00ДляВыгрузки", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ЛистГ1ДляВыгрузки", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("ЛистГ2ДляВыгрузки", Новый СписокЗначений);
	
	Для Каждого КЗ Из ВсеУчастникиЛистыГ Цикл
		Стр = ПолучитьСтруктураЛистГДляВыгрузки_2019();
		ЗаполнитьЗначенияСвойств(Стр, КЗ.Значение[0].Значение);
		Параметры.ДанныеМногостраничныхРазделов.ЛистГДляВыгрузки.Добавить(Стр);
		
		УИДРодителя = КЗ.Значение[0].Значение.УИД;
		Для Каждого Элт Из КЗ.Значение Цикл
			Стр = ПолучитьСтруктураЛистГ0ДляВыгрузки_2019();
			ЗаполнитьЗначенияСвойств(Стр, Элт.Значение);
			Стр.УИДРодителя = УИДРодителя;
			Стр.НомерПосл = Формат(Стр.НомерПосл, "ЧЦ=5; ЧН=; ЧВН=; ЧГ=");
			Параметры.ДанныеМногостраничныхРазделов.ЛистГ0ДляВыгрузки.Добавить(Стр);
			
			МнгСтрСтроки = Параметры.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", Элт.Значение.УИД));
			Для Каждого СтрокаМнг Из МнгСтрСтроки Цикл
				СтрПодч = ПолучитьСтруктураЛистГ00ДляВыгрузки_2019();
				ЗаполнитьЗначенияСвойств(СтрПодч, СтрокаМнг);
				СтрПодч.УИДРодителя = Стр.УИД;
				Параметры.ДанныеМногостраничныхРазделов.ЛистГ00ДляВыгрузки.Добавить(СтрПодч);
			КонецЦикла;
			
			Для Каждого ЛистГ1 Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ1 Цикл 
				Если ЛистГ1.Значение.УИДРодителя = Элт.Значение.УИД 
					И ЗначениеЗаполнено(ЛистГ1.Значение.НомерРосОрг) Тогда 
					
					СтрГ1 = ПолучитьСтруктураЛистГ1ДляВыгрузки_2019();
					ЗаполнитьЗначенияСвойств(СтрГ1, ЛистГ1.Значение);
					СтрГ1.УИДРодителя = УИДРодителя;
					СтрГ1.НомерРосОрг = "РО-" + Формат(СтрГ1.НомерРосОрг, "ЧЦ=5; ЧН=; ЧВН=; ЧГ=");
					Параметры.ДанныеМногостраничныхРазделов.ЛистГ1ДляВыгрузки.Добавить(СтрГ1);
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого ЛистГ2 Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ2 Цикл 
				Если ЛистГ2.Значение.УИДРодителя = Элт.Значение.УИД 
					И ЗначениеЗаполнено(ЛистГ2.Значение.НомерИО) Тогда 
					
					СтрГ2 = ПолучитьСтруктураЛистГ2ДляВыгрузки_2019();
					ЗаполнитьЗначенияСвойств(СтрГ2, ЛистГ2.Значение);
					СтрГ2.УИДРодителя = УИДРодителя;
					СтрГ2.НомерИО = "ИО-" + Формат(СтрГ2.НомерИО, "ЧЦ=5; ЧН=; ЧВН=; ЧГ=");
					Параметры.ДанныеМногостраничныхРазделов.ЛистГ2ДляВыгрузки.Добавить(СтрГ2);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Функция СтраницаЗаполнена(Данные)
	Если ТипЗнч(Данные) = Тип("Структура") Тогда 
		Для Каждого КЗ Из Данные Цикл 
			Если ТипЗнч(КЗ.Значение) = Тип("УникальныйИдентификатор") Тогда 
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(КЗ.Значение) Тогда 
				Возврат Истина
			КонецЕсли;
		КонецЦикла;
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

Процедура ДополнитьПараметры_2017(Параметры)
	СформироватьПараметрыДляЛистовГ_2017(Параметры);
	
	Если Не ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.НомерКорректировки) Тогда 
		Параметры.ДанныеУведомления.Титульная.НомерКорректировки = "0";
	КонецЕсли;
	
	Если Параметры.ДанныеУведомления.Свойство("ЛистСведФЛ") Тогда 
		ПарамСтр = Параметры.ДанныеУведомления.ЛистСведФЛ;
		ПарамСтр.Вставить("ДатаДок", Формат(ПарамСтр.ДатаДокДата, "ДФ=dd.MM.yyyy; ДП=' '"));
		ПарамСтр.Вставить("ДатаДок1", Формат(ПарамСтр.ДатаДокДата1, "ДФ=dd.MM.yyyy; ДП=' '"));
		ПарамСтр.Вставить("ДатаРожд", Формат(ПарамСтр.ДатаРождДата, "ДФ=dd.MM.yyyy; ДП=' '"));
	КонецЕсли;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистА Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("НомерКИК", "ИО-" + Формат(ПарамСтр.НомерКИКЧисло, "ЧЦ=5; ЧВН=; ЧГ="));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистБ Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("НомерКИК", "ИС-" + Формат(ПарамСтр.НомерКИКЧисло, "ЧЦ=5; ЧВН=; ЧГ="));
			ПарамСтр.Вставить("ДатаУчрИС", Формат(ПарамСтр.ДатаУчрИСДата, "ДФ=dd.MM.yyyy; ДП=' '"));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистВ Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("ДатаПослДнПер", Формат(ПарамСтр.ДатаПослДнПерДата, "ДФ=dd.MM.yyyy; ДП=' '"));
			ПарамСтр.Вставить("ДатаСостФО", Формат(ПарамСтр.ДатаСостФОДата, "ДФ=dd.MM.yyyy; ДП=' '"));
			ПарамСтр.Вставить("ДатаПослДнПерГл25", Формат(ПарамСтр.ДатаПослДнПерГл25Дата, "ДФ=dd.MM.yyyy; ДП=' '"));
			ПарамСтр.Вставить("ДатаСостАудЗакл", Формат(ПарамСтр.ДатаСостАудЗаклДата, "ДФ=dd.MM.yyyy; ДП=' '"));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ДополнитьПараметры_2019(Параметры)
	СформироватьПараметрыДляЛистовГ_2019(Параметры);
	
	Если Не ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.НомерКорректировки) Тогда 
		Параметры.ДанныеУведомления.Титульная.НомерКорректировки = "0";
	КонецЕсли;
	
	Если Параметры.ДанныеУведомления.Свойство("ЛистСведФЛ") Тогда 
		ПарамСтр = Параметры.ДанныеУведомления.ЛистСведФЛ;
		ПарамСтр.Вставить("ДатаДок", Формат(ПарамСтр.ДатаДокДата, "ДФ=dd.MM.yyyy; ДП=' '"));
		ПарамСтр.Вставить("ДатаДок1", Формат(ПарамСтр.ДатаДокДата1, "ДФ=dd.MM.yyyy; ДП=' '"));
		ПарамСтр.Вставить("ДатаРожд", Формат(ПарамСтр.ДатаРождДата, "ДФ=dd.MM.yyyy; ДП=' '"));
	КонецЕсли;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистА Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("НомерКИК", "ИО-" + Формат(ПарамСтр.НомерКИКЧисло, "ЧЦ=5; ЧВН=; ЧГ="));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистБ Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("НомерКИК", "ИС-" + Формат(ПарамСтр.НомерКИКЧисло, "ЧЦ=5; ЧВН=; ЧГ="));
			ПарамСтр.Вставить("ДатаУчрИС", Формат(ПарамСтр.ДатаУчрИСДата, "ДФ=dd.MM.yyyy; ДП=' '"));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистВ Цикл
		ПарамСтр = Стр.Значение;
		Если СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("ДатаПослДнПер", Формат(ПарамСтр.ДатаПослДнПерДата, "ДФ=dd.MM.yyyy; ДП=' '"));
			ПарамСтр.Вставить("ДатаСостФО", Формат(ПарамСтр.ДатаСостФОДата, "ДФ=dd.MM.yyyy; ДП=' '"));
			ПарамСтр.Вставить("ДатаПослДнПерГл25", Формат(ПарамСтр.ДатаПослДнПерГл25Дата, "ДФ=dd.MM.yyyy; ДП=' '"));
			ПарамСтр.Вставить("ДатаСостАудЗакл", Формат(ПарамСтр.ДатаСостАудЗаклДата, "ДФ=dd.MM.yyyy; ДП=' '"));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Узел, ПараметрыТекущейСтраницы = Неопределено, УИДРодителя = Неопределено)
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		Если Стр.Тип = "А" Или Стр.Тип = "A" Или Стр.Тип = "П" Тогда
			Если ЗначениеЗаполнено(Стр.Ключ) Тогда
				ЗначениеПоказателя = Неопределено;
				Если ПараметрыТекущейСтраницы <> Неопределено И ПараметрыТекущейСтраницы.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда 
					Если ЗначениеПоказателя = Неопределено И (Стр.Обязательность = "О" Или Стр.Обязательность = "O") И Стр.Формат = "N" Тогда 
						ЗначениеПоказателя = 0;
					КонецЕсли;
					РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
				ИначеЕсли ПараметрыТекущейСтраницы = Неопределено 
					И ЗначениеЗаполнено(Стр.Раздел)
					И ПараметрыВыгрузки.ДанныеУведомления.Свойство(Стр.Раздел, ЗначениеПоказателя) Тогда 
					Если ЗначениеПоказателя.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда
						Если ЗначениеПоказателя = Неопределено И (Стр.Обязательность = "О" Или Стр.Обязательность = "O") И Стр.Формат = "N" Тогда 
							ЗначениеПоказателя = 0;
						КонецЕсли;
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда
			Если Стр.Многостраничность = Истина Тогда
				Многостраничность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеМногостраничныхРазделов.Свойство(Стр.Раздел, Многостраничность)
					И ТипЗнч(Многостраничность) = Тип("СписокЗначений") Тогда
				
					Для Каждого СтрМнгч Из Многостраничность Цикл 
						Если УИДРодителя = Неопределено Или СтрМнгч.Значение.УИДРодителя = УИДРодителя Тогда 
							НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
							ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, НовУзел, СтрМнгч.Значение, СтрМнгч.Значение.УИД);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			Иначе
				ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Стр, ПараметрыТекущейСтраницы, УИДРодителя)
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ВывестиЧислоНаПечать(Число, ПрефиксПараметра, ОбластиМакета) Экспорт
	Инд = 1;
	ИмяПараметра = ПрефиксПараметра + "_1";
	Область = ОбластиМакета.Найти(ИмяПараметра);
	ЗнаковПослеЗапятой = 0;
	ЗнаковДоЗапятой = 1;
	
	Если Область = Неопределено 
		Или Область.Лево <> Область.Право Тогда 
		Возврат;
	КонецЕсли;
	
	Координата = Область.Лево;
	
	Пока Истина Цикл 
		Инд = Инд + 1;
		ИмяПараметра = ПрефиксПараметра + "_" + Инд;
		Область = ОбластиМакета.Найти(ИмяПараметра);
		Если Область = Неопределено 
			Или Область.Лево <> Область.Право Тогда 
			Прервать;
		КонецЕсли;
		
		ЗнаковДоЗапятой = ЗнаковДоЗапятой + 1;
		Если ЗнаковПослеЗапятой > 0 
			Или Область.Лево > Координата + 1 Тогда 
			
			ЗнаковПослеЗапятой = ЗнаковПослеЗапятой + 1;
			ЗнаковДоЗапятой = ЗнаковДоЗапятой - 1;
		КонецЕсли;
		
		Координата = Координата + 1;
	КонецЦикла;
	
	Если Число = 0 Тогда 
		Ч = "-------------------------------------------------";
	Иначе
		Ч = Лев(Формат(Цел(Число), "ЧН=0; ЧГ=") + "-------------------------------------------------", ЗнаковДоЗапятой);
		Ч2 = Прав("00000000000000000000000000000000000000000000" + Формат(   (Число - Цел(Число)) * Pow(10, ЗнаковПослеЗапятой), "ЧГ="), ЗнаковПослеЗапятой);
		Пока Прав(Ч2, 1) = "0" Цикл 
			Ч2 = Лев(Ч2, СтрДлина(Ч2) - 1);
		КонецЦикла;
		Ч = Ч + Ч2 + "-------------------------------------------------";
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Ч, ПрефиксПараметра, ОбластиМакета);
КонецПроцедуры

Процедура НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП)
	Попытка
		МакетПФ = Отчеты.РегламентированноеУведомлениеКИК.ПолучитьМакет(ИмяМакета);
	Исключение
		Возврат;
	КонецПопытки;
	
	НомСтр = НомСтр + 1;
	Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
		Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области, "-");
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда 
			ВывестиЧислоНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли КЗ.Значение = Неопределено Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", КЗ.Ключ, МакетПФ.Области, "-");
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", МакетПФ.Области, "-");
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, СтруктураДанныхСтраницы);
	ПечатнаяФорма.Вывести(МакетПФ);
КонецПроцедуры

Процедура ДополнитьТекстовоеПредставление(ПечатнаяФорма, ТекстовоеПредставлениеДатыПодписи, ИмяОбласти = "ТекстовоеПредставлениеДатыПодписи")
	Обл = ПечатнаяФорма.Области.Найти(ИмяОбласти);
	Если Не Обл = Неопределено Тогда 
		Обл.Текст = ТекстовоеПредставлениеДатыПодписи;
	КонецЕсли;
КонецПроцедуры

Процедура НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПарам, ПечатнаяФорма, НомСтр, ИННКПП)
	МакетыПФ = СтрПарам.МакетыПФ;
	ИмяМакета = СтрПарам.ИмяМакета;
	
	Если Не ЗначениеЗаполнено(МакетыПФ) И Не ЗначениеЗаполнено(ИмяМакета) Тогда 
		Для Каждого СтрПодч Из СтрПарам.Строки Цикл
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ИННКПП);
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МакетыПФ) Тогда 
		МассивИменМакетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МакетыПФ, ";");
	Иначе 
		МассивИменМакетов = Новый Массив;
		МассивИменМакетов.Добавить("Печать_" + ИмяМакета);
	КонецЕсли;
	
	Если СтруктураПараметров.ДанныеУведомления.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
			СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[СтрПарам.ИДНаименования];
			Если СтрПарам.ИДНаименования = "ЛистСведФЛ" И ЗначениеЗаполнено(ИННКПП.ИНН) Тогда
				Продолжить;
			КонецЕсли;
			
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
				НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП);
				Если СтрПарам.ИДНаименования = "Титульная" Тогда
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантФамилия, "ПодпФ", ПечатнаяФорма.Области, "-");
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантИмя, "ПодпИ", ПечатнаяФорма.Области, "-");
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантОтчество, "ПодпО", ПечатнаяФорма.Области, "-");
					ПечатнаяФорма.Области.ЭлАдрес.Текст = СтруктураДанныхСтраницы.ЭлАдрес;
					Если Не ЗначениеЗаполнено(СтруктураДанныхСтраницы.НомерКорректировки) Тогда
						УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0--", "НомерКорректировки", ПечатнаяФорма.Области);
					КонецЕсли;
				КонецЕсли;
				ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ТекстовоеПредставлениеДатыПодписи);
				ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ФамилияВерх, "ФамилияВерх");
				ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ИмяВерх, "ИмяВерх");
				ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ОтчествоВерх, "ОтчествоВерх");
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли СтруктураПараметров.ДанныеМногостраничныхРазделов.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого МнгСтр Из СтруктураПараметров.ДанныеМногостраничныхРазделов[СтрПарам.ИДНаименования] Цикл
			Если СтрПарам.УИД <> МнгСтр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;
			
			Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
				Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(МнгСтр.Значение) Тогда 
					Если СтрПарам.ИДНаименования = "ЛистГ" Тогда
						ДопСтроки = СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", МнгСтр.Значение.УИД));
						
						Для Инд = 0 По ДопСтроки.ВГраница() Цикл 
							Если Инд%8 = 0 Тогда 
								НапечататьСтруктуру(МнгСтр.Значение, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП);
							КонецЕсли;
							
							СтрокаНаЛисте = "_" + (Инд%8 + 1);
							ТекМнгСтрока = ДопСтроки[Инд];
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ТекМнгСтрока.НомерУч, "НомерУч"+СтрокаНаЛисте, ПечатнаяФорма.Области, "-");
							ВывестиЧислоНаПечать(ТекМнгСтрока.ДоляУчПрям, "ДоляУчПрям"+СтрокаНаЛисте, ПечатнаяФорма.Области);
							ВывестиЧислоНаПечать(ТекМнгСтрока.ДоляУчКосв, "ДоляУчКосв"+СтрокаНаЛисте, ПечатнаяФорма.Области);
							
							Если Инд%8 = 7 Или Инд = ДопСтроки.ВГраница() Тогда
								Если Инд = ДопСтроки.ВГраница() И Инд%8 <> 7 Тогда 
									Пока Инд%8 <> 7 Цикл
										Инд = Инд + 1;
										СтрокаНаЛисте = "_" + (Инд%8 + 1);
										УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("-------------", "НомерУч"+СтрокаНаЛисте, ПечатнаяФорма.Области, "-");
										ВывестиЧислоНаПечать(0, "ДоляУчПрям"+СтрокаНаЛисте, ПечатнаяФорма.Области);
										ВывестиЧислоНаПечать(0, "ДоляУчКосв"+СтрокаНаЛисте, ПечатнаяФорма.Области);
									КонецЦикла;
								КонецЕсли;
								ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ТекстовоеПредставлениеДатыПодписи);
								ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ФамилияВерх, "ФамилияВерх");
								ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ИмяВерх, "ИмяВерх");
								ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ОтчествоВерх, "ОтчествоВерх");
								УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
								ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
							КонецЕсли;
						КонецЦикла;
					Иначе 
						НапечататьСтруктуру(МнгСтр.Значение, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП);
						Если СтрПарам.ИДНаименования = "ЛистА" Или СтрПарам.ИДНаименования = "ЛистБ" Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.НомерКИКЧисло, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "НомерКИКЧисло", ПечатнаяФорма.Области);
						ИначеЕсли СтрПарам.ИДНаименования = "ЛистГ2" Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.НомерИО, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "НомерИО", ПечатнаяФорма.Области);
						ИначеЕсли СтрПарам.ИДНаименования = "ЛистГ1" Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.НомерРосОрг, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "НомерРосОрг", ПечатнаяФорма.Области);
						КонецЕсли;
						Если СтрПарам.ИДНаименования = "ЛистА" Тогда 
							Если Не ЗначениеЗаполнено(МнгСтр.Значение.ДоляПрямУч) Тогда 
								УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0-------------------------------", "ДоляПрямУч", ПечатнаяФорма.Области);
							КонецЕсли;
							Если Не ЗначениеЗаполнено(МнгСтр.Значение.ДоляКосУч) Тогда 
								УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0-------------------------------", "ДоляКосУч", ПечатнаяФорма.Области);
							КонецЕсли;
							Если Не ЗначениеЗаполнено(МнгСтр.Значение.ДоляСмешУч) Тогда 
								УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0-------------------------------", "ДоляСмешУч", ПечатнаяФорма.Области);
							КонецЕсли;
						КонецЕсли;
						ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ТекстовоеПредставлениеДатыПодписи);
						ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ФамилияВерх, "ФамилияВерх");
						ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ИмяВерх, "ИмяВерх");
						ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ОтчествоВерх, "ОтчествоВерх");
						УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрПодч Из СтрПарам.Строки Цикл
				НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ИННКПП);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2017_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Титульная.ИНН);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	ИННКПП.Вставить("ТекстовоеПредставлениеДатыПодписи", Формат(СтруктураПараметров.ДанныеУведомления.Титульная.ДАТА_ПОДПИСИ, "ДЛФ=DD; ДП="));
	Если Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		ФИОИП = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.ДатаПодписи, "ФамилияИП, ИмяИП, ОтчествоИП");
		ИННКПП.Вставить("ФамилияВерх", ФИОИП.ФамилияИП);
		ИННКПП.Вставить("ИмяВерх", Лев(ВРег(СокрЛП(ФИОИП.ИмяИП)), 1));
		ИННКПП.Вставить("ОтчествоВерх", Лев(ВРег(СокрЛП(ФИОИП.ОтчествоИП)), 1));
	Иначе
		ИННКПП.Вставить("ФамилияВерх", "");
		ИННКПП.Вставить("ИмяВерх", "");
		ИННКПП.Вставить("ОтчествоВерх", "");
	КонецЕсли;
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ИННКПП);
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	
	Попытка
		Титульная = Данные.ДанныеУведомления.Титульная;
		
		Если Не ЗначениеЗаполнено(Титульная.НалПер) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан налоговый период на титульной странице", "Титульная", "НалПер"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.ПрНП) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак налогоплательщика на титульной странице", "Титульная", "ПрНП"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
		КонецЕсли;
			
		ЛистыАБ = 0;
		
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистА Цикл 
			Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда 
				ЛистыАБ = 1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистБ Цикл 
			Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда 
				ЛистыАБ = 1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЛистыАБ = 0 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Отсутствуют Листы А и Листы Б", "ЛистА", "НомерКИКЧисло", Данные.ДанныеМногостраничныхРазделов.ЛистА[0].Значение.УИД));
		КонецЕсли;
		
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистА Цикл
			ЛистТек = Лист.Значение;
			Если ЗначениеЗаполнено(ЛистТек.НомерКИКЧисло) Тогда
				СтрОписание = "ИО-"+Формат(ЛистТек.НомерКИКЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
				
				Если (Не ЗначениеЗаполнено(ЛистТек.ДоляПрямУч) И Не ЗначениеЗаполнено(ЛистТек.ДоляКосУч)) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Необходимо заполнить пункт 2.2 или 2.3 на листе А/" + СтрОписание, "ЛистА", "ДоляПрямУч", ЛистТек.УИД));
				КонецЕсли;
				Если (ЗначениеЗаполнено(ЛистТек.ДоляПрямУч) И ЗначениеЗаполнено(ЛистТек.ДоляКосУч) И (Не ЗначениеЗаполнено(ЛистТек.ДоляСмешУч))) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 2.4 на листе А/" + СтрОписание, "ЛистА", "ДоляСмешУч", ЛистТек.УИД));
				КонецЕсли;
				Если (Не ЗначениеЗаполнено(ЛистТек.ПрСамПризн)) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 1.3 на листе А/" + СтрОписание, "ЛистА", "ПрСамПризн", ЛистТек.УИД));
				КонецЕсли;
				Если (Не ЗначениеЗаполнено(ЛистТек.НаимОрг)) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 1 на листе А/" + СтрОписание, "ЛистА", "НаимОрг", ЛистТек.УИД));
				КонецЕсли;
				Если (Не ЗначениеЗаполнено(ЛистТек.НаимОргЛат)) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 1 на листе А/" + СтрОписание, "ЛистА", "НаимОргЛат", ЛистТек.УИД));
				КонецЕсли;
				Если (Не ЗначениеЗаполнено(ЛистТек.СтрРег)) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 3 на листе А/" + СтрОписание, "ЛистА", "СтрРег", ЛистТек.УИД));
				КонецЕсли;
				
				Для Инд = 1 По 5 Цикл
					СтрИмя = "Код" + (100 + Инд);
					Если (Не ЗначениеЗаполнено(Лист.Значение[СтрИмя])) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт "+(100+Инд)+" на листе А/" + СтрОписание, "ЛистА", СтрИмя, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
				Для Инд = 1 По 5 Цикл
					СтрИмя = "Код" + (200 + Инд);
					Если (Не ЗначениеЗаполнено(Лист.Значение[СтрИмя])) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт "+(200+Инд)+" на листе А/" + СтрОписание, "ЛистА", СтрИмя, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистБ Цикл
			ЛистТек = Лист.Значение;
			Если ЗначениеЗаполнено(ЛистТек.НомерКИКЧисло) Тогда
				СтрОписание = "ИС-"+Формат(ЛистТек.НомерКИКЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
				Если (Не ЗначениеЗаполнено(ЛистТек.ПрСамПризн)) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 2 на листе Б/" + СтрОписание, "ЛистБ", "ПрСамПризн", ЛистТек.УИД));
				КонецЕсли;
				Если (Не ЗначениеЗаполнено(ЛистТек.НаимОрг)) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 3 на листе Б/" + СтрОписание, "ЛистБ", "НаимОрг", ЛистТек.УИД));
				КонецЕсли;
				Если (Не ЗначениеЗаполнено(ЛистТек.НаимОргЛат)) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 3 на листе Б/" + СтрОписание, "ЛистБ", "НаимОргЛат", ЛистТек.УИД));
				КонецЕсли;
				Если (Не ЗначениеЗаполнено(ЛистТек.НаимДокУчр)) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 4 на листе Б/" + СтрОписание, "ЛистБ", "НаимДокУчр", ЛистТек.УИД));
				КонецЕсли;
				Если (Не ЗначениеЗаполнено(ЛистТек.НаимДокУчрЛат)) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 4 на листе Б/" + СтрОписание, "ЛистБ", "НаимДокУчрЛат", ЛистТек.УИД));
				КонецЕсли;
				Если (Не ЗначениеЗаполнено(ЛистТек.ДатаУчрИСДата)) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 5 на листе Б/" + СтрОписание, "ЛистБ", "ДатаУчрИСДата", ЛистТек.УИД));
				КонецЕсли;
				Если (Не ЗначениеЗаполнено(ЛистТек.СтрРег)) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 6 на листе Б/" + СтрОписание, "ЛистБ", "СтрРег", ЛистТек.УИД));
				КонецЕсли;
				Для Инд = 6 По 12 Цикл
					СтрИмя = "Код" + (100 + Инд);
					Если (Не ЗначениеЗаполнено(Лист.Значение[СтрИмя])) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт "+(100+Инд)+" на листе Б/" + СтрОписание, "ЛистБ", СтрИмя, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистВ Цикл
			ЛистТек = Лист.Значение;
			Если ЗначениеЗаполнено(ЛистТек.НомерКИК) Тогда
				СтрОписание = ЛистТек.НомерКИК;
				
				Если (Не ЗначениеЗаполнено(ЛистТек.ПорОпрПрКИК)) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 2 на листе В/" + СтрОписание, "ЛистВ", "ПорОпрПрКИК", ЛистТек.УИД));
				ИначеЕсли ЛистТек.ПорОпрПрКИК <> "1" И ЛистТек.ПорОпрПрКИК <> "2" Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Пункт 2 на листе В/" + СтрОписание + " должен быть равен 1 или 2", "ЛистВ", "ПорОпрПрКИК", ЛистТек.УИД));
				КонецЕсли;
				Если ЛистТек.ПорОпрПрКИК = "1" И Не ЗначениеЗаполнено(ЛистТек.ДатаПослДнПерДата) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 3 на листе В при значении п.2 = 1/" + СтрОписание, "ЛистВ", "ДатаПослДнПерДата", ЛистТек.УИД));
				КонецЕсли;
				Если ЛистТек.ПорОпрПрКИК = "1" И Не ЗначениеЗаполнено(ЛистТек.ДатаСостФОДата) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 4 на листе В при значении п.2 = 1/" + СтрОписание, "ЛистВ", "ДатаСостФОДата", ЛистТек.УИД));
				КонецЕсли;
				Если ЛистТек.ПорОпрПрКИК = "2" И Не ЗначениеЗаполнено(ЛистТек.ДатаПослДнПерГл25Дата) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 5 на листе В при значении п.2 = 2/" + СтрОписание, "ЛистВ", "ДатаПослДнПерГл25Дата", ЛистТек.УИД));
				КонецЕсли;
				Для Инд = 1 По 8 Цикл
					СтрИмя = "Код100" + Инд;
					Если (Не ЗначениеЗаполнено(Лист.Значение[СтрИмя])) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 100"+Инд+" на листе В/" + СтрОписание, "ЛистВ", СтрИмя, ЛистТек.УИД));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистГ1 Цикл
			Если ЗначениеЗаполнено(Лист.Значение.НомерРосОрг) Тогда 
				ЛистТек = Лист.Значение;
				СтрОписание = "РО-"+Формат(ЛистТек.НомерРосОрг, "ЧЦ=5; ЧВН=; ЧГ=");
				Если Не ЗначениеЗаполнено(ЛистТек.ОГРН) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен ОГРН на листе Г-1/" + СтрОписание, "ЛистГ1", "ОГРН", ЛистТек.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистТек.ИННЮЛ) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнено ИНН на листе Г-1/" + СтрОписание, "ЛистГ1", "ИННЮЛ", ЛистТек.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистТек.КПП) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнено КПП на листе Г-1/" + СтрОписание, "ЛистГ1", "КПП", ЛистТек.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистТек.НаимОрг) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнено наименование организации на листе Г-1/" + СтрОписание, "ЛистГ1", "НаимОрг", ЛистТек.УИД));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистГ2 Цикл
			Если ЗначениеЗаполнено(Лист.Значение.НомерИО) Тогда 
				ЛистТек = Лист.Значение;
				СтрОписание = "ИО-"+Формат(ЛистТек.НомерИО, "ЧЦ=5; ЧВН=; ЧГ=");
				Если Не ЗначениеЗаполнено(ЛистТек.НаимОрг) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнено наименование организации на листе Г-2/" + СтрОписание, "ЛистГ2", "НаимОрг", ЛистТек.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистТек.НаимОргЛат) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнено наименование организации латиницей на листе Г-2/" + СтрОписание, "ЛистГ2", "НаимОргЛат", ЛистТек.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистТек.СтрРег) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнена страна регистрации на листе Г-2/" + СтрОписание, "ЛистГ2", "СтрРег", ЛистТек.УИД));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ВсеУИД = Новый Соответствие;
		Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр Цикл
			ВсеУИД.Вставить(Стр.УИД);
		КонецЦикла;
		
		Для Каждого КЗ Из ВсеУИД Цикл 
			Строки = Данные.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", КЗ.Ключ));
			Инд = 0;
			Для Каждого Стр Из Строки Цикл 
				Инд = Инд + 1;
				Если ЗначениеЗаполнено(Стр.НомерУч) И Не (ЗначениеЗаполнено(Стр.ДоляУчКосв) Или ЗначениеЗаполнено(Стр.ДоляУчПрям)) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("В свободных строках листа Г должен быть заполнен пункт 3.2 или 3.3", "ЛистГ", "ДоляУчКосв___" + Формат(Инд, "ЧГ="), КЗ.Ключ));
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	Исключение
		ОбщегоНазначения.СообщитьПользователю("Возникла исключительная ситуация при проверке, обратитесь к администратору");
	КонецПопытки;
	
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2019_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	
	Если ЗначениеЗаполнено(Титульная.ФормРеорг) И Титульная.ФормРеорг <> "0"  Тогда
		Если Не ЗначениеЗаполнено(Титульная.ИННРеорг)
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИННРеорг, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан ИНН реорганизованной организации на титульной странице", "Титульная", "ИННРеорг"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КППРеорг)
			Или Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Титульная.КППРеорг, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно указан КПП реорганизованной организации на титульной странице", "Титульная", "КППРеорг"));
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.НалПер) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан налоговый период на титульной странице", "Титульная", "НалПер"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрНП) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак налогоплательщика на титульной странице", "Титульная", "ПрНП"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Титульная.ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ)
		И (Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Или Не ЗначениеЗаполнено(Данные.ПодписантИмя))Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указаны фамилия/имя представителя", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодНО)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНО))
		Или СтрДлина(СокрЛП(Титульная.КодНО)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан/неправильно указан налоговый орган", "Титульная", "КодНО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "3" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "4" Тогда 
		Если Не ЗначениеЗаполнено(Данные.ПодписантИмя) Или Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан подписант", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
		КонецЕсли;
	КонецЕсли;
	Если (Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "4")
		И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация) Тогда
		Если Не ЗначениеЗаполнено(Титульная.ИНН)
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен/неправильно заполнен ИНН на титульном листе", "Титульная", "ИНН"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КПП)
			Или Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Титульная.КПП, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен/неправильно заполнен КПП на титульном листе", "Титульная", "КПП"));
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(Титульная.ИНН) Тогда 
			Если Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Ложь, "") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно заполнен ИНН на титульном листе", "Титульная", "ИНН"));
			КонецЕсли;
		Иначе
			ЛистСведФЛ = Данные.ДанныеУведомления.ЛистСведФЛ;
			Если Не ЗначениеЗаполнено(ЛистСведФЛ.ДатаРождДата) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата рождения", "ЛистСведФЛ", "ДатаРождДата"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистСведФЛ.МестоРожд) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указано место рождения", "ЛистСведФЛ", "МестоРожд"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистСведФЛ.ПрГражд) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан признак гражданства", "ЛистСведФЛ", "ПрГражд"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистСведФЛ.КодВидДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код вида документа", "ЛистСведФЛ", "КодВидДок"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистСведФЛ.СерНомДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана серия и номер документа", "ЛистСведФЛ", "СерНомДок"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистСведФЛ.ДатаДокДата) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата выдачи документа", "ЛистСведФЛ", "ДатаДокДата"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистСведФЛ.ВыдДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан орган, выдавший документ", "ЛистСведФЛ", "ВыдДок"));
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ЛистСведФЛ.КодВидДок1) 
				Или ЗначениеЗаполнено(ЛистСведФЛ.СерНомДок1) 
				Или ЗначениеЗаполнено(ЛистСведФЛ.ДатаДокДата1) 
				Или ЗначениеЗаполнено(ЛистСведФЛ.ВыдДок1) Тогда 
				
				Если Не ЗначениеЗаполнено(ЛистСведФЛ.КодВидДок1) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код вида документа", "ЛистСведФЛ", "КодВидДок1"));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистСведФЛ.СерНомДок1) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана серия и номер документа", "ЛистСведФЛ", "СерНомДок1"));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистСведФЛ.ДатаДокДата1) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указана дата выдачи документа", "ЛистСведФЛ", "ДатаДокДата1"));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистСведФЛ.ВыдДок1) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан орган, выдавший документ", "ЛистСведФЛ", "ВыдДок1"));
				КонецЕсли;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ЛистСведФЛ.ОКСМ) 
				Или ЗначениеЗаполнено(ЛистСведФЛ.АдрИно) Тогда 
				
				Если Не ЗначениеЗаполнено(ЛистСведФЛ.ОКСМ) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан код государства", "ЛистСведФЛ", "ОКСМ"));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистСведФЛ.АдрИно) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не указан адрес", "ЛистСведФЛ", "АдрИно"));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Титульная.ИННФЛ)
		И Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИННФЛ, Ложь, "") Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Неправильно заполнен ИНН подписанта", "Титульная", "ИННФЛ"));
	КонецЕсли;
	
	ЛистыАБ = 0;
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистА Цикл 
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда 
			ЛистыАБ = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистБ Цикл 
		Если ЗначениеЗаполнено(Лист.Значение.НомерКИКЧисло) Тогда 
			ЛистыАБ = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЛистыАБ = 0 Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Отсутствуют Листы А и Листы Б", "ЛистА", "НомерКИКЧисло", Данные.ДанныеМногостраничныхРазделов.ЛистА[0].Значение.УИД));
	КонецЕсли;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистА Цикл
		ЛистТек = Лист.Значение;
		Если ЗначениеЗаполнено(ЛистТек.НомерКИКЧисло) Тогда
			Если (Не ЗначениеЗаполнено(ЛистТек.ДоляПрямУч) И Не ЗначениеЗаполнено(ЛистТек.ДоляКосУч)) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Необходимо заполнить пункт 2.2 или 2.3 на листе А", "ЛистА", "ДоляПрямУч", ЛистТек.УИД));
			КонецЕсли;
			Если (ЗначениеЗаполнено(ЛистТек.ДоляПрямУч) И ЗначениеЗаполнено(ЛистТек.ДоляКосУч) И (Не ЗначениеЗаполнено(ЛистТек.ДоляСмешУч))) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 2.4 на листе А", "ЛистА", "ДоляСмешУч", ЛистТек.УИД));
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(ЛистТек.ПрСамПризн)) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 1.3 на листе А", "ЛистА", "ПрСамПризн", ЛистТек.УИД));
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(ЛистТек.НаимОргЛат)) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнено наименование организации на листе А", "ЛистА", "НаимОргЛат", ЛистТек.УИД));
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(ЛистТек.СтрРег)) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнена страна регистрации на листе А", "ЛистА", "СтрРег", ЛистТек.УИД));
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(ЛистТек.ДатаРегИО)) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнена дата регистрации на листе А", "ЛистА", "ДатаРегИО", ЛистТек.УИД));
			КонецЕсли;
			
			Для Инд = 1 По 5 Цикл
				СтрИмя = "Код" + (100 + Инд);
				Если (Не ЗначениеЗаполнено(Лист.Значение[СтрИмя])) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт "+(100+Инд)+" на листе А", "ЛистА", СтрИмя, ЛистТек.УИД));
				КонецЕсли;
			КонецЦикла;
			Для Инд = 1 По 5 Цикл
				СтрИмя = "Код" + (200 + Инд);
				Если (Не ЗначениеЗаполнено(Лист.Значение[СтрИмя])) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт "+(200+Инд)+" на листе А", "ЛистА", СтрИмя, ЛистТек.УИД));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистБ Цикл
		ЛистТек = Лист.Значение;
		Если ЗначениеЗаполнено(ЛистТек.НомерКИКЧисло) Тогда
			Если (Не ЗначениеЗаполнено(ЛистТек.ПрСамПризн)) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт признак самостоятельного признания на листе Б", "ЛистБ", "ПрСамПризн", ЛистТек.УИД));
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(ЛистТек.НаимОргЛат)) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнено наименование организации листе Б", "ЛистБ", "НаимОргЛат", ЛистТек.УИД));
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(ЛистТек.НаимДокУчр)) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнено наименование документа на листе Б", "ЛистБ", "НаимДокУчр", ЛистТек.УИД));
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(ЛистТек.ДатаУчрИСДата)) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнена дата учреждения на листе Б", "ЛистБ", "ДатаУчрИСДата", ЛистТек.УИД));
			КонецЕсли;
			Если (Не ЗначениеЗаполнено(ЛистТек.СтрРег)) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен код государства листе Б", "ЛистБ", "СтрРег", ЛистТек.УИД));
			КонецЕсли;
			Для Инд = 6 По 12 Цикл
				СтрИмя = "Код" + (100 + Инд);
				Если (Не ЗначениеЗаполнено(Лист.Значение[СтрИмя])) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт "+(100+Инд)+" на листе Б", "ЛистБ", СтрИмя, ЛистТек.УИД));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистВ Цикл
		ЛистТек = Лист.Значение;
		Если ЗначениеЗаполнено(ЛистТек.НомерКИК) Тогда
			Если (Не ЗначениеЗаполнено(ЛистТек.ПорОпрПрКИК)) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 2 на листе В", "ЛистВ", "ПорОпрПрКИК", ЛистТек.УИД));
			ИначеЕсли ЛистТек.ПорОпрПрКИК <> "1" И ЛистТек.ПорОпрПрКИК <> "2" Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Пункт 2 на листе В должен быть равен 1 или 2", "ЛистВ", "ПорОпрПрКИК", ЛистТек.УИД));
			КонецЕсли;
			Если ЛистТек.ПорОпрПрКИК = "1" И Не ЗначениеЗаполнено(ЛистТек.ДатаПослДнПерДата) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 3 на листе В при значении п.2 = 1", "ЛистВ", "ДатаПослДнПерДата", ЛистТек.УИД));
			КонецЕсли;
			Если ЛистТек.ПорОпрПрКИК = "1" И Не ЗначениеЗаполнено(ЛистТек.ДатаСостФОДата) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 4 на листе В при значении п.2 = 1", "ЛистВ", "ДатаСостФОДата", ЛистТек.УИД));
			КонецЕсли;
			Если ЛистТек.ПорОпрПрКИК = "2" И Не ЗначениеЗаполнено(ЛистТек.ДатаПослДнПерГл25Дата) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 5 на листе В при значении п.2 = 2", "ЛистВ", "ДатаПослДнПерГл25Дата", ЛистТек.УИД));
			КонецЕсли;
			Для Инд = 1 По 9 Цикл
				СтрИмя = "Код100" + Инд;
				Если (Не ЗначениеЗаполнено(Лист.Значение[СтрИмя])) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен пункт 100"+Инд+" на листе В", "ЛистВ", СтрИмя, ЛистТек.УИД));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистГ Цикл
		ЛистТек = Лист.Значение;
		Если ЗначениеЗаполнено(ЛистТек.НомерКИК) Тогда
			
			Если Не ЗначениеЗаполнено(ЛистТек.НаимОрг) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнено название организации", "ЛистГ", "НаимОрг", ЛистТек.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистТек.ДоляУчКосвИт) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнена доля участия", "ЛистГ", "ДоляУчКосвИт", ЛистТек.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистТек.НомерПосл) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен номер последовательности", "ЛистГ", "НомерПосл", ЛистТек.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистТек.ДоляКосвПослИт) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнена доля участия в последовательности", "ЛистГ", "ДоляКосвПослИт", ЛистТек.УИД));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистГ1 Цикл
		Если ЗначениеЗаполнено(Лист.Значение.НомерРосОрг) Тогда 
			ЛистТек = Лист.Значение;
			Если ЗначениеЗаполнено(ЛистТек.ОГРН) 
				И Не РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(ЛистТек.ОГРН, Истина, "") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен/неправильно заполнен ОГРН на листе Г.1", "ЛистГ1", "ОГРН", ЛистТек.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистТек.ИННЮЛ)
				Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ЛистТек.ИННЮЛ, Истина, "") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен/неправильно заполнен ИНН на листе Г.1", "ЛистГ1", "ИННЮЛ", ЛистТек.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистТек.КПП)
				Или Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(ЛистТек.КПП, "") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен/неправильно заполнен КПП на листе Г.1", "ЛистГ1", "КПП", ЛистТек.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистТек.НаимОрг) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнено наименование организации на листе Г.1", "ЛистГ1", "НаимОрг", ЛистТек.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистТек.ПрПредДокОсв) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнен признак на листе Г.1", "ЛистГ1", "ПрПредДокОсв", ЛистТек.УИД));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистГ2 Цикл
		Если ЗначениеЗаполнено(Лист.Значение.НомерИО) Тогда 
			ЛистТек = Лист.Значение;
			Если Не ЗначениеЗаполнено(ЛистТек.НаимОргЛат) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнено наименование организации латиницей на листе Г.2", "ЛистГ2", "НаимОргЛат", ЛистТек.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистТек.СтрРег) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("Не заполнена страна регистрации на листе Г.2/", "ЛистГ2", "СтрРег", ЛистТек.УИД));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ВсеУИД = Новый Соответствие;
	Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр Цикл
		ВсеУИД.Вставить(Стр.УИД);
	КонецЦикла;
	
	Для Каждого КЗ Из ВсеУИД Цикл 
		Строки = Данные.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", КЗ.Ключ));
		Инд = 0;
		Для Каждого Стр Из Строки Цикл 
			Инд = Инд + 1;
			Если ЗначениеЗаполнено(Стр.НомерУч) И Не (ЗначениеЗаполнено(Стр.ДоляУчКосв) Или ЗначениеЗаполнено(Стр.ДоляУчПрям)) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам("В свободных строках листа Г должен быть заполнен пункт 3.2 или 3.3", "ЛистГ", "ДоляУчКосв___" + Формат(Инд, "ЧГ="), КЗ.Ключ));
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТаблицаОшибок;
КонецФункции

#КонецОбласти
#КонецЕсли
