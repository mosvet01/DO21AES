#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция СоздатьЗаполненноеУведомление(Параметры, СуществующийДокументСсылка = Неопределено) Экспорт
	
	ИмяФормы = Неопределено;
	Если НЕ Параметры.Свойство("ИмяФормы", ИмяФормы) Тогда
		ИмяФормы = "Форма2020_4";
	КонецЕсли;
	
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат СоздатьЗаполненноеУведомление_Форма2014_1(Параметры, СуществующийДокументСсылка);
		
	ИначеЕсли ИмяФормы = "Форма2020_4" Тогда
		Возврат СоздатьЗаполненноеУведомление_Форма2020_4(Параметры, СуществующийДокументСсылка);
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СоздатьЗаполненноеУведомление():
			|вызов функции с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецФункции

Функция СоответствиеПоказателейСтраницыРеквизитамАдреса(ИмяФормы, НазначениеАдреса = Неопределено) Экспорт
	
	СоответствиеПоказателей = Новый Структура;
	
	Если ИмяФормы = "Форма2020_4" Тогда
		ЗаполнитьСоответствиеРеквизитамАдреса_Форма2020_4(СоответствиеПоказателей, НазначениеАдреса);
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СоответствиеПоказателейСтраницыРеквизитамАдреса():
			|вызов функции с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
	Возврат СоответствиеПоказателей;
	
КонецФункции

Функция ДоступнаПечатьPDF417(ИмяФормы) Экспорт
	
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат Истина;
		
	ИначеЕсли ИмяФормы = "Форма2020_4" Тогда
		Возврат Истина;
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция ДоступнаПечатьPDF417():
			|вызов функции с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	
	Если ИмяФормы = "Форма2014_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2014_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении(
				"Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении(
				"При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
		
	ИначеЕсли ИмяФормы = "Форма2020_4" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2020_4(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении(
				"Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении(
				"При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция ПроверитьДокумент():
			|вызов функции с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2014_1(Объект, УникальныйИдентификатор);
		
	ИначеЕсли ИмяФормы = "Форма2020_4" Тогда
		Возврат ЭлектронноеПредставление_Форма2020_4(Объект, УникальныйИдентификатор);
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияОтчета

Функция СформироватьДеревоСтраниц(ИмяФормы) Экспорт
	
	Если ИмяФормы = "Форма2014_1" Тогда
		Возврат СформироватьДеревоСтраниц_Форма2014_1();
		
	ИначеЕсли ИмяФормы = "Форма2020_4" Тогда
		Возврат СформироватьДеревоСтраниц_Форма2020_4();
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СформироватьДеревоСтраниц():
			|вызов функции с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецФункции

Функция СформироватьДеревоСтраниц_Форма2014_1()
	
	ДеревоСтраниц = НовоеДеревоСтраниц();
	КорневойУровень = ДеревоСтраниц.Строки;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Стр. 001";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница1";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Лист001";
	Стр001.МакетыПФ = "Печать_Форма2014_1_Страница1_1;Печать_Форма2014_1_Страница1_2";
	
#Область ЛистыАБВ
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы А";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаА";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистА";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Б";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаБ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистБ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы В";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаВ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистВ";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаВ1;Печать_Форма2014_1_СтраницаВ2";
#КонецОбласти

#Область ЛистыГ
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Г 1";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаГ1";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистГ1";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаГ1";
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Листы Г 2-3";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаГ2_3";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистГ2_3";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаГ2;Печать_Форма2014_1_СтраницаГ3";
#КонецОбласти

#Область ЛистыДЕЖЗИ
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Д";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаД";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистД";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Е";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаЕ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЕ";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаЕ1;Печать_Форма2014_1_СтраницаЕ2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Ж";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаЖ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЖ";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаЖ1;Печать_Форма2014_1_СтраницаЖ2;Печать_Форма2014_1_СтраницаЖ3";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы З";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаЗ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЗ";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаЗ1;Печать_Форма2014_1_СтраницаЗ2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист И";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаИ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистИ";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧасть1");
#КонецОбласти

#Область ЛистыКЛМН
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист К";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаК";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистК";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Л";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаЛ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЛ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист М";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаМ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистМ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Н";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаН";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистН";
	Стр001.МакетыПФ = "Печать_Форма2014_1_СтраницаН1;Печать_Форма2014_1_СтраницаН2;Печать_Форма2014_1_СтраницаН3";
#КонецОбласти
	
	Возврат ДеревоСтраниц;
	
КонецФункции

Функция СформироватьДеревоСтраниц_Форма2020_4()
	
	ДеревоСтраниц = НовоеДеревоСтраниц();
	КорневойУровень = ДеревоСтраниц.Строки;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_Страница1";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Лист001";
	Стр001.МакетыПФ = "Печать_Форма2020_4_Страница1;Печать_Форма2020_4_Страница2;Печать_Форма2020_4_Страница3;Печать_Форма2020_4_Страница4";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧастьП010201");
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧастьП010407");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы А";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистА";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистА";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистА_1;Печать_Форма2020_4_ЛистА_2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Б";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистБ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистБ";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистБ_1;Печать_Форма2020_4_ЛистБ_2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы В";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистВ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистВ";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистВ_1;Печать_Форма2020_4_ЛистВ_2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Г";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистГ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистГ";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистГ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Д";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистД";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистД";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистД_1;Печать_Форма2020_4_ЛистД_2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Е";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистЕ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЕ";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистЕ_1;Печать_Форма2020_4_ЛистЕ_2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Ж";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистЖ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЖ";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистЖ";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧастьЖ010201");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист З";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистЗ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЗ";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистЗ";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧастьЗ010101");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы И";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистИ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистИ";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистИ_1;Печать_Форма2020_4_ЛистИ_2;Печать_Форма2020_4_ЛистИ_3";
	
	Возврат ДеревоСтраниц;
	
КонецФункции

Функция НовоеДеревоСтраниц()
	
	ДеревоСтраниц = Новый ДеревоЗначений;
	ДеревоСтраниц.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	ДеревоСтраниц.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("УИД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ДеревоСтраниц.Колонки.Добавить("ИмяМакета", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("Многостраничность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("Многострочность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("ИДНаименования", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("МногострочныеЧасти", Новый ОписаниеТипов("СписокЗначений"));
	ДеревоСтраниц.Колонки.Добавить("МакетыПФ", Новый ОписаниеТипов("Строка"));
	
	Возврат ДеревоСтраниц;
	
КонецФункции

Процедура ИнициализироватьМногострочныеЧасти(ИмяФормы, КонтейнерВходящий, КонтейнерРезультат) Экспорт
	
	Если ИмяФормы = "Форма2020_4" Тогда
		ДобавитьМногострочныеЧасти_Форма2020_4(КонтейнерРезультат);
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция ИнициализироватьМногострочныеЧасти():
			|вызов функции с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьМногострочныеЧасти_Форма2020_4(КонтейнерРезультат)
	
	ИмяРеквизита = "МногострочнаяЧастьП010201";
	ТаблицаМСЧ = Новый ТаблицаЗначений;
	ТаблицаМСЧ.Колонки.Добавить("П01020100", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(3)));
	ТаблицаМСЧ.Добавить();
	КонтейнерРезультат.Вставить(ИмяРеквизита, ТаблицаМСЧ);
	
	ИмяРеквизита = "МногострочнаяЧастьП010407";
	ТаблицаМСЧ = Новый ТаблицаЗначений;
	ТаблицаМСЧ.Колонки.Добавить("П01040701", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(50)));
	ТаблицаМСЧ.Колонки.Добавить("П01040702", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(255)));
	ТаблицаМСЧ.Добавить();
	КонтейнерРезультат.Вставить(ИмяРеквизита, ТаблицаМСЧ);
	
	ИмяРеквизита = "МногострочнаяЧастьЖ010201";
	ТаблицаМСЧ = Новый ТаблицаЗначений;
	ТаблицаМСЧ.Колонки.Добавить("Ж01020100", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(8)));
	ТаблицаМСЧ.Добавить();
	КонтейнерРезультат.Вставить(ИмяРеквизита, ТаблицаМСЧ);
	
	ИмяРеквизита = "МногострочнаяЧастьЗ010101";
	ТаблицаМСЧ = Новый ТаблицаЗначений;
	ТаблицаМСЧ.Колонки.Добавить("З01010100", Новый ОписаниеТипов("Строка"));
	ТаблицаМСЧ.Добавить();
	КонтейнерРезультат.Вставить(ИмяРеквизита, ТаблицаМСЧ);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

Функция СформироватьСписокЛистов(Объект, ЕстьВыходЗаГраницы = Ложь) Экспорт
	
	Если Объект.ИмяФормы = "Форма2014_1" Тогда
		Возврат СформироватьСписокЛистовФорма2014_1(Объект, ЕстьВыходЗаГраницы);
		
	ИначеЕсли Объект.ИмяФормы = "Форма2020_4" Тогда
		Возврат СформироватьСписокЛистовФорма2020_4(Объект, ЕстьВыходЗаГраницы);
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СформироватьСписокЛистов():
			|вызов функции с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецФункции

Функция СформироватьСписокЛистовФорма2014_1(Объект, ЕстьВыходЗаГраницы) Экспорт
	
	ЕстьВыходЗаГраницы = Ложь;
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		Если Стр.ИДНаименования = "ЛистИ" Тогда
			МногострочнаяЧасть = СтруктураПараметров.МногострочнаяЧасть1;
			А01010000 = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования].А01010000;
			Если Не ЗначениеЗаполнено(А01010000) Тогда
				Продолжить;
			КонецЕсли;
			
			ПечатнаяФорма = Отчеты.РегламентированноеУведомлениеФормаР11001.ПолучитьМакет("Печать_" + Стр.ИмяМакета);
			НомСтр = НомСтр + 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(А01010000, "А01010000", ПечатнаяФорма.Области);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
			
			ВсегоНапечатаноСтрок = 0;
			Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
				Если Не ЗначениеЗаполнено(СтрМнг.А01020000) Тогда
					Продолжить;
				КонецЕсли;
				
				Если ВсегоНапечатаноСтрок = 56 Тогда
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
					ВсегоНапечатаноСтрок = 0;
					НомСтр = НомСтр + 1;
					ПечатнаяФорма = Отчеты.РегламентированноеУведомлениеФормаР11001.ПолучитьМакет("Печать_" + Стр.ИмяМакета);
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
				КонецЕсли;
				
				УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(СтрМнг.А01020000, "А01020000_"+(ВсегоНапечатаноСтрок+1), ПечатнаяФорма.Области);
				ВсегоНапечатаноСтрок = ВсегоНапечатаноСтрок + 1;
			КонецЦикла;
			
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			
		Иначе
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы)
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Листы;
	
КонецФункции

Функция СформироватьСписокЛистовФорма2020_4(Объект, ЕстьВыходЗаГраницы) Экспорт
	
	ЕстьВыходЗаГраницы = Ложь;
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		Если Стр.ИДНаименования = "ЛистЖ" Тогда
			ВывестиБланк2020_4_ЛистЖ(СтруктураПараметров, Стр, Объект, Листы, НомСтр);
			
		ИначеЕсли Стр.ИДНаименования = "ЛистЗ" Тогда
			ВывестиБланк2020_4_ЛистЗ(СтруктураПараметров, Стр, Объект, Листы, НомСтр);
			
		Иначе
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Листы;
	
КонецФункции

Процедура НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПарам, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы)
	
	МакетыПФ = СтрПарам.МакетыПФ;
	ИмяМакета = СтрПарам.ИмяМакета;
	
	Если Не ЗначениеЗаполнено(МакетыПФ) И Не ЗначениеЗаполнено(ИмяМакета) Тогда
		Для Каждого СтрПодч Из СтрПарам.Строки Цикл
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы);
		КонецЦикла;
		
		Возврат;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МакетыПФ) Тогда
		МассивИменМакетов = СтрРазделить(МакетыПФ, ";", Ложь);
	Иначе
		МассивИменМакетов = Новый Массив;
		МассивИменМакетов.Добавить("Печать_" + ИмяМакета);
	КонецЕсли;
	
	Если СтруктураПараметров.ДанныеУведомления.Свойство(СтрПарам.ИДНаименования) Тогда
		СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[СтрПарам.ИДНаименования];
		ИменаМногострочныхЧастей = СтрПарам.МногострочныеЧасти;
		
		Если СтруктураПараметров.Свойство("МногострочныеЧасти") Тогда
			КореньМногострочныхЧастей = СтруктураПараметров.МногострочныеЧасти;
		Иначе
			КореньМногострочныхЧастей = СтруктураПараметров;
		КонецЕсли;
		
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
				НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы);
				ВывестиМногострочныеЧастиНаЕдинственныйЛист(ПечатнаяФорма, ИменаМногострочныхЧастей,
					КореньМногострочныхЧастей, ЕстьВыходЗаГраницы);
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли СтруктураПараметров.ДанныеМногостраничныхРазделов.Свойство(СтрПарам.ИДНаименования) Тогда
		Для Каждого МнгСтр Из СтруктураПараметров.ДанныеМногостраничныхРазделов[СтрПарам.ИДНаименования] Цикл
			Если СтрПарам.УИД <> МнгСтр.Значение.УИД Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого ИмяМакета Из МассивИменМакетов Цикл
				Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(МнгСтр.Значение) Тогда
					НапечататьСтруктуру(МнгСтр.Значение, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы);
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрПодч Из СтрПарам.Строки Цикл
				НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы)
	
	Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
		НомСтр = НомСтр + 1;
		МакетПФ = Отчеты.РегламентированноеУведомлениеФормаР11001.ПолучитьМакет(ИмяМакета);
		
		Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
			ИмяПоказателя = КЗ.Ключ;
			ЗначениеПоказателя = КЗ.Значение;
			ВывестиПоказательНаБланк(ИмяПоказателя, ЗначениеПоказателя, МакетПФ, ЕстьВыходЗаГраницы);
		КонецЦикла;
		
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
		ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, СтруктураДанныхСтраницы);
		ПечатнаяФорма.Вывести(МакетПФ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиМногострочныеЧастиНаЕдинственныйЛист(ПечатнаяФорма, ИменаМногострочныхЧастей, МногострочныеЧасти, ЕстьВыходЗаГраницы)
	
	Для Каждого МСЧРаздела Из ИменаМногострочныхЧастей Цикл
		ИмяМСЧ = МСЧРаздела.Значение;
		МногострочнаяЧасть = МногострочныеЧасти[ИмяМСЧ];
		
		Для Каждого СтрокаМСЧ Из МногострочнаяЧасть Цикл
			НомерСтроки = МногострочнаяЧасть.Индекс(СтрокаМСЧ) + 1;
			
			СтрокаЗаполнена = Ложь;
			Для Каждого Колонка ИЗ МногострочнаяЧасть.Колонки Цикл
				ИмяПоказателя = Колонка.Имя;
				СтрокаЗаполнена = СтрокаЗаполнена ИЛИ ЗначениеЗаполнено(СтрокаМСЧ[ИмяПоказателя]);
			КонецЦикла;
			
			Если НЕ СтрокаЗаполнена Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого Колонка Из МногострочнаяЧасть.Колонки Цикл
				ИмяПоказателя = Колонка.Имя + "_" + СтрокаЧГ0(НомерСтроки);
				ЗначениеПоказателя = СтрокаМСЧ[Колонка.Имя];
				ВывестиПоказательНаБланк(ИмяПоказателя, ЗначениеПоказателя, ПечатнаяФорма, ЕстьВыходЗаГраницы);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиБланк2020_4_ЛистЖ(СтруктураПараметров, Стр, Объект, Листы, НомСтр)
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
	МногострочнаяЧасть = СтруктураПараметров.МногострочныеЧасти.МногострочнаяЧастьЖ010201;
	
	Если НЕ УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы)
	   И НЕ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МногострочнаяЧасть) Тогда
		Возврат;
	КонецЕсли;
	
	МакетПФ = Отчеты.РегламентированноеУведомлениеФормаР11001.ПолучитьМакет(Стр.МакетыПФ);
	
	НомСтр = НомСтр + 1;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(
		СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования].Ж01010100, "Ж01010100", МакетПФ.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	
	ВсегоНапечатаноСтрок = 1;
	Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(СтрМнг.Ж01020100) Тогда
			Продолжить;
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(
			СтрМнг.Ж01020100, "Ж01020100_"+СтрокаЧГ0(ВсегоНапечатаноСтрок), МакетПФ.Области);
		ВсегоНапечатаноСтрок = ВсегоНапечатаноСтрок + 1;
		
		Если ВсегоНапечатаноСтрок > 68 Тогда
			ПечатнаяФорма.Вывести(МакетПФ);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			
			ВсегоНапечатаноСтрок = 1;
			НомСтр = НомСтр + 1;
			МакетПФ = Отчеты.РегламентированноеУведомлениеФормаР11001.ПолучитьМакет(Стр.МакетыПФ);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
КонецПроцедуры

Процедура ВывестиБланк2020_4_ЛистЗ(СтруктураПараметров, Стр, Объект, Листы, НомСтр)
	
	СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
	МногострочнаяЧасть = СтруктураПараметров.МногострочныеЧасти.МногострочнаяЧастьЗ010101;
	
	Если НЕ УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы)
	   И НЕ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МногострочнаяЧасть) Тогда
		Возврат;
	КонецЕсли;
	
	МакетПФ = Отчеты.РегламентированноеУведомлениеФормаР11001.ПолучитьМакет(Стр.МакетыПФ);
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	
	Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
		Если НЕ ЗначениеЗаполнено(СтрМнг.З01010100) Тогда
			Продолжить;
		КонецЕсли;
		
		ПечатнаяФорма.Вывести(МакетПФ);
		ПечатнаяФорма.Области.З01010100.Текст = ВРег(СокрЛП(СтрМнг.З01010100));
		
		НомСтр = НомСтр + 1;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000" + НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиПоказательНаБланк(ИмяПоказателя, ЗначениеПоказателя, МакетПФ, ЕстьВыходЗаГраницы)
	
	Если ТипЗнч(ЗначениеПоказателя) = Тип("Строка") Тогда
		Если УведомлениеОСпецрежимахНалогообложения.ЭтоПолеАдресаРегистрационныхЗаявлений(ИмяПоказателя) Тогда
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечатьСКонтролемДляРегистрационныхЗаявлений(
				ВРег(ЗначениеПоказателя), ИмяПоказателя, МакетПФ.Области, "-", ЕстьВыходЗаГраницы);
		Иначе
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(
				ВРег(ЗначениеПоказателя), ИмяПоказателя, МакетПФ.Области);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
		УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(ЗначениеПоказателя, ИмяПоказателя, МакетПФ.Области);
		
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Число") Тогда
		УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоНаПечать(ЗначениеПоказателя, ИмяПоказателя, МакетПФ.Области);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЭлектронноеПредставление

Процедура Проверить_Форма2014_1(Данные, УникальныйИдентификатор)
	
	ПроверкаПоказателейФормыНеТребуется = Истина;
	
КонецПроцедуры

Процедура Проверить_Форма2020_4(Данные, УникальныйИдентификатор)
	
	ПроверкаПоказателейФормыНеТребуется = Истина;
	
КонецПроцедуры

Функция ЭлектронноеПредставление_Форма2014_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2014_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2014_1");
	ЗаполнитьДанными_Форма2014_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2014_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.Дата, "ДФ=dd.MM.yyyy"));
	Данные = Объект.ДанныеУведомления.Получить();
	
	Проверить_Форма2014_1(Данные, УникальныйИдентификатор);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2014_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	
	Возврат ОсновныеСведения;
КонецФункции

Процедура ЗаполнитьДанными_Форма2014_1(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры(ДанныеУведомления);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДаннымиУзел(ДанныеУведомления, ДеревоВыгрузки);
КонецПроцедуры

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2014_1(СведенияОтправки)
	Если ЗначениеЗаполнено(СведенияОтправки.ДатаДок) Тогда
		ДатаФормированияФайла = Формат(Дата(Число(Прав(СведенияОтправки.ДатаДок, 4)), Число(Сред(СведенияОтправки.ДатаДок, 4, 2)), Число(Лев(СведенияОтправки.ДатаДок, 2))), "ДФ=yyyyMMdd");
	Иначе
		ДатаФормированияФайла = "00010101";
	КонецЕсли;
	
	Префикс = "RO_R11001_0000_0000_000000000000000_" + ДатаФормированияФайла + "_" + Строка(Новый УникальныйИдентификатор);
	Возврат Префикс;
КонецФункции

Функция ЭлектронноеПредставление_Форма2020_4(Объект, УникальныйИдентификатор)
	
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2020_4(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(
		Объект.ИмяОтчета, "СхемаВыгрузкиФорма2020_4");
	ЗаполнитьДанными_Форма2020_4(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	
	Возврат СведенияЭлектронногоПредставления;
	
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2020_4(Объект, УникальныйИдентификатор)
	
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.Дата, "ДФ=dd.MM.yyyy"));
	Данные = Объект.ДанныеУведомления.Получить();
	
	Проверить_Форма2020_4(Данные, УникальныйИдентификатор);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2020_4(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	
	Возврат ОсновныеСведения;
	
КонецФункции

Процедура ЗаполнитьДанными_Форма2020_4(Объект, Параметры, ДеревоВыгрузки)
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры_Форма2020_4(Параметры, ДанныеУведомления);
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДаннымиУзел(ДанныеУведомления, ДеревоВыгрузки);
	
КонецПроцедуры

Процедура ДополнитьПараметры_Форма2020_4(Параметры, ВсеДанные)
	
	Лист001 = ВсеДанные.ДанныеУведомления.Лист001;
	
	ДобавитьСоставляющиеСтоимости(Лист001, "П01060102");
	
	МногострочнаяЧастьП010407 = ВсеДанные.МногострочныеЧасти.МногострочнаяЧастьП010407;
	ДобавитьПоказателиМСЧ(Лист001, МногострочнаяЧастьП010407);
	
	ЛистыА = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистА;
	
	Для Каждого Страница Из ЛистыА Цикл
		ДанныеСтраницы = Страница.Значение;
		Если СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "А01030100")
		КонецЕсли;
	КонецЦикла;
	
	ЛистыБ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистБ;
	
	Для Каждого Страница Из ЛистыБ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Б0101010");
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "Б0106050");
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "Б01080100");
		КонецЕсли;
	КонецЦикла;
	
	ЛистыВ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистВ;
	
	Для Каждого Страница Из ЛистыВ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "В01020100");
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "В0105040");
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "В0105110");
		КонецЕсли;
	КонецЦикла;
	
	ЛистыГ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистГ;
	
	Для Каждого Страница Из ЛистыГ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "Г01030100");
		КонецЕсли;
	КонецЦикла;
	
	ЛистыД = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистД;
	
	Для Каждого Страница Из ЛистыД Цикл
		ДанныеСтраницы = Страница.Значение;
		Если СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "Д01040100");
		КонецЕсли;
	КонецЦикла;
	
	ЛистыЕ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистЕ;
	
	Для Каждого Страница Из ЛистыЕ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Е0103010");
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "Е0103130");
		КонецЕсли;
	КонецЦикла;
	
	ЛистЗ = ВсеДанные.ДанныеУведомления.ЛистЗ;
	
	МногострочнаяЧастьЗ010101 = ВсеДанные.МногострочныеЧасти.МногострочнаяЧастьЗ010101;
	ДобавитьПоказателиМСЧ(ЛистЗ, МногострочнаяЧастьЗ010101);
	
	ЛистыИ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистИ;
	
	Для Каждого Страница Из ЛистыИ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "И0103010");
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "И0103090");
		КонецЕсли;
	КонецЦикла;
	
	// Сделать многострочные части видимыми для общих механизмов выгрузки.
	ВсеДанные.Вставить("МногострочнаяЧастьП010201",
		ВсеДанные.МногострочныеЧасти.МногострочнаяЧастьП010201);
	ВсеДанные.Вставить("МногострочнаяЧастьЖ010201",
		ВсеДанные.МногострочныеЧасти.МногострочнаяЧастьЖ010201);
	
КонецПроцедуры

Функция СтраницаЗаполнена(Данные)
	
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		Для Каждого КЗ Из Данные Цикл
			Если ТипЗнч(КЗ.Значение) = Тип("УникальныйИдентификатор") Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(КЗ.Значение) Тогда
				Возврат Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ДобавитьСоставляющиеСтоимости(Показатели, ИмяПоказателя)
	
	УстКапитал = Показатели[ИмяПоказателя];
	ПредставлениеУК = Формат(УстКапитал, "ЧРД=,; ЧГ=0");
	СоставляющиеУК = СтрРазделить(ПредставлениеУК, ",", Истина);
	Если СоставляющиеУК.Количество() = 1 Тогда
		СоставляющиеУК.Добавить("");
	КонецЕсли;
	Показатели.Вставить("Х" + Сред(ИмяПоказателя, 2) + "_1", СоставляющиеУК[0]); // Рубли
	Показатели.Вставить("Х" + Сред(ИмяПоказателя, 2) + "_2", СоставляющиеУК[1]); // Копейки
	
КонецПроцедуры

Процедура ДобавитьПризнакиНаличияФИО(ДанныеРаздела, Префикс, ТолькоЗаполненные = Ложь)
	
	ПоказательФ = Префикс + "1";
	ПоказательИ = Префикс + "2";
	ПоказательО = Префикс + "3";
	
	ФИОЗаполнено =  ЗначениеЗаполнено(ДанныеРаздела[ПоказательФ])
		ИЛИ ЗначениеЗаполнено(ДанныеРаздела[ПоказательИ])
		ИЛИ ЗначениеЗаполнено(ДанныеРаздела[ПоказательО]);
	
	Если ТолькоЗаполненные И НЕ ФИОЗаполнено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеРаздела.Вставить("Х" + Сред(ПоказательФ, 2), ?(ЗначениеЗаполнено(ДанныеРаздела[ПоказательФ]), "", "1"));
	ДанныеРаздела.Вставить("Х" + Сред(ПоказательИ, 2), ?(ЗначениеЗаполнено(ДанныеРаздела[ПоказательИ]), "", "1"));
	ДанныеРаздела.Вставить("Х" + Сред(ПоказательО, 2), ?(ЗначениеЗаполнено(ДанныеРаздела[ПоказательО]), "", "1"));
	
КонецПроцедуры

Процедура ДобавитьПолныйКодПодразделения(ДанныеРаздела, Префикс)
	
	КодПодразделения = "";
	Если ЗначениеЗаполнено(ДанныеРаздела[Префикс + "1"]) ИЛИ ЗначениеЗаполнено(ДанныеРаздела[Префикс + "2"]) Тогда
		КодПодразделения = ДанныеРаздела[Префикс + "1"] + "-" + ДанныеРаздела[Префикс + "2"];
	КонецЕсли;
	
	ДанныеРаздела.Вставить("Х" + Сред(Префикс, 2) + "0", КодПодразделения);
	
КонецПроцедуры

Процедура ДобавитьПоказателиМСЧ(ДанныеРаздела, МСЧ)
	
	НомерСтроки = 1;
	
	Для Каждого СтрокаМСЧ Из МСЧ Цикл
		СтрокаЗаполнена = Ложь;
		Для Каждого КолонкаМСЧ Из МСЧ.Колонки Цикл
			СтрокаЗаполнена = СтрокаЗаполнена
				ИЛИ КолонкаМСЧ.Имя <> "УИД" И ЗначениеЗаполнено(СтрокаМСЧ[КолонкаМСЧ.Имя]);
		КонецЦикла;
		
		Если НЕ СтрокаЗаполнена Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого КолонкаМСЧ Из МСЧ.Колонки Цикл
			ИмяПоказателя = КолонкаМСЧ.Имя;
			ДанныеРаздела.Вставить(ИмяПоказателя + "_" + СтрокаЧГ0(НомерСтроки), СтрокаМСЧ[ИмяПоказателя]);
		КонецЦикла;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2020_4(СведенияОтправки)
	
	Если ЗначениеЗаполнено(СведенияОтправки.ДатаДок) Тогда
		ДатаДокумента = Дата(Число(Прав(СведенияОтправки.ДатаДок, 4)),
			Число(Сред(СведенияОтправки.ДатаДок, 4, 2)),
			Число(Лев(СведенияОтправки.ДатаДок, 2)));
		ДатаФормированияФайла = Формат(ДатаДокумента, "ДФ=yyyyMMdd");
	Иначе
		ДатаФормированияФайла = "00010101";
	КонецЕсли;
	
	Префикс = "RO_R11001";
	ИдПолучателя = "0000_0000";
	ИдОтправителя = "000000000000000";
	ИдентификационныйНомер = Строка(Новый УникальныйИдентификатор);
	
	ПрефиксИмениФайла = Префикс + "_" + ИдПолучателя + "_" + ИдОтправителя + "_"
	                  + ДатаФормированияФайла + "_" + ИдентификационныйНомер;
	
	Возврат ПрефиксИмениФайла;
	
КонецФункции

#КонецОбласти

#Область ОбработкаАдресовФИАС

Процедура ЗаполнитьСоответствиеРеквизитамАдреса_Форма2020_4(СоответствиеПоказателей, НазначениеАдреса)
	
	Если НазначениеАдреса = "МестоНахождения" Тогда
		СоответствиеПоказателей.Вставить("ПИ1030100", "ИдентификаторАдресногоОбъекта");
		СоответствиеПоказателей.Вставить("ПД1030100", "СтрокаАдресногоОбъекта");
		
		СоответствиеПоказателей.Вставить("П01030100", "КодРегиона");
		СоответствиеПоказателей.Вставить("П01030201", "МуниципальныйРайонВид");
		СоответствиеПоказателей.Вставить("П01030202", "МуниципальныйРайон");
		СоответствиеПоказателей.Вставить("П01030301", "ПоселениеВид");
		СоответствиеПоказателей.Вставить("П01030302", "Поселение");
		СоответствиеПоказателей.Вставить("П01030401", "НаселенныйПунктВид");
		СоответствиеПоказателей.Вставить("П01030402", "НаселенныйПункт");
		
	ИначеЕсли НазначениеАдреса = "Адрес" Тогда
		СоответствиеПоказателей.Вставить("ПИ1040100", "ИдентификаторАдресногоОбъекта");
		СоответствиеПоказателей.Вставить("ПД1040100", "СтрокаАдресногоОбъекта");
		
		СоответствиеПоказателей.Вставить("П01040100", "КодРегиона");
		СоответствиеПоказателей.Вставить("П01040201", "МуниципальныйРайонВид");
		СоответствиеПоказателей.Вставить("П01040202", "МуниципальныйРайон");
		СоответствиеПоказателей.Вставить("П01040301", "ПоселениеВид");
		СоответствиеПоказателей.Вставить("П01040302", "Поселение");
		СоответствиеПоказателей.Вставить("П01040401", "НаселенныйПунктВид");
		СоответствиеПоказателей.Вставить("П01040402", "НаселенныйПункт");
		СоответствиеПоказателей.Вставить("П01040501", "ТерриторияТип");
		СоответствиеПоказателей.Вставить("П01040502", "Территория");
		СоответствиеПоказателей.Вставить("П01040601", "УлицаТип");
		СоответствиеПоказателей.Вставить("П01040602", "Улица");
		СоответствиеПоказателей.Вставить("П01040801", "ПомещениеВЗданииТип");
		СоответствиеПоказателей.Вставить("П01040802", "ПомещениеВЗданииНомер");
		СоответствиеПоказателей.Вставить("П01040901", "ПомещениеВКвартиреТип");
		СоответствиеПоказателей.Вставить("П01040902", "ПомещениеВКвартиреНомер");
		
		Здания = Новый Массив;
		Здания.Добавить("Здания");
		Здания.Добавить(Новый Структура("П01040701, П01040702", "ЗданиеТип", "ЗданиеНомер"));
		СоответствиеПоказателей.Вставить("П010407", Здания);
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Процедура ЗаполнитьСоответствиеРеквизитамАдреса_Форма2020_4():
			|вызов процедуры с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанныхОтчета

Функция ПолучитьДанныеОтчета(Объект) Экспорт
	Результат = ПолучитьПустуюСтруктуруРезультата();
	ДанныеУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "ДанныеУведомления").Получить();
	ДанныеМногостраничныхРазделов = ДанныеУведомления.ДанныеМногостраничныхРазделов;
	
	Результат.УставныйКапитал = ДанныеУведомления.ДанныеУведомления.Лист001.П01030100;
	Для Каждого ЛистА Из ДанныеМногостраничныхРазделов.ЛистА Цикл
		Если ЗначениеЗаполнено(ЛистА.Значение.А01040100) Тогда
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.ИНН = ЛистА.Значение.А01020000;
			НовСтр.Учредитель = ЛистА.Значение.А01030000;
			НовСтр.СуммаКапитала = ЛистА.Значение.А01040100;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЛистБ Из ДанныеМногостраничныхРазделов.ЛистБ Цикл
		Если ЗначениеЗаполнено(ЛистБ.Значение.Б01040100) Тогда
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.ИНН = ЛистБ.Значение.Б01030000;
			НовСтр.Учредитель = ЛистБ.Значение.Б01010000;
			НовСтр.СуммаКапитала = ЛистБ.Значение.Б01040100;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЛистВ Из ДанныеМногостраничныхРазделов.ЛистВ Цикл
		Если ЗначениеЗаполнено(ЛистВ.Значение.В01070100) Тогда
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.ИНН = ЛистВ.Значение.В01020000;
			НовСтр.Учредитель = СокрЛП(ЛистВ.Значение.В01010100 + " " + ЛистВ.Значение.В01010200 + " " + ЛистВ.Значение.В01010300);
			НовСтр.СуммаКапитала = ЛистВ.Значение.В01070100;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЛистГ1 Из ДанныеМногостраничныхРазделов.ЛистГ1 Цикл
		Если ЗначениеЗаполнено(ЛистГ1.Значение.Г02010000) Тогда
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.СуммаКапитала = ЛистГ1.Значение.Г02010000;
			Если ЛистГ1.Значение.Г01010100 = "1" Тогда
				НовСтр.Учредитель = "Российская Федерация";
			ИначеЕсли ЛистГ1.Значение.Г01010100 = "2" Тогда
				НовСтр.Учредитель = РегламентированнаяОтчетностьВызовСервера.ПолучитьНазваниеРегионаПоКоду(ЛистГ1.Значение.Г01010200);
			ИначеЕсли ЛистГ1.Значение.Г01010100 = "3" Тогда
				РегионСтр = РегламентированнаяОтчетностьВызовСервера.ПолучитьНазваниеРегионаПоКоду(ЛистГ1.Значение.Г01010200);
				НовСтр.Учредитель = ЛистГ1.Значение.Г01030000;
				Если ЗначениеЗаполнено(РегионСтр) Тогда
					НовСтр.Учредитель = НовСтр.Учредитель + " (" + РегионСтр + ")";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЛистД Из ДанныеМногостраничныхРазделов.ЛистД Цикл
		Если ЗначениеЗаполнено(ЛистД.Значение.Д03010000) Тогда
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.ИНН = ЛистД.Значение.Д02020000;
			НовСтр.Учредитель = ЛистД.Значение.Д01000000;
			НовСтр.СуммаКапитала = ЛистД.Значение.Д03010000;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьПустуюСтруктуруРезультата()
	ТЗ = Новый ТаблицаЗначений;
	
	Колонки = ТЗ.Колонки;
	Колонки.Добавить("ИНН", Новый ОписаниеТипов("Строка"));
	Колонки.Добавить("Учредитель", Новый ОписаниеТипов("Строка"));
	Колонки.Добавить("СуммаКапитала", Новый ОписаниеТипов("Число"));
	
	Возврат Новый Структура("УставныйКапитал,Учредители", Неопределено, ТЗ);
КонецФункции

#КонецОбласти

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт
	
	Возврат "";
	
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт
	
	Возврат "Отчет.РегламентированноеУведомлениеФормаР11001.Форма.Форма2020_4";
	
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт
	
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	ПолноеОписаниеФормы = Результат.Добавить();
	ПолноеОписаниеФормы.ИмяФормы = "Форма2014_1";
	ПолноеОписаниеФормы.ОписаниеФормы = "В редакции от 25.01.2012 приказ ФНС России № ММВ-7-6/25@";
	ПолноеОписаниеФормы.ДатаНачала = '2012-01-25';
	ПолноеОписаниеФормы.ДатаКонца  = '2020-11-24';
	
	ПолноеОписаниеФормы = Результат.Добавить();
	ПолноеОписаниеФормы.ИмяФормы = "Форма2020_4";
	ПолноеОписаниеФормы.ОписаниеФормы = "В редакции приказа ФНС России от 31.08.2020 № ЕД-7-14/617@";
	ПолноеОписаниеФормы.ДатаНачала = '2020-11-25';
	ПолноеОписаниеФормы.ДатаКонца  = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	Возврат Результат;
	
КонецФункции

Процедура ДополнитьПараметры(Параметры)
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистВ Цикл
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.В01050501) И ЗначениеЗаполнено(ПарамСтр.В01050502) Тогда
			ПарамСтр.Вставить("В01050500", ПарамСтр.В01050501 + "-" + ПарамСтр.В01050502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ2_3 Цикл
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Г0302040501) И ЗначениеЗаполнено(ПарамСтр.Г0302040502) Тогда
			ПарамСтр.Вставить("Г03020405", ПарамСтр.Г0302040501 + "-" + ПарамСтр.Г0302040502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистЕ Цикл
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Е05050100) И ЗначениеЗаполнено(ПарамСтр.Е05050200) Тогда
			ПарамСтр.Вставить("Е05050000", ПарамСтр.Е05050100 + "-" + ПарамСтр.Е05050200);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистЖ Цикл
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Ж08040501) И ЗначениеЗаполнено(ПарамСтр.Ж08040502) Тогда
			ПарамСтр.Вставить("Ж08040500", ПарамСтр.Ж08040501 + "-" + ПарамСтр.Ж08040502);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистЗ Цикл
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.З05050100) И ЗначениеЗаполнено(ПарамСтр.З05050200) Тогда
			ПарамСтр.Вставить("З05050000", ПарамСтр.З05050100 + "-" + ПарамСтр.З05050200);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистН Цикл
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.Н04040501) И ЗначениеЗаполнено(ПарамСтр.Н04040502) Тогда
			ПарамСтр.Вставить("Н04040500", ПарамСтр.Н04040501 + "-" + ПарамСтр.Н04040502);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция НовыйКонтейнерДляАвтозаполнения(ДанныеУведомления, ДанныеМногостраничныхРазделов, КонтейнерМСЧ)
	
	Контейнер = Новый Структура;
	Для Каждого КЗ Из ДанныеУведомления Цикл
		Контейнер.Вставить(КЗ.Ключ, ОбщегоНазначения.СкопироватьРекурсивно(КЗ.Значение));
	КонецЦикла;
	
	Если ТипЗнч(КонтейнерМСЧ) = Тип("Структура") Тогда
		Для Каждого КЗ Из КонтейнерМСЧ Цикл
			Контейнер.Вставить(КЗ.Ключ, КЗ.Значение);
		КонецЦикла;
		
	Иначе
		// Многострочная часть формы Форма2014_1.
		Контейнер.Вставить("МногострочнаяЧасть1", КонтейнерМСЧ);
		
	КонецЕсли;
	
	СтруктураДерева = Новый Соответствие;
	Для Каждого КЗ Из ДанныеМногостраничныхРазделов Цикл
		Для Каждого Стр Из КЗ.Значение Цикл
			СтруктураДерева[Стр.Значение.УИД] = Новый Структура("Раздел, Данные", КЗ.Ключ, ОбщегоНазначения.СкопироватьРекурсивно(Стр.Значение));
		КонецЦикла;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ДополнитьСлужебнымиСтруктурамиАдреса(ДанныеУведомления, ДанныеМногостраничныхРазделов);
	
	Для Каждого КЗ Из СтруктураДерева Цикл
		Если КЗ.Значение.Данные.Свойство("УИДРодителя") Тогда
			Родитель = СтруктураДерева[КЗ.Значение.Данные.УИДРодителя];
			Если Не Родитель.Данные.Свойство(КЗ.Значение.Раздел) Тогда
				Родитель.Данные.Вставить(КЗ.Значение.Раздел, Новый СписокЗначений);
			КонецЕсли;
			Родитель.Данные[КЗ.Значение.Раздел].Добавить(КЗ.Значение.Данные);
		ИначеЕсли Не Контейнер.Свойство(КЗ.Значение.Раздел) Тогда
			Контейнер.Вставить(КЗ.Значение.Раздел, Новый СписокЗначений);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого КЗ Из СтруктураДерева Цикл
		КЗ.Значение.Данные.Удалить("УИД");
		КЗ.Значение.Данные.Удалить("УИДРодителя");
	КонецЦикла;
	
	Для Каждого КЗ Из СтруктураДерева Цикл
		Если Контейнер.Свойство(КЗ.Значение.Раздел) Тогда
			Контейнер[КЗ.Значение.Раздел].Добавить(КЗ.Значение.Данные);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Контейнер;
	
КонецФункции

Процедура ЗагрузитьПодготовленныеДанные(Контейнер, РезультатКонтейнер1, РезультатКонтейнер2, Дерево)
	
	КУдалению = Новый Массив;
	Для Каждого КЗ Из РезультатКонтейнер1.ДанныеМногостраничныхРазделов Цикл
		КЗ.Значение.Очистить();
	КонецЦикла;
	
	Для Каждого КЗ Из Контейнер Цикл
		Если РезультатКонтейнер1.ДанныеУведомления.Свойство(КЗ.Ключ) Тогда
			ЗаполнитьЗначенияСвойств(РезультатКонтейнер1.ДанныеУведомления[КЗ.Ключ], КЗ.Значение);
		ИначеЕсли РезультатКонтейнер1.ДанныеМногостраничныхРазделов.Свойство(КЗ.Ключ) Тогда
			Для Каждого Стр Из КЗ.Значение Цикл
				ВставляемыеДанные = ОбщегоНазначения.СкопироватьРекурсивно(Стр.Значение);
				ВставляемыеДанные.Вставить("УИД", Новый УникальныйИдентификатор);
				РезультатКонтейнер1.ДанныеМногостраничныхРазделов[КЗ.Ключ].Добавить(ВставляемыеДанные);
				ДобавитьДочерниеСтраницы(ВставляемыеДанные, РезультатКонтейнер1.ДанныеМногостраничныхРазделов);
				КУдалению.Добавить(КЗ.Ключ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элт Из КУдалению Цикл
		ВставляемыеДанные.Удалить(Элт);
	КонецЦикла;
	
	Для Каждого КЗ Из РезультатКонтейнер2 Цикл
		РезультатКонтейнер2[КЗ.Ключ] = Контейнер[КЗ.Ключ];
	КонецЦикла;
	
	СформироватьДеревоСтраницПоДанным_Форма2014_1(Дерево, РезультатКонтейнер1.ДанныеМногостраничныхРазделов);
	
КонецПроцедуры

Процедура ДобавитьДочерниеСтраницы(ВставляемыеДанные, ДанныеМногостраничныхРазделов)
	КУдалению = Новый Массив;
	
	Для Каждого КЗ Из ВставляемыеДанные Цикл
		Если ТипЗнч(КЗ.Значение) = Тип("СписокЗначений")
			И ДанныеМногостраничныхРазделов.Свойство(КЗ.Ключ) Тогда
			
			Для Каждого Стр Из КЗ.Значение Цикл
				ДочерниеВставляемыеДанные = ОбщегоНазначения.СкопироватьРекурсивно(Стр.Значение);
				ДочерниеВставляемыеДанные.Вставить("УИД", Новый УникальныйИдентификатор);
				ДочерниеВставляемыеДанные.Вставить("УИДРодителя", ВставляемыеДанные.УИД);
				ДанныеМногостраничныхРазделов[КЗ.Ключ].Добавить(ДочерниеВставляемыеДанные);
				ДобавитьДочерниеСтраницы(ДочерниеВставляемыеДанные, ДанныеМногостраничныхРазделов);
				КУдалению.Добавить(КЗ.Ключ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элт Из КУдалению Цикл
		ВставляемыеДанные.Удалить(Элт);
	КонецЦикла;
КонецПроцедуры

Процедура СформироватьДеревоСтраницПоДанным_Форма2014_1(ДеревоСтраниц, ДанныеМногостраничныхРазделов)
	ДеревоСтраниц = Новый ДеревоЗначений;
	ДеревоСтраниц.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	ДеревоСтраниц.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("УИД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ДеревоСтраниц.Колонки.Добавить("ИмяМакета", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("Многостраничность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("Многострочность", Новый ОписаниеТипов("Булево"));
	ДеревоСтраниц.Колонки.Добавить("ИДНаименования", Новый ОписаниеТипов("Строка"));
	ДеревоСтраниц.Колонки.Добавить("МногострочныеЧасти", Новый ОписаниеТипов("СписокЗначений"));
	ДеревоСтраниц.Колонки.Добавить("МакетыПФ", Новый ОписаниеТипов("Строка"));
	
	КорневойУровень = ДеревоСтраниц.Строки;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Стр. 001";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_Страница1";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.ИДНаименования = "Лист001";
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.МакетыПФ = "Печать_Форма2014_1_Страница1_1;Печать_Форма2014_1_Страница1_2";
	
#Область ЛистыАБВ
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы А";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистА"] Цикл
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаА";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистА";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Б";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистБ"] Цикл
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаБ";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистБ";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы В";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистВ"] Цикл
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаВ";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистВ";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаВ1;Печать_Форма2014_1_СтраницаВ2";
	КонецЦикла;
#КонецОбласти

#Область ЛистыГ
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Г 1";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистГ1"] Цикл
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаГ1";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистГ1";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаГ1";
		
		Стр002 = Стр001Нов.Строки.Добавить();
		Стр002.Наименование = "Листы Г 2-3";
		Стр002.ИндексКартинки = 1;
		Стр002.Многостраничность = Истина;
		Стр002.Многострочность = Ложь;
		
		НомерСтр2 = 0;
		Для Каждого СтрПодч Из ДанныеМногостраничныхРазделов["ЛистГ2_3"] Цикл
			Если СтрПодч.Значение.УИДРодителя <> Стр.Значение.УИД Тогда
				Продолжить;
			КонецЕсли;
			
			НомерСтр2 = НомерСтр2 + 1;
			Стр001Нов = Стр002.Строки.Добавить();
			Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр2, "ЧГ=");
			Стр001Нов.ИндексКартинки = 1;
			Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаГ2_3";
			Стр001Нов.Многостраничность = Истина;
			Стр001Нов.Многострочность = Ложь;
			Стр001Нов.УИД = СтрПодч.Значение.УИД;
			Стр001Нов.ИДНаименования = "ЛистГ2_3";
			Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаГ2;Печать_Форма2014_1_СтраницаГ3";
		КонецЦикла;
	КонецЦикла;
#КонецОбласти

#Область ЛистыДЕЖЗИ
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Д";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистД"] Цикл
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаД";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистД";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Е";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистЕ"] Цикл
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаЕ";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистЕ";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаЕ1;Печать_Форма2014_1_СтраницаЕ2";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Ж";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистЖ"] Цикл
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаЖ";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистЖ";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаЖ1;Печать_Форма2014_1_СтраницаЖ2;Печать_Форма2014_1_СтраницаЖ3";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы З";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистЗ"] Цикл
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаЗ";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистЗ";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаЗ1;Печать_Форма2014_1_СтраницаЗ2";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист И";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаИ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистИ";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧасть1");
#КонецОбласти

#Область ЛистыКЛМН
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист К";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаК";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистК";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Л";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистЛ"] Цикл
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаЛ";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистЛ";
	КонецЦикла;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист М";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2014_1_СтраницаМ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистМ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Н";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	НомерСтр = 0;
	Для Каждого Стр Из ДанныеМногостраничныхРазделов["ЛистН"] Цикл
		НомерСтр = НомерСтр + 1;
		Стр001Нов = Стр001.Строки.Добавить();
		Стр001Нов.Наименование = "Стр. " + Формат(НомерСтр, "ЧГ=");
		Стр001Нов.ИндексКартинки = 1;
		Стр001Нов.ИмяМакета = "Форма2014_1_СтраницаН";
		Стр001Нов.Многостраничность = Истина;
		Стр001Нов.Многострочность = Ложь;
		Стр001Нов.УИД = Стр.Значение.УИД;
		Стр001Нов.ИДНаименования = "ЛистН";
		Стр001Нов.МакетыПФ = "Печать_Форма2014_1_СтраницаН1;Печать_Форма2014_1_СтраницаН2;Печать_Форма2014_1_СтраницаН3";
	КонецЦикла;
#КонецОбласти
КонецПроцедуры

Процедура СформироватьДеревоСтраницПоДанным_Форма2020_4(ДеревоСтраниц, ДанныеМногостраничныхРазделов)
	
	Для Каждого СтрокаУровня1 Из ДеревоСтраниц.Строки Цикл
		Если СтрокаУровня1.Строки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		// Добавление страниц многостраничного раздела.
		СтрокаОбразец = СтрокаУровня1.Строки[0];
		ДанныеСтраниц = ДанныеМногостраничныхРазделов[СтрокаОбразец.ИДНаименования];
		
		НомерСтраницы = 1;
		Для Каждого Стр Из ДанныеСтраниц Цикл
			СтрокаУровня2 = СтрокаУровня1.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаУровня2, СтрокаОбразец, , "Наименование, УИД");
			СтрокаУровня2.Наименование = "Стр. " + СтрокаЧГ0(НомерСтраницы);
			СтрокаУровня2.УИД = Стр.Значение.УИД;
			
			НомерСтраницы = НомерСтраницы + 1;
			
		КонецЦикла;
		
		Если СтрокаУровня1.Строки.Количество() > 1 Тогда
			// Были добавлены страницы из данных заполнения, исходная страница теперь лишняя.
			СтрокаУровня1.Строки.Удалить(0);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СоздатьЗаполненноеУведомление_Форма2014_1(Параметры, СуществующийДокументСсылка = Неопределено)
	
	ИмяФормы = "Форма2014_1";
	
	Дерево = СформироватьДеревоСтраниц(ИмяФормы);
	ИмяОтчета = "РегламентированноеУведомлениеФормаР11001";
	
	ВходящийКонтейнер = Новый Структура("ИмяФормы, ДеревоСтраниц", "1."+ИмяОтчета+".1."+ИмяФормы, Дерево);
	РезультатКонтейнер1 = Новый Структура;
	УведомлениеОСпецрежимахНалогообложения.СформироватьКонтейнерДанныхУведомления(ВходящийКонтейнер, РезультатКонтейнер1, Истина);
	РезультатКонтейнер2 = Новый Структура;
	УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииСКонтейнеромМногострочныхБлоков(ВходящийКонтейнер, РезультатКонтейнер2);
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация", Параметры.Организация);
	ПараметрыОтчета.Вставить("ПараметрыЗаполнения", Параметры.ДополнительныеПараметры);
	ПараметрыОтчета.Вставить("ИмяФормы", ИмяФормы);
	
	Контейнер = НовыйКонтейнерДляАвтозаполнения(РезультатКонтейнер1.ДанныеУведомления
														,РезультатКонтейнер1.ДанныеМногостраничныхРазделов
														,РезультатКонтейнер2.МногострочнаяЧасть1);
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИмяОтчета, ИмяФормы, ПараметрыОтчета, Контейнер);
	
	ЗагрузитьПодготовленныеДанные(Контейнер, РезультатКонтейнер1, РезультатКонтейнер2, Дерево);
	
	Если ТипЗнч(СуществующийДокументСсылка) = Тип("Структура")
	   И СуществующийДокументСсылка.Свойство("Ссылка")
	   И ЗначениеЗаполнено(СуществующийДокументСсылка.Ссылка) Тогда
		НовыйДок = СуществующийДокументСсылка.Ссылка.ПолучитьОбъект();
		
	ИначеЕсли ТипЗнч(СуществующийДокументСсылка) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения")
	        И ЗначениеЗаполнено(СуществующийДокументСсылка) Тогда
		НовыйДок = СуществующийДокументСсылка.ПолучитьОбъект();
		
	Иначе
		НовыйДок = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		НовыйДок.Организация = Параметры.Организация;
		НовыйДок.ИмяОтчета = ИмяОтчета;
		НовыйДок.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаР11001;
		
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("ДанныеУведомления, ДанныеМногостраничныхРазделов, ДеревоСтраниц, МногострочнаяЧасть1",
		РезультатКонтейнер1.ДанныеУведомления, РезультатКонтейнер1.ДанныеМногостраничныхРазделов,
		Дерево, РезультатКонтейнер2["МногострочнаяЧасть1"]);
	
	ДатаСоставления = Неопределено;
	Если Параметры.ДополнительныеПараметры.Свойство("ДатаСоставления", ДатаСоставления)
	   И ЗначениеЗаполнено(ДатаСоставления) Тогда
		НовыйДок.Дата = ДатаСоставления;
	Иначе
		НовыйДок.Дата = ОбщегоНазначения.ТекущаяДатаПользователя();
	КонецЕсли;
	
	НовыйДок.ИмяФормы = ИмяФормы;
	НовыйДок.ДатаПодписи = НовыйДок.Дата;
	НовыйДок.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
	НовыйДок.Записать();
	
	Возврат НовыйДок.Ссылка;
	
КонецФункции

Функция СоздатьЗаполненноеУведомление_Форма2020_4(Параметры, СуществующийДокументСсылка = Неопределено)
	
	ИмяФормы = "Форма2020_4";
	
	Дерево = СформироватьДеревоСтраниц(ИмяФормы);
	ИмяОтчета = "РегламентированноеУведомлениеФормаР11001";
	
	ВходящийКонтейнер = Новый Структура("ИмяФормы, ДеревоСтраниц", "1."+ИмяОтчета+".1."+ИмяФормы, Дерево);
	РезультатКонтейнер1 = Новый Структура;
	УведомлениеОСпецрежимахНалогообложения.СформироватьКонтейнерДанныхУведомления(ВходящийКонтейнер, РезультатКонтейнер1, Истина);
	РезультатКонтейнер2 = Новый Структура;
	ИнициализироватьМногострочныеЧасти(ИмяФормы, ВходящийКонтейнер, РезультатКонтейнер2);
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация", Параметры.Организация);
	ПараметрыОтчета.Вставить("ПараметрыЗаполнения", Параметры.ДополнительныеПараметры);
	ПараметрыОтчета.Вставить("ИмяФормы", ИмяФормы);
	
	Контейнер = НовыйКонтейнерДляАвтозаполнения(РезультатКонтейнер1.ДанныеУведомления,
		РезультатКонтейнер1.ДанныеМногостраничныхРазделов, РезультатКонтейнер2);
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИмяОтчета, ИмяФормы, ПараметрыОтчета, Контейнер);
	
	КУдалению = Новый Массив;
	Для Каждого КЗ Из РезультатКонтейнер1.ДанныеМногостраничныхРазделов Цикл
		КЗ.Значение.Очистить();
	КонецЦикла;
	
	Для Каждого КЗ Из Контейнер Цикл
		Если РезультатКонтейнер1.ДанныеУведомления.Свойство(КЗ.Ключ) Тогда
			ЗаполнитьЗначенияСвойств(РезультатКонтейнер1.ДанныеУведомления[КЗ.Ключ], КЗ.Значение);
		ИначеЕсли РезультатКонтейнер1.ДанныеМногостраничныхРазделов.Свойство(КЗ.Ключ) Тогда
			Для Каждого Стр Из КЗ.Значение Цикл
				ВставляемыеДанные = ОбщегоНазначения.СкопироватьРекурсивно(Стр.Значение);
				ВставляемыеДанные.Вставить("УИД", Новый УникальныйИдентификатор);
				РезультатКонтейнер1.ДанныеМногостраничныхРазделов[КЗ.Ключ].Добавить(ВставляемыеДанные);
				ДобавитьДочерниеСтраницы(ВставляемыеДанные, РезультатКонтейнер1.ДанныеМногостраничныхРазделов);
				КУдалению.Добавить(КЗ.Ключ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элт Из КУдалению Цикл
		ВставляемыеДанные.Удалить(Элт);
	КонецЦикла;
	
	Для Каждого КЗ Из РезультатКонтейнер2 Цикл
		РезультатКонтейнер2[КЗ.Ключ] = Контейнер[КЗ.Ключ];
	КонецЦикла;
	
	СформироватьДеревоСтраницПоДанным_Форма2020_4(Дерево, РезультатКонтейнер1.ДанныеМногостраничныхРазделов);
	
	Если ТипЗнч(СуществующийДокументСсылка) = Тип("Структура")
	   И СуществующийДокументСсылка.Свойство("Ссылка")
	   И ЗначениеЗаполнено(СуществующийДокументСсылка.Ссылка) Тогда
		НовыйДок = СуществующийДокументСсылка.Ссылка.ПолучитьОбъект();
		
	ИначеЕсли ТипЗнч(СуществующийДокументСсылка) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения")
	        И ЗначениеЗаполнено(СуществующийДокументСсылка) Тогда
		НовыйДок = СуществующийДокументСсылка.ПолучитьОбъект();
		
	Иначе
		НовыйДок = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		НовыйДок.Организация = Параметры.Организация;
		НовыйДок.ИмяОтчета = ИмяОтчета;
		НовыйДок.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаР11001;
		
	КонецЕсли;
	
	ДанныеОтчета = Новый Структура;
	ДанныеОтчета.Вставить("ДанныеУведомления", РезультатКонтейнер1.ДанныеУведомления);
	ДанныеОтчета.Вставить("ДанныеМногостраничныхРазделов", РезультатКонтейнер1.ДанныеМногостраничныхРазделов);
	ДанныеОтчета.Вставить("ДеревоСтраниц", Дерево);
	
	ДанныеОтчета.Вставить("МногострочныеЧасти", Новый Структура);
	Для Каждого КЗ Из РезультатКонтейнер2 Цикл
		ДанныеОтчета.МногострочныеЧасти.Вставить(
			КЗ.Ключ, РезультатКонтейнер2[КЗ.Ключ]);
	КонецЦикла;
	
	ДатаСоставления = Неопределено;
	Если Параметры.ДополнительныеПараметры.Свойство("ДатаСоставления", ДатаСоставления)
	   И ЗначениеЗаполнено(ДатаСоставления) Тогда
		НовыйДок.Дата = ДатаСоставления;
	Иначе
		НовыйДок.Дата = ОбщегоНазначения.ТекущаяДатаПользователя();
	КонецЕсли;
	
	НовыйДок.ДатаПодписи = НовыйДок.Дата;
	НовыйДок.ИмяФормы = ИмяФормы;
	НовыйДок.ДанныеУведомления = Новый ХранилищеЗначения(ДанныеОтчета);
	НовыйДок.Записать();
	
	Возврат НовыйДок.Ссылка;
	
КонецФункции

Функция СтрокаЧГ0(ИсходноеЧисло)
	
	Возврат Формат(ИсходноеЧисло, "ЧН=; ЧГ=");
	
КонецФункции

Функция СведенияИзФормРегистрации(ИмяФормы, ДанныеУведомления) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("КодЗаявления", "Р11001");
	Данные = ДанныеУведомления.Получить();
	
	Лист001 = Данные.ДанныеУведомления.Лист001;
	Результат.Вставить("ОГРН", "");
	Результат.Вставить("НаимЮЛПолн", Лист001.П01010100);
	
	Результат.Вставить("Заявители", Новый Массив);
	Для Каждого ЛистН Из Данные.ДанныеМногостраничныхРазделов.ЛистН Цикл 
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистН.Значение) Тогда 
			Продолжить;
		КонецЕсли;
		
		СвЗаяв = Новый Структура;
		СвЗаяв.Вставить("Фамилия", ЛистН.Значение.Н04010100);
		СвЗаяв.Вставить("Имя", ЛистН.Значение.Н04010200);
		СвЗаяв.Вставить("Отчество", ЛистН.Значение.Н04010300);
		СвЗаяв.Вставить("ЭлектроннаяПочта", ЛистН.Значение.Н04060200);
		
		Результат.Заявители.Добавить(СвЗаяв);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#КонецЕсли
