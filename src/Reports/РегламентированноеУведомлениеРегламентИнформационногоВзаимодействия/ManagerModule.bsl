#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2020_1";
	Стр.КНД = "1110304";
	Стр.ВерсияФормата = "5.02";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2020_1";
	Стр.ОписаниеФормы = "Форма регламента информационного взаимодействия";
	Стр.ДатаНачала = '20201001';
	Стр.ДатаКонца = '20991231';
	
	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2020_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2020_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2020_1" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Электронный формат для данной формы не опубликован'"));
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2020_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2020_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2020_1" Тогда 
		Данные = Объект.ДанныеУведомления.Получить();
		Данные.Вставить("Организация", Объект.Организация);
		Данные.Вставить("ПодписантФамилия", Объект.ПодписантФамилия);
		Данные.Вставить("ПодписантИмя", Объект.ПодписантИмя);
		Данные.Вставить("Организация", Объект.Организация);
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2020_1(Данные, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2020_1(СведенияОтправки)
	Префикс = "ON_RIVNALMON";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция СтрокаТаблицыЗначенийЗаполнена(СтрТЗ)
	Для Каждого Кол Из СтрТЗ.Владелец().Колонки Цикл 
		Если Кол.Имя = "УИД" Тогда 
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрТЗ[Кол.Имя]) Тогда 
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

Функция Получить_ДоступИС(Данные, УИДРодителя)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ПредДокСВК Цикл 
		Если Стр.Значение.УИД = УИДРодителя Тогда 
			Возврат Стр.Значение.ДоступИС;
		КонецЕсли;
	КонецЦикла;
КонецФункции

Процедура ПроверитьСтрокуТаблицыЗначенийНаЗаполненность(СтрТЗ, ТаблицаОшибок, НомСтр, ИмяПоля)
	Для Каждого Кол Из СтрТЗ.Владелец().Колонки Цикл 
		Если Кол.Имя = "УИД" Тогда 
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрТЗ[Кол.Имя]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен показатель", ИмяПоля, Кол.Имя + "___" + Формат(НомСтр, "ЧГ="), СтрТЗ.УИД));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Проверить_ПредДокСВК(Данные, ТаблицаОшибок)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ПредДокСВК Цикл 
		ПредДокСВК = Стр.Значение;
		
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ПредДокСВК) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Страница не заполнена", "ПредДокСВК", "ПорНом", ПредДокСВК.УИД));
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ПредДокСВК.ПорНом) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан порядковый номер", "ПредДокСВК", "ПорНом", ПредДокСВК.УИД));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ПредДокСВК.ПО) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано программное обеспечение", "ПредДокСВК", "ПО", ПредДокСВК.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПредДокСВК.ПроизвПО) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан производитель программного обеспечения", "ПредДокСВК", "ПроизвПО", ПредДокСВК.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПредДокСВК.ПрПерсДан) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак наличия и обработки в информационной системе персональных данных", "ПредДокСВК", "ПрПерсДан", ПредДокСВК.УИД));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ПредДокСВК.ДоступИС) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак наличия предоставления налоговому органу доступа к ИС", "ПредДокСВК", "ДоступИС", ПредДокСВК.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПредДокСВК.ПризДоступИС) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак представления налоговому органу доступа к ИС", "ПредДокСВК", "ПризДоступИС", ПредДокСВК.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПредДокСВК.ВидИСОрг) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан вид информационной системы организации", "ПредДокСВК", "ВидИСОрг", ПредДокСВК.УИД));
		ИначеЕсли СтрДлина(СокрЛП(ПредДокСВК.ВидИСОрг)) <> 2 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан вид информационной системы организации", "ПредДокСВК", "ВидИСОрг", ПредДокСВК.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПредДокСВК.ПризНалПД) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак наличия в информационной системе персональных данных", "ПредДокСВК", "ПризНалПД", ПредДокСВК.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПредДокСВК.ПризНалДанДр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак наличия и обработки в информационной системе данных других организаций", "ПредДокСВК", "ПризНалДанДр", ПредДокСВК.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПредДокСВК.ПорНомИС) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан порядковый номер информационной системы организации", "ПредДокСВК", "ПорНомИС", ПредДокСВК.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПредДокСВК.НаимИС) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование информационной системы", "ПредДокСВК", "НаимИС", ПредДокСВК.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПредДокСВК.ИННЮЛ) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан ИНН", "ПредДокСВК", "ИННЮЛ", ПредДокСВК.УИД));
		ИначеЕсли Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ПредДокСВК.ИННЮЛ, Истина, "") Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан ИНН", "ПредДокСВК", "ИННЮЛ", ПредДокСВК.УИД));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ПредДокСВК.ДостНОИС) И ПредДокСВК.ДоступИС = "1" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указаны параметры доступа к информационной системе", "ПредДокСВК", "ДостНОИС", ПредДокСВК.УИД));
		КонецЕсли;
		
		СтрПрМ = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
			"ДоступИСНППорНом,ВрДостИСРабНачал_С,ВрДостИСРабОконч_По,"
			+ "ВрДостИСВыхНачал_С,ВрДостИСВыхОконч_По,ТехПерРабНачал_С,"
			+ "ТехПерРабОконч_По,ТехПерВыхНачал_С,ТехПерВыхОконч_По,Период", ",");
		Если ПредДокСВК.ДоступИС = "1" Тогда 
			ПрЗап = Истина;
		Иначе
			ПрЗап = Ложь;
			
			Для Каждого Элт Из СтрПрМ Цикл
				ПрЗап = ПрЗап Или ЗначениеЗаполнено(ПредДокСВК[Элт]);
			КонецЦикла;
		КонецЕсли;
		
		Если ПрЗап Тогда 
			Для Каждого Элт Из СтрПрМ Цикл
				Если Не ЗначениеЗаполнено(ПредДокСВК[Элт]) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнен показатель", "ПредДокСВК", Элт, ПредДокСВК.УИД));
				КонецЕсли;
			КонецЦикла;
			
			НомСтр = 0;
			Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр7 Цикл 
				Если Не Стр.УИД = ПредДокСВК.УИД Тогда 
					Продолжить;
				КонецЕсли;
				НомСтр = НомСтр + 1;
				
				Если ПредДокСВК.Период = "1" Тогда 
					Если Не ЗначениеЗаполнено(Стр.Оконч_По) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Не заполнено время окончания", "ПредДокСВК", "Оконч_По___" + Формат(НомСтр, "ЧГ="), ПредДокСВК.УИД));
					КонецЕсли;
					Если Не ЗначениеЗаполнено(Стр.Начал_С) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Не заполнено время начала", "ПредДокСВК", "Начал_С___" + Формат(НомСтр, "ЧГ="), ПредДокСВК.УИД));
					КонецЕсли;
				ИначеЕсли ПредДокСВК.Период = "2" Или ПредДокСВК.Период = "3" Тогда
					Если Не ЗначениеЗаполнено(Стр.ДатаАкт) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Не заполнена дата актуализации данных", "ПредДокСВК", "ДатаАкт___" + Формат(НомСтр, "ЧГ="), ПредДокСВК.УИД));
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Проверить_УчНОИСНП(Данные, ТаблицаОшибок)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.УчНОИСНП Цикл 
		УчНОИСНП = Стр.Значение;
		
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(УчНОИСНП) Тогда 
			Если Получить_ДоступИС(Данные, УчНОИСНП.УИДРодителя) = "1" Тогда 
				Если Не ЗначениеЗаполнено(УчНОИСНП.ПорНом) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Страница не заполнена", "УчНОИСНП", "ПорНом", УчНОИСНП.УИД));
				КонецЕсли;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(УчНОИСНП.ПорНом) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан порядковый номер", "УчНОИСНП", "ПорНом", УчНОИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(УчНОИСНП.УчНОИСНПКодНО) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код налогового органа", "УчНОИСНП", "УчНОИСНПКодНО", УчНОИСНП.УИД));
		ИначеЕсли Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(УчНОИСНП.УчНОИСНПКодНО) 
					Или СтрДлина(СокрЛП(УчНОИСНП.УчНОИСНПКодНО)) <> 4 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан код налогового органа", "УчНОИСНП", "УчНОИСНПКодНО", УчНОИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(УчНОИСНП.Логин) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан логин учетной записи", "УчНОИСНП", "Логин", УчНОИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(УчНОИСНП.ДатаСрок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан срок действия учетной записи", "УчНОИСНП", "ДатаСрок", УчНОИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(УчНОИСНП.Период) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана периодичность обновления учетной записи", "УчНОИСНП", "Период", УчНОИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(УчНОИСНП.ПризнСрок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак автоматического оповещения при истечении срока действия записи", "УчНОИСНП", "ПризнСрок", УчНОИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(УчНОИСНП.ПризнНедИС) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак автоматического оповещения при недоступности информационной системы", "УчНОИСНП", "ПризнНедИС", УчНОИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(УчНОИСНП.ПризнЖурн) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак автоматического ведения журнала регистрации действий пользователя", "УчНОИСНП", "ПризнЖурн", УчНОИСНП.УИД));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Проверить_ТехПодИСНП(Данные, ТаблицаОшибок)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ТехПодИСНП Цикл 
		ТехПодИСНП = Стр.Значение;
		
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ТехПодИСНП) Тогда 
			Если Получить_ДоступИС(Данные, ТехПодИСНП.УИДРодителя) = "1" Тогда 
				Если Не ЗначениеЗаполнено(ТехПодИСНП.ПорНом) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Страница не заполнена", "ТехПодИСНП", "ПорНом", ТехПодИСНП.УИД));
				КонецЕсли;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТехПодИСНП.ПорНом) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан порядковый номер", "ТехПодИСНП", "ПорНом", ТехПодИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТехПодИСНП.ТипОбращен) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан тип обращения", "ТехПодИСНП", "ТипОбращен", ТехПодИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТехПодИСНП.ПрОнлайн) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак возможности обращения онлайн", "ТехПодИСНП", "ПрОнлайн", ТехПодИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТехПодИСНП.Адрес) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан адрес электронной почты службы поддержки для направления обращений", "ТехПодИСНП", "Адрес", ТехПодИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТехПодИСНП.Телефон) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан телефон службы поддержки для направления обращений", "ТехПодИСНП", "Телефон", ТехПодИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТехПодИСНП.НаимОтв) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование подразделения", "ТехПодИСНП", "НаимОтв", ТехПодИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТехПодИСНП.ДолжОтв) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана должность ответственного", "ТехПодИСНП", "ДолжОтв", ТехПодИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТехПодИСНП.СрокОтв) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан срок ответа", "ТехПодИСНП", "СрокОтв", ТехПодИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТехПодИСНП.Фамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана фамилия ответственного", "ТехПодИСНП", "Фамилия", ТехПодИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТехПодИСНП.Имя) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано имя ответственного", "ТехПодИСНП", "Имя", ТехПодИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТехПодИСНП.ВремяРабНачал_С) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано время начала работы (рабочие дни)", "ТехПодИСНП", "ВремяРабНачал_С", ТехПодИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТехПодИСНП.ВремяРабОконч_По) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано время окончания работы (рабочие дни)", "ТехПодИСНП", "ВремяРабОконч_По", ТехПодИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТехПодИСНП.ВремяВыхНачал_С) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано время начала работы (выходные дни)", "ТехПодИСНП", "ВремяВыхНачал_С", ТехПодИСНП.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТехПодИСНП.ВремяВыхОконч_По) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано время окончания работы (выходные дни)", "ТехПодИСНП", "ВремяВыхОконч_По", ТехПодИСНП.УИД));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Проверить_ИнтерфИСНП(Данные, ТаблицаОшибок)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ИнтерфИСНП Цикл 
		ИнтерфИСНП = Стр.Значение;
		
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ИнтерфИСНП) Тогда
			Если Получить_ДоступИС(Данные, ИнтерфИСНП.УИДРодителя) = "1" Тогда 
				Если Не ЗначениеЗаполнено(ИнтерфИСНП.ПорНом) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Страница не заполнена", "ИнтерфИСНП", "ПорНом", ИнтерфИСНП.УИД));
				КонецЕсли;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ИнтерфИСНП.ПорНом) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан порядковый номер", "ИнтерфИСНП", "ПорНом", ИнтерфИСНП.УИД));
		КонецЕсли;
		
		Для Каждого Признак Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
					"ПрИдНалПер,ПрИдОтчПер,ПрРабМстрОтч,ПрРабОтчРазд,ПрУпрВидСтр,ПрУпрВидСтлб", ",") Цикл 
			
			Если Не ЗначениеЗаполнено(ИнтерфИСНП[Признак]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан признак", "ИнтерфИСНП", Признак, ИнтерфИСНП.УИД));
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура Проверить_ДокумИСНП(Данные, ТаблицаОшибок)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ДокумИСНП Цикл 
		ДокумИСНП = Стр.Значение;
		
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ДокумИСНП) Тогда 
			Если Получить_ДоступИС(Данные, ДокумИСНП.УИДРодителя) = "1" Тогда 
				Если Не ЗначениеЗаполнено(ДокумИСНП.ПорНом) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Страница не заполнена", "ДокумИСНП", "ПорНом", ДокумИСНП.УИД));
				КонецЕсли;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДокумИСНП.ПорНом) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан порядковый номер", "ДокумИСНП", "ПорНом", ДокумИСНП.УИД));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДокумИСНП.КНД) И СтрДлина(СокрЛП(ДокумИСНП.КНД)) < 7 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"КНД должен состоять из 7 символов", "ДокумИСНП", "КНД", ДокумИСНП.УИД));
		КонецЕсли;
		
		Для Каждого Признак Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
					"ПрРасшНалОтч,ПрПроизвОтч,ПрСравнВОтч,ПрФильтрДан,ПрСортДан,ПрГрупДан,ПрРасчИтог,ПрЭкспДан,ПрПечатДан,ПрПоискРус", ",") Цикл 
			
			Если Не ЗначениеЗаполнено(ДокумИСНП[Признак]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан признак", "ДокумИСНП", Признак, ДокумИСНП.УИД));
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура Проверить_ПорСрокДок(Данные, ТаблицаОшибок)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ПорСрокДок Цикл 
		ПорСрокДок = Стр.Значение;
		
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ПорСрокДок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнена страница", "ПорСрокДок", "ПорНом", ПорСрокДок.УИД));
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПорСрокДок.КНД) И СтрДлина(СокрЛП(ПорСрокДок.КНД)) < 7 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"КНД должен состоять из 7 символов", "ПорСрокДок", "КНД", ПорСрокДок.УИД));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ПорСрокДок.ПорНом) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан порядковый номер", "ПорСрокДок", "ПорНом", ПорСрокДок.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПорСрокДок.НаимВидДок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование вида документа (информации)", "ПорСрокДок", "НаимВидДок", ПорСрокДок.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПорСрокДок.ПрПредИС) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак наличия возможности представления документов через ИС организации", "ПорСрокДок", "ПрПредИС", ПорСрокДок.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПорСрокДок.ПрПредТКС) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак наличия возможности представления документов по ТКС", "ПорСрокДок", "ПрПредТКС", ПорСрокДок.УИД));
		КонецЕсли;
		Если ЗначениеЗаполнено(ПорСрокДок.КодВидДок) И СтрДлина(СокрЛП(ПорСрокДок.КодВидДок)) <> 2 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан код вида документа (информации)", "ПорСрокДок", "ПрПредТКС", ПорСрокДок.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПорСрокДок.Период) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана периодичность представления документов (информации)", "ПорСрокДок", "Период", ПорСрокДок.УИД));
		КонецЕсли;
		Если ЗначениеЗаполнено(ПорСрокДок.ДатаАкт) И СтрДлина(СокрЛП(ПорСрокДок.ДатаАкт)) <> 2 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан день представления документа (указывается два символа, например, 09)", "ПорСрокДок", "ДатаАкт", ПорСрокДок.УИД));
		КонецЕсли;
		
		НомСтр = 0;
		Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр5 Цикл 
			Если Не Стр.УИД = ПорСрокДок.УИД Тогда 
				Продолжить;
			КонецЕсли;
			НомСтр = НомСтр + 1;
			
			Если СтрДлина(СокрЛП(Стр.ФормТКС)) < 3 Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан / неправильно указан формат", "ПорСрокДок", "ФормТКС___" + Формат(НомСтр, "ЧГ="), ПорСрокДок.УИД));
			КонецЕсли;
		КонецЦикла;
		
		НомСтр = 0;
		Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр6 Цикл 
			Если Не Стр.УИД = ПорСрокДок.УИД Тогда 
				Продолжить;
			КонецЕсли;
			НомСтр = НомСтр + 1;
			
			Если СтрДлина(СокрЛП(Стр.Месяц)) < 2 Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан / неправильно указан месяц", "ПорСрокДок", "Месяц___" + Формат(НомСтр, "ЧГ="), ПорСрокДок.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Стр.ПрДок) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан / неправильно указан признак представления документов (информации) для каждого месяца",
					"ПорСрокДок", "ПрДок___" + Формат(НомСтр, "ЧГ="), ПорСрокДок.УИД));
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура Проверить_СпосФормНО(Данные, ТаблицаОшибок)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.СпосФормНО Цикл 
		СпосФормНО = Стр.Значение;
		
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СпосФормНО) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СпосФормНО.ПорНом) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан порядковый номер", "СпосФормНО", "ПорНом", СпосФормНО.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СпосФормНО.КНД) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан КНД", "СпосФормНО", "КНД", СпосФормНО.УИД));
		ИначеЕсли СтрДлина(СокрЛП(СпосФормНО.КНД)) < 7 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан КНД", "СпосФормНО", "КНД", СпосФормНО.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СпосФормНО.КодНалог) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код налога", "СпосФормНО", "КодНалог", СпосФормНО.УИД));
		ИначеЕсли СтрДлина(СокрЛП(СпосФормНО.КодНалог)) < 6 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан код налога", "СпосФормНО", "КодНалог", СпосФормНО.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СпосФормНО.АвтФормНО) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак автоматического формирования налоговой отчетности", "СпосФормНО", "АвтФормНО", СпосФормНО.УИД));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Проверить_РегистрБУ(Данные, ТаблицаОшибок)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.РегистрБУ Цикл 
		РегистрБУ = Стр.Значение;
		
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(РегистрБУ) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(РегистрБУ.ПорНом) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан порядковый номер", "РегистрБУ", "ПорНом", РегистрБУ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РегистрБУ.КодРегистрНУ) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код регистра бухгалтерского учета", "РегистрБУ", "КодРегистрНУ", РегистрБУ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РегистрБУ.НаимРегистрНУ) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование регистра бухгалтерского учета", "РегистрБУ", "НаимРегистрНУ", РегистрБУ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РегистрБУ.УрРегистрБУ) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан уровень регистра бухгалтерского учета", "РегистрБУ", "УрРегистрБУ", РегистрБУ.УИД));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Проверить_РегистрНУ(Данные, ТаблицаОшибок)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.РегистрНУ Цикл 
		РегистрНУ = Стр.Значение;
		
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(РегистрНУ) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(РегистрНУ.ПорНом) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан порядковый номер", "РегистрНУ", "ПорНом", РегистрНУ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РегистрНУ.КНД) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан КНД", "РегистрНУ", "КНД", РегистрНУ.УИД));
		ИначеЕсли СтрДлина(СокрЛП(РегистрНУ.КНД)) < 7 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан КНД", "РегистрНУ", "КНД", РегистрНУ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РегистрНУ.КодНалог) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код налога", "РегистрНУ", "КодНалог", РегистрНУ.УИД));
		ИначеЕсли СтрДлина(СокрЛП(РегистрНУ.КодНалог)) < 6 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан код налога", "РегистрНУ", "КодНалог", РегистрНУ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РегистрНУ.КодРегистрНУ) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код регистра налогового учета", "РегистрНУ", "КодРегистрНУ", РегистрНУ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РегистрНУ.НаимРегистрНУ) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование регистра налогового учета", "РегистрНУ", "НаимРегистрНУ", РегистрНУ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РегистрНУ.УрРегистрНУ) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан уровень регистра налогового учета", "РегистрНУ", "УрРегистрБУ", РегистрНУ.УИД));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Проверить_ИнфСВК(Данные, ТаблицаОшибок)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ИнфСВК Цикл 
		ИнфСВК = Стр.Значение;
		
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ИнфСВК) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнена страница", "ИнфСВК", "ИСКонтрПорНом", ИнфСВК.УИД));
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ИнфСВК.ИСКонтрПорНом) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан порядковый номер", "ИнфСВК", "ИСКонтрПорНом", ИнфСВК.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ИнфСВК.ОписИС) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано описание информационной системы", "ИнфСВК", "ОписИС", ИнфСВК.УИД));
		КонецЕсли;
		
		Для Каждого Признак Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
					"ПрПодрБУ,ПрПодрНУ,ПрПодрНалОтч,ПрПодрВК,ПрПодрУпРиск,ПрПодрАудит", ",") Цикл 
			
			Если Не ЗначениеЗаполнено(ИнфСВК[Признак]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан признак", "ИнфСВК", Признак, ИнфСВК.УИД));
			КонецЕсли;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ИнфСВК.ИСВКСпрПорНом)
			Или ЗначениеЗаполнено(ИнфСВК.ПрКонтрСтав)
			Или ЗначениеЗаполнено(ИнфСВК.ПрКонтрКБК)
			Или ЗначениеЗаполнено(ИнфСВК.ПрКонтрОпер)
			Или ЗначениеЗаполнено(ИнфСВК.ПрКонтрОКОФ)
			Или ЗначениеЗаполнено(ИнфСВК.ПрКонтрРД)
			Или ЗначениеЗаполнено(ИнфСВК.ПрКонтрБС)
			Или ЗначениеЗаполнено(ИнфСВК.ПрКонтрПД) Тогда 
			
			Если Не ЗначениеЗаполнено(ИнфСВК.ИСВКСпрПорНом) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан порядковый номер", "ИнфСВК", "ИСВКСпрПорНом", ИнфСВК.УИД));
			КонецЕсли;
			Для Каждого Признак Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
						"ПрКонтрСтав,ПрКонтрКБК,ПрКонтрОпер,ПрКонтрОКОФ,ПрКонтрРД,ПрКонтрБС,ПрКонтрПД", ",") Цикл 
				
				Если Не ЗначениеЗаполнено(ИнфСВК[Признак]) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан признак", "ИнфСВК", Признак, ИнфСВК.УИД));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИнфСВК.ИСПравДокПорНом)
			Или ЗначениеЗаполнено(ИнфСВК.ПрКонтрХрон)
			Или ЗначениеЗаполнено(ИнфСВК.ПрКонтрНалД)
			Или ЗначениеЗаполнено(ИнфСВК.ПрКонтрПокД)
			Или ЗначениеЗаполнено(ИнфСВК.ПрКонтрПолн) Тогда 
			
			Если Не ЗначениеЗаполнено(ИнфСВК.ИСПравДокПорНом) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан порядковый номер", "ИнфСВК", "ИСПравДокПорНом", ИнфСВК.УИД));
			КонецЕсли;
			Для Каждого Признак Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
						"ПрКонтрХрон,ПрКонтрНалД,ПрКонтрПокД,ПрКонтрПолн", ",") Цикл 
				
				Если Не ЗначениеЗаполнено(ИнфСВК[Признак]) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан признак", "ИнфСВК", Признак, ИнфСВК.УИД));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		НомСтр = 0;
		Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр2 Цикл 
			Если Не Стр.УИД = ИнфСВК.УИД Тогда 
				Продолжить;
			КонецЕсли;
			НомСтр = НомСтр + 1;
			
			Если СтрокаТаблицыЗначенийЗаполнена(Стр) Тогда 
				ПроверитьСтрокуТаблицыЗначенийНаЗаполненность(Стр, ТаблицаОшибок, НомСтр, "ИнфСВК");
				Если ЗначениеЗаполнено(Стр.ИСВККНД) И СтрДлина(СокрЛП(Стр.ИСВККНД)) < 7 Тогда
					Постфикс = "___" + Формат(НомСтр, "ЧГ=");
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"КНД должен состоять из 7 символов", "ИнфСВК", "ИСВККНД" + Постфикс, ИнфСВК.УИД));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		НомСтр = 0;
		Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр3 Цикл 
			Если Не Стр.УИД = ИнфСВК.УИД Тогда 
				Продолжить;
			КонецЕсли;
			НомСтр = НомСтр + 1;
			
			Если СтрокаТаблицыЗначенийЗаполнена(Стр) Тогда 
				ПроверитьСтрокуТаблицыЗначенийНаЗаполненность(Стр, ТаблицаОшибок, НомСтр, "ИнфСВК");
				Если ЗначениеЗаполнено(Стр.ИСОбрРезВККНД) И СтрДлина(СокрЛП(Стр.ИСОбрРезВККНД)) < 7 Тогда
					Постфикс = "___" + Формат(НомСтр, "ЧГ=");
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"КНД должен состоять из 7 символов", "ИнфСВК", "ИСОбрРезВККНД" + Постфикс, ИнфСВК.УИД));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		НомСтр = 0;
		Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр4 Цикл 
			Если Не Стр.УИД = ИнфСВК.УИД Тогда 
				Продолжить;
			КонецЕсли;
			НомСтр = НомСтр + 1;
			Постфикс = "___" + Формат(НомСтр, "ЧГ=");
			
			Если Не ЗначениеЗаполнено(Стр.АудитИСПорНом) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан порядковый номер", "ИнфСВК", "АудитИСПорНом" + Постфикс, ИнфСВК.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Стр.ПризАудит) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан признак", "ИнфСВК", "ПризАудит" + Постфикс, ИнфСВК.УИД));
			КонецЕсли;
			
			Если Стр.ПризАудит = "1" Тогда
				Если Не ЗначениеЗаполнено(Стр.ВидАудит) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан вид аудита", "ИнфСВК", "ВидАудит" + Постфикс, ИнфСВК.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Стр.ПериодАудит) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указана периодичность проведения аудита", "ИнфСВК", "ПериодАудит" + Постфикс, ИнфСВК.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Стр.НаимОргАудит) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указана организация, проводящая аудит", "ИнфСВК", "НаимОргАудит" + Постфикс, ИнфСВК.УИД));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура Проверить_СведИнИнф(Данные, ТаблицаОшибок)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.СведИнИнф Цикл 
		СведИнИнф = Стр.Значение;
		
		Если Не ЗначениеЗаполнено(СведИнИнф.КодНалог) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код налога", "СведИнИнф", "КодНалог", СведИнИнф.УИД));
		ИначеЕсли СтрДлина(СокрЛП(СведИнИнф.КодНалог)) < 6 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан код налога", "СведИнИнф", "КодНалог", СведИнИнф.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведИнИнф.СведИнф) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указаны сведения об информации, подтверждающей правильность исчисления налогов", "СведИнИнф", "СведИнф", СведИнИнф.УИД));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Проверить_СтрРасПокНО(Данные, ТаблицаОшибок)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.СтрРасПокНО Цикл 
		СтрРасПокНО = Стр.Значение;
		
		Если Не ЗначениеЗаполнено(СтрРасПокНО.ПорНом) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан порядковый номер", "СтрРасПокНО", "ПорНом", СтрРасПокНО.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрРасПокНО.КНД) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан КНД", "СтрРасПокНО", "КНД", СтрРасПокНО.УИД));
		ИначеЕсли СтрДлина(СокрЛП(СтрРасПокНО.КНД)) < 7 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан КНД", "СтрРасПокНО", "КНД", СтрРасПокНО.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрРасПокНО.КодНалог) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код налога", "СтрРасПокНО", "КодНалог", СтрРасПокНО.УИД));
		ИначеЕсли СтрДлина(СокрЛП(СтрРасПокНО.КодНалог)) < 6 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан код налога", "СтрРасПокНО", "КодНалог", СтрРасПокНО.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрРасПокНО.КодСтрок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код строки", "СтрРасПокНО", "КодСтрок", СтрРасПокНО.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрРасПокНО.НаимСтрок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование строки", "СтрРасПокНО", "НаимСтрок", СтрРасПокНО.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрРасПокНО.УрРаскрПок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан уровень раскрытия показателей налоговой отчетности", "СтрРасПокНО", "УрРаскрПок", СтрРасПокНО.УИД));
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрРасПокНО.Дебет) И СтрДлина(СокрЛП(СтрРасПокНО.Дебет)) < 2 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Дебет должен иметь минимум 2 символа", "СтрРасПокНО", "Дебет", СтрРасПокНО.УИД));
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрРасПокНО.Кредит) И СтрДлина(СокрЛП(СтрРасПокНО.Кредит)) < 2 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Кредит должен иметь минимум 2 символа", "СтрРасПокНО", "Кредит", СтрРасПокНО.УИД));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Проверить_ИнфОтвЛиц(Данные, ТаблицаОшибок)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ИнфОтвЛиц Цикл 
		ИнфОтвЛиц = Стр.Значение;
		
		Если Не ЗначениеЗаполнено(ИнфОтвЛиц.ПорНом) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан порядковый номер", "ИнфВнесИзм", "ПорНом", ИнфОтвЛиц.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ИнфОтвЛиц.Должность) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана должность", "ИнфОтвЛиц", "Должность", ИнфОтвЛиц.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ИнфОтвЛиц.СтруктПодр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано структурное подразделение организации", "ИнфОтвЛиц", "СтруктПодр", ИнфОтвЛиц.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ИнфОтвЛиц.АдресЭП) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан адрес электронной почты", "ИнфОтвЛиц", "АдресЭП", ИнфОтвЛиц.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ИнфОтвЛиц.Телефон) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан телефон", "ИнфОтвЛиц", "Телефон", ИнфОтвЛиц.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ИнфОтвЛиц.Фамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана фамилия", "ИнфОтвЛиц", "Фамилия", ИнфОтвЛиц.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ИнфОтвЛиц.Имя) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано имя", "ИнфОтвЛиц", "Имя", ИнфОтвЛиц.УИД));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Проверить_ИнфВнесИзм(Данные, ТаблицаОшибок)
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ИнфВнесИзм Цикл 
		ИнфВнесИзм = Стр.Значение;
		
		Если Не ЗначениеЗаполнено(ИнфВнесИзм.ПорНом) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан порядковый номер", "ИнфВнесИзм", "ПорНом", ИнфВнесИзм.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ИнфВнесИзм.ПричВнесИзм) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана причина внесения изменений", "ИнфВнесИзм", "ПричВнесИзм", ИнфВнесИзм.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ИнфВнесИзм.ПерВнесИзм) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана периодичность внесения изменений", "ИнфВнесИзм", "ПерВнесИзм", ИнфВнесИзм.УИД));
		КонецЕсли;
		
		Если (ИнфВнесИзм.ПерВнесИзм = "2" Или ИнфВнесИзм.ПерВнесИзм = "3") Тогда 
			НомСтр = 0;
			Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр1 Цикл 
				Если Не Стр.УИД = ИнфВнесИзм.УИД Тогда 
					Продолжить;
				КонецЕсли;
				НомСтр = НомСтр + 1;
				
				Если Не ЗначениеЗаполнено(Стр.СрокВнесИзм) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан срок", "ИнфВнесИзм", "СрокВнесИзм___" + Формат(НомСтр, "ЧГ="), ИнфВнесИзм.УИД));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПроверитьДокументСВыводомВТаблицу_Форма2020_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	Если Не ЗначениеЗаполнено(Титульная.КодНО) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан налоговый орган", "Титульная", "КодНО"));
	ИначеЕсли Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНО) Или СтрДлина(СокрЛП(Титульная.КодНО)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан налоговый орган", "Титульная", "КодНО"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.Наименование) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации", "Титульная", "Наименование"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата формирования документа", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ИНН) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан ИНН", "Титульная", "ИНН"));
	ИначеЕсли Не ЗначениеЗаполнено(Титульная.КПП) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан КПП", "Титульная", "КПП"));
	Иначе
		Если Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан ИНН", "Титульная", "ИНН"));
		КонецЕсли;
		Если Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Титульная.КПП, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан КПП", "Титульная", "КПП"));
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	ИначеЕсли Не (Титульная.ПРИЗНАК_НП_ПОДВАЛ = "1" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2") Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если (Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Или Не ЗначениеЗаполнено(Данные.ПодписантИмя)) Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Необходимо указать подписанта", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Долж) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана должность подписанта", "Титульная", "Долж"));
	КонецЕсли;
	
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ подписанта", "Титульная", "НаимДок"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ПорСтрИнф) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан порядок структурирования представляемой информации", "Титульная", "ПорСтрИнф"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.СпсПдтвЦДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан способы определения и подтверждения целостности представленных и полученных документов", "Титульная", "СпсПдтвЦДок"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПорИнфВзаим) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан порядок информационного взаимодействия налогового органа и организации", "Титульная", "ПорИнфВзаим"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.СпЗащитИнф) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан способ защиты передаваемой информации", "Титульная", "СпЗащитИнф"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПорОзнакНО) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан порядок ознакомления налогового органа с подлинниками документов", "Титульная", "ПорОзнакНО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.СпИнфВзаим) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан способ информационного взаимодействия", "Титульная", "СпИнфВзаим"));
	ИначеЕсли Титульная.СпИнфВзаим <> "1"
		И Титульная.СпИнфВзаим <> "2"
		И Титульная.СпИнфВзаим <> "3" Тогда
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан способ информационного взаимодействия", "Титульная", "СпИнфВзаим"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ГодНМ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан год", "Титульная", "ГодНМ"));
	ИначеЕсли Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.ГодНМ) Или СтрДлина(СокрЛП(Титульная.ГодНМ)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан год", "Титульная", "ГодНМ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДатаИнф) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата, по состоянию на которую сформирована представляемая информация", "Титульная", "ДатаИнф"));
	КонецЕсли;
	
	Проверить_ПредДокСВК(Данные, ТаблицаОшибок);
	Проверить_УчНОИСНП(Данные, ТаблицаОшибок);
	Проверить_ТехПодИСНП(Данные, ТаблицаОшибок);
	Проверить_ИнтерфИСНП(Данные, ТаблицаОшибок);
	Проверить_ДокумИСНП(Данные, ТаблицаОшибок);
	Проверить_ПорСрокДок(Данные, ТаблицаОшибок);
	Проверить_СпосФормНО(Данные, ТаблицаОшибок);
	Проверить_РегистрБУ(Данные, ТаблицаОшибок);
	Проверить_РегистрНУ(Данные, ТаблицаОшибок);
	Проверить_ИнфСВК(Данные, ТаблицаОшибок);
	Проверить_СведИнИнф(Данные, ТаблицаОшибок);
	Проверить_СтрРасПокНО(Данные, ТаблицаОшибок);
	Проверить_ИнфОтвЛиц(Данные, ТаблицаОшибок);
	Проверить_ИнфВнесИзм(Данные, ТаблицаОшибок);
	
	Для Каждого Стр Из Данные.ПриложенныеФайлы.Строки Цикл 
		Если Стр.Строки.Количество() = 0 Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"К каждому документу необходимо приложить файлы", "ПриложенныеФайлы", ""));
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2020_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура;
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Ложь);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПЮЛ(Объект, ОсновныеСведения);
	Иначе
		ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Истина);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДанныеНПФЛ(Объект, ОсновныеСведения);
	КонецЕсли;
	
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.ДатаПодписи, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("ФамилияПодп", Объект.ПодписантФамилия);
	ОсновныеСведения.Вставить("ИмяПодп", Объект.ПодписантИмя);
	ОсновныеСведения.Вставить("ОтчествоПодп", Объект.ПодписантОтчество);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("КодНО", Данные.ДанныеУведомления.Титульная.КодНО);
	ОсновныеСведения.Вставить("ПрПодп", Данные.ДанныеУведомления.Титульная.ПРИЗНАК_НП_ПОДВАЛ);
	ОсновныеСведения.Вставить("ИННТитул", Данные.ДанныеУведомления.Титульная.ИНН);
	ОсновныеСведения.Вставить("ИННЮЛ", Данные.ДанныеУведомления.Титульная.ИНН);
	ОсновныеСведения.Вставить("НаимДок", Данные.ДанныеУведомления.Титульная.НаимДок);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2020_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	КолФайл = 0;
	Для Каждого Стр1 Из Данные.ПриложенныеФайлы.Строки Цикл 
		КолФайл = КолФайл + Стр1.Строки.Количество();
	КонецЦикла;
	ОсновныеСведения.Вставить("КолФайл", КолФайл);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2020_1(Объект, УникальныйИдентификатор)
	ПроизвольнаяСтрока = Новый ОписаниеТипов("Строка");
	СписокФайлов = Новый СписокЗначений;
	ИменаФайлов = Новый СписокЗначений;
	
	СведенияЭлектронногоПредставления = Новый ТаблицаЗначений;
	СведенияЭлектронногоПредставления.Колонки.Добавить("ИмяФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ТекстФайла", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("КодировкаТекста", ПроизвольнаяСтрока);
	СведенияЭлектронногоПредставления.Колонки.Добавить("ДвоичныеДанныеФайла", Новый ОписаниеТипов("ДвоичныеДанные"));
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДанныеУведомления.Вставить("Организация", Объект.Организация);
	ДанныеУведомления.Вставить("ПодписантФамилия", Объект.ПодписантФамилия);
	ДанныеУведомления.Вставить("ПодписантИмя", Объект.ПодписантИмя);
	ДанныеУведомления.Вставить("Организация", Объект.Организация);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2020_1(ДанныеУведомления, УникальныйИдентификатор);
	Если Ошибки.Количество() > 0 Тогда 
		Если ДанныеУведомления.Свойство("РазрешитьВыгружатьСОшибками") И ДанныеУведомления.РазрешитьВыгружатьСОшибками = Ложь Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""", Объект.Ссылка);
			ВызватьИсключение "";
		Иначе 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При проверке выгрузки обнаружены ошибки. Для просмотра списка ошибок перейдите в форму уведомления, меню ""Проверка"", пункт ""Проверить выгрузку""", Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2020_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2020_1");
	ЗаполнитьДанными_Форма2020_1(Объект, ОсновныеСведения, СтруктураВыгрузки, СписокФайлов, ИменаФайлов);
	Текст = Документы.УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВXML(СтруктураВыгрузки, ОсновныеСведения);
	
	СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
	СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ОсновныеСведения.ИдФайл + ".xml";
	СтрокаСведенийЭлектронногоПредставления.ТекстФайла = Текст;
	СтрокаСведенийЭлектронногоПредставления.КодировкаТекста = "windows-1251";
	
	Если СведенияЭлектронногоПредставления.Количество() = 0 Тогда
		СведенияЭлектронногоПредставления = Неопределено;
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		МодульРаботаСФайлами = ОбщегоНазначения.ОбщийМодуль("РаботаСФайлами");
		Для Инд = 0 По СписокФайлов.Количество() - 1 Цикл 
			Файл = СписокФайлов[Инд];
			ИмяФайлаПрод = ИменаФайлов[Инд];
			СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
			СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ИмяФайлаПрод;
			СтрокаСведенийЭлектронногоПредставления.ДвоичныеДанныеФайла = МодульРаботаСФайлами.ДвоичныеДанныеФайла(Файл.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ДополнитьПараметры_2020(Параметры)
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ТехПодИСНП Цикл 
		ТехПодИСНП = Стр.Значение;
		
		Для Каждого Элт Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
				"ВремяРабНачал_С,ВремяРабОконч_По,ВремяВыхНачал_С,ВремяВыхОконч_По", ",") Цикл 
			
			ТехПодИСНП[Элт] = Формат(ТехПодИСНП[Элт], "ДФ=HH.mm; ДП=' '");
		КонецЦикла;
	КонецЦикла;

	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ПредДокСВК Цикл 
		ПредДокСВК = Стр.Значение;
		
		Для Каждого Элт Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
				"ВрДостИСРабНачал_С,ВрДостИСРабОконч_По,ВрДостИСВыхНачал_С,ВрДостИСВыхОконч_По,"
				+ "ТехПерРабНачал_С,ТехПерРабОконч_По,ТехПерВыхНачал_С,ТехПерВыхОконч_По", ",") Цикл 
			
			ПредДокСВК[Элт] = Формат(ПредДокСВК[Элт], "ДФ=HH.mm; ДП=' '");
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеДопСтрокБД.МнгСтр7 Цикл
		Стр.Начал_С = Формат(Стр.Начал_С, "ДФ=HH.mm; ДП=' '");
		Стр.Оконч_По = Формат(Стр.Оконч_По, "ДФ=HH.mm; ДП=' '");
		Стр.ДатаАкт = Формат(Стр.ДатаАкт, "ДФ=dd.MM; ДП=' '");
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьДанными_Форма2020_1(Объект, Параметры, ДеревоВыгрузки, СписокФайлов, ИменаФайлов)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры_2020(ДанныеУведомления);
	ЗаполнитьДаннымиУзелНов(ДанныеУведомления, ДеревоВыгрузки);
	
	ДатаИмФайла = Формат(ТекущаяДатаСеанса(), "ДФ=_yyyyMMdd_");
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
	Узел_РИВ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "РИВ");
	Узел_ДокСкан = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_РИВ, "ДокСкан");
	Для Каждого Стр0 Из ДанныеУведомления.ПриложенныеФайлы.Строки Цикл
		УИД1 = Строка(Новый УникальныйИдентификатор);
		НовУзел_ДокСкан = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_ДокСкан);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовУзел_ДокСкан, "НаимДок", Стр0.Документ);
		
		Узел_ИмяФайлДок = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовУзел_ДокСкан, "ИмяФайлДок");
		Для Каждого Стр1 Из Стр0.Строки Цикл
			УИД2 = Строка(Новый УникальныйИдентификатор);
			НовУзел_ИмяФайлДок = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_ИмяФайлДок);
			ИмяФайлаПрод = "1110304_" + Параметры.ИННЮЛ + Параметры.КПП + "_"  + Параметры.КодНО 
							+ "_" + УИД1 + ДатаИмФайла + УИД2 + ".pdf";
			РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(НовУзел_ИмяФайлДок, ИмяФайлаПрод);
			
			ИменаФайлов.Добавить(ИмяФайлаПрод);
			СписокФайлов.Добавить(Стр1.ПрисоединенныйФайл);
		КонецЦикла;
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(Узел_ДокСкан);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
КонецПроцедуры

Процедура ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Узел, ПараметрыТекущейСтраницы = Неопределено, УИДРодителя = Неопределено)
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		Если Стр.Тип = "А" Или Стр.Тип = "A" Или Стр.Тип = "П" Тогда
			Если Стр.Многострочность = Истина Тогда
				Многострочность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеДопСтрокБД.Свойство(Стр.Раздел, Многострочность)
					И ТипЗнч(Многострочность) = Тип("ТаблицаЗначений") Тогда
				
					Для Каждого СтрМнгч Из Многострочность Цикл
						Если ЗначениеЗаполнено(УИДРодителя)
							И УИДРодителя <> СтрМнгч.УИД Тогда 
							
							Продолжить;
						КонецЕсли;
						
						НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(НовУзел, СтрМнгч[НовУзел["Ключ"]]);
					КонецЦикла;
					
					РегламентированнаяОтчетность.УдалитьУзел(Стр);
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(Стр.Ключ) Тогда
				ЗначениеПоказателя = Неопределено;
				Если ПараметрыТекущейСтраницы <> Неопределено И ПараметрыТекущейСтраницы.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда 
					РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
				ИначеЕсли ПараметрыТекущейСтраницы = Неопределено 
					И ЗначениеЗаполнено(Стр.Раздел)
					И ПараметрыВыгрузки.ДанныеУведомления.Свойство(Стр.Раздел, ЗначениеПоказателя) Тогда 
					Если ЗначениеПоказателя.Свойство(Стр.Ключ, ЗначениеПоказателя) Тогда
						РегламентированнаяОтчетность.ВывестиПоказательСтатистикиВXML(Стр, ЗначениеПоказателя);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда
			Если Стр.Многостраничность = Истина Тогда
				Многостраничность = Неопределено;
				Если ПараметрыВыгрузки.ДанныеМногостраничныхРазделов.Свойство(Стр.Раздел, Многостраничность)
					И ТипЗнч(Многостраничность) = Тип("СписокЗначений") Тогда
				
					Для Каждого СтрМнгч Из Многостраничность Цикл 
						Если УИДРодителя = Неопределено Или СтрМнгч.Значение.УИДРодителя = УИДРодителя Тогда 
							НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
							ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, НовУзел, СтрМнгч.Значение, СтрМнгч.Значение.УИД);
						КонецЕсли;
					КонецЦикла;
					
					РегламентированнаяОтчетность.УдалитьУзел(Стр);
				КонецЕсли;
			Иначе
				
				Если Стр.Многострочность = Истина Тогда
					Многострочность = Неопределено;
					Если ПараметрыВыгрузки.ДанныеДопСтрокБД.Свойство(Стр.Раздел, Многострочность)
						И ТипЗнч(Многострочность) = Тип("ТаблицаЗначений") Тогда
					
						Для Каждого СтрМнгч Из Многострочность Цикл
							Если ЗначениеЗаполнено(УИДРодителя)
								И УИДРодителя <> СтрМнгч.УИД Тогда 
								
								Продолжить;
							КонецЕсли;
							
							НовУзел = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Стр);
							ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, НовУзел, 
								ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрМнгч));
						КонецЦикла;
						
						РегламентированнаяОтчетность.УдалитьУзел(Стр);
					КонецЕсли;
					Иначе
						ЗаполнитьДаннымиУзелНов(ПараметрыВыгрузки, Стр, ПараметрыТекущейСтраницы, УИДРодителя);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2020_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("ПечатьВСледующихВерсиях"));
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1, Ложь);
	Возврат Листы;
КонецФункции
#КонецОбласти
#КонецЕсли
