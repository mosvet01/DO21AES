
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Исполнитель = Неопределено Тогда
		Исполнитель = Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;
	
	Задача = Параметры.Задача;
	
	Если Параметры.Свойство("МассивЗадач") Тогда
		МассивЗадач.ЗагрузитьЗначения(Параметры.МассивЗадач);
		ЭтаФорма.Заголовок = СтрШаблон(НСтр("ru = 'Перенаправление задач (%1 шт)'"), 
			Параметры.МассивЗадач.Количество());
	Иначе
		МассивЗадач.Добавить(Задача);			
	КонецЕсли;	
	
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ЗаполнитьСписокВыбора(ЭтаФорма, ЭлементыДляСохранения(), ЭтаФорма.ИмяФормы);
	
	ПроверятьОтсутствие = Отсутствия.ПредупреждатьОбОтсутствии();
	
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		НастроитьЭлементыФормыДляМобильногоУстройства();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("Исполнитель");
	
	Если ТипЗнч(Исполнитель) = Тип("СправочникСсылка.ПолныеРоли")
		И Не ИгнорироватьПредупреждения 
		И Не БизнесПроцессыИЗадачиСервер.ЕстьИсполнителиРоли(Исполнитель) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'На указанную роль не назначено ни одного исполнителя. (Чтобы проигнорировать это предупреждение, установите флажок.)'"),,,
			"Исполнитель",
			Отказ);
		Элементы.ИгнорироватьПредупреждения.Видимость = Истина;
	КонецЕсли;
	
	// Проверка прав доступа участников процесса на предмет
	Если ДокументооборотПраваДоступаПовтИсп.ВключеноИспользованиеПравДоступа() Тогда
		
		Для Каждого СтрСписок Из МассивЗадач Цикл
			
			ТекЗадача = СтрСписок.Значение;
			
			РеквизитыЗадачи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекЗадача, "БизнесПроцесс, СрокИсполнения");
			БизнесПроцесс = РеквизитыЗадачи.БизнесПроцесс;
			СрокИсполнения = РеквизитыЗадачи.СрокИсполнения;
			
			ПредметыМассив = МультипредметностьКлиентСервер.ПолучитьМассивПредметовОбъекта(БизнесПроцесс);
			
			Если ПредметыМассив.Количество() > 0 Тогда
				
				// Определим предметы для проверок
				ПредметыДляПроверкиПрав = 
					Мультипредметность.ПредметыДляПроверкиПрав(ПредметыМассив, БизнесПроцесс);
					
				ПредметыДляПроверкиПравДоступаУчастников = 
					ПредметыДляПроверкиПрав.ДляПроверкиПравДоступаУчастников;
				
				ПредметыДляПроверкиНарушенияПолитикиДоступа = 
					ПредметыДляПроверкиПрав.ДляПроверкиНарушенияПолитикиДоступа;
				
				ПредметыСОграниченнымДоступом = Новый Массив;
				
				// Проверка нарушения политики доступа при расширении рабочей группы предмета.
				Участники = РаботаСРабочимиГруппами.ПолучитьПустуюТаблицуУчастников();
				РаботаСРабочимиГруппами.ДобавитьУчастникаВТаблицуНабора(Участники, Исполнитель);
				
				Для Каждого Предмет Из ПредметыДляПроверкиНарушенияПолитикиДоступа Цикл
					Попытка
						Мультипредметность.ПроверитьНарушениеПолитикиДоступаПриРасширенииРабочейГруппыПредмета(
							Предмет, Участники);
					Исключение
						ПредметыСОграниченнымДоступом.Добавить(Предмет);
					КонецПопытки;
				КонецЦикла;
				
				// Проверка прав на предметы без автоматического заполнения рабочей группы.
				
				ПользователиДляПроверки = 
					Мультипредметность.ПользователиДляПроверкиПрав(Участники);
				
				ПраваУчастниковНаПредметы = ДокументооборотПраваДоступа.ПолучитьПраваПользователейПоОбъектам(
					ПредметыДляПроверкиПравДоступаУчастников,
					Истина,
					ПользователиДляПроверки.ВыгрузитьКолонку("Участник"));
				
				Для Каждого Предмет Из ПредметыДляПроверкиПравДоступаУчастников Цикл
					
					Для Каждого СтрокаПользователь Из ПользователиДляПроверки Цикл
						
						Отбор = Новый Структура;
						Отбор.Вставить("ОбъектДоступа", Предмет);
						Отбор.Вставить("Пользователь", СтрокаПользователь.Участник);
						
						НайденныеПрава = ПраваУчастниковНаПредметы.НайтиСтроки(Отбор);
						Если НайденныеПрава.Количество() = 0 Тогда
							ПредметыСОграниченнымДоступом.Добавить(Предмет);
						КонецЕсли;
					КонецЦикла;
					
				КонецЦикла;
				
				КоличествоПредметов = ПредметыСОграниченнымДоступом.Количество();
				
				Если КоличествоПредметов <> 0 Тогда
					
					Отказ = Истина;
					
					ТекстОшибки = "%1%2";
					
					Если ТипЗнч(Исполнитель) = Тип("СправочникСсылка.ПолныеРоли") Тогда
						ПерваяЧастьТекстаОшибки = НСтр("ru = 'У некоторых исполнителей роли нет прав '");
					Иначе
						ПерваяЧастьТекстаОшибки = НСтр("ru = 'У пользователя нет прав '");
					КонецЕсли;
					
					Если КоличествоПредметов = 1 Тогда
						ВтораяЧастьТекстаОшибки = СтрШаблон(
							НСтр("ru = 'на предмет ""%1""'"),
							Строка(ПредметыСОграниченнымДоступом[0]));
					Иначе
						
						ПредметыСтрокой = "";
						
						ПереносСтроки = "";
						
						Для Каждого Предмет Из ПредметыСОграниченнымДоступом Цикл
							ПредметыСтрокой = ПредметыСтрокой
								+ ПереносСтроки
								+ "  "
								+ Строка(Предмет);
							
							ПереносСтроки = Символы.ПС;
						КонецЦикла;
						
						ВтораяЧастьТекстаОшибки = НСтр("ru = 'на предметы
							|%1'");
						
						ВтораяЧастьТекстаОшибки = СтрШаблон(
							ВтораяЧастьТекстаОшибки,
							ПредметыСтрокой);
						
					КонецЕсли;
					
					ТекстОшибки = СтрШаблон(ТекстОшибки, ПерваяЧастьТекстаОшибки, ВтораяЧастьТекстаОшибки);
					Если Не ЗначениеЗаполнено(Задача) Тогда
						ТекстОшибки = ТекстОшибки + ". " + Строка(ТекЗадача);
					КонецЕсли;	
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,,
						"Исполнитель");
					
				КонецЕсли;
				
				// Проверка прав на файлы предметов без автоматического заполнения рабочей группы.
				УчастникиБезПравНаФайлы = УправлениеМероприятиями.ПроверитьПраваУчастниковПроцессаНаФайлыПредметов(
					БизнесПроцесс,
					ПредметыДляПроверкиПравДоступаУчастников,
					ПользователиДляПроверки);
				Если УчастникиБезПравНаФайлы <> Неопределено Тогда
					
					ПредметыСОграниченнымДоступомКФайлам = Новый Массив;
					
					Для Каждого Предмет Из ПредметыДляПроверкиПравДоступаУчастников Цикл
						
						Отбор = Новый Структура;
						Отбор.Вставить("Предмет", Предмет);
						НайденныеУчастникиБезПрав = УчастникиБезПравНаФайлы.НайтиСтроки(Отбор);
						Если НайденныеУчастникиБезПрав.Количество() <> 0 Тогда
							ПредметыСОграниченнымДоступомКФайлам.Добавить(Предмет);
						КонецЕсли;
						
						КоличествоПредметов = ПредметыСОграниченнымДоступомКФайлам.Количество();
						Если КоличествоПредметов <> 0 Тогда
							
							Отказ = Истина;
							
							ТекстОшибки = "%1%2";
							
							Если ТипЗнч(Исполнитель) = Тип("СправочникСсылка.ПолныеРоли") Тогда
								ПерваяЧастьТекстаОшибки = НСтр("ru = 'У некоторых исполнителей роли нет прав '");
							Иначе
								ПерваяЧастьТекстаОшибки = НСтр("ru = 'У пользователя нет прав '");
							КонецЕсли;
							
							Если КоличествоПредметов = 1 Тогда
								ВтораяЧастьТекстаОшибки = СтрШаблон(
									НСтр("ru = 'на файлы предмета ""%1""'"),
									Строка(ПредметыСОграниченнымДоступомКФайлам[0]));
							Иначе
								
								ПредметыСтрокой = "";
								
								ПереносСтроки = "";
								
								Для Каждого Предмет Из ПредметыСОграниченнымДоступомКФайлам Цикл
									ПредметыСтрокой = ПредметыСтрокой
										+ ПереносСтроки
										+ "  "
										+ Строка(Предмет);
									
									ПереносСтроки = Символы.ПС;
								КонецЦикла;
								
								ВтораяЧастьТекстаОшибки = НСтр("ru = 'на файлы предметов
									|%1'");
								
								ВтораяЧастьТекстаОшибки = СтрШаблон(
									ВтораяЧастьТекстаОшибки,
									ПредметыСтрокой);
								
							КонецЕсли;
							
							ТекстОшибки = СтрШаблон(ТекстОшибки, ПерваяЧастьТекстаОшибки, ВтораяЧастьТекстаОшибки);
							Если Не ЗначениеЗаполнено(Задача) Тогда
								ТекстОшибки = ТекстОшибки + ". " + Строка(ТекЗадача);
							КонецЕсли;	
							
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
								ТекстОшибки,,
								"Исполнитель");
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
				
			КонецЕсли;	
			
		КонецЦикла;	
		
	КонецЕсли;
	
	// Проверка наличия нового исполнителя среди исполнителей проектной задачи
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда
		
		Для Каждого СтрСписок Из МассивЗадач Цикл
			
			ТекЗадача = СтрСписок.Значение;
			
			Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				ТекЗадача, "Проект");
			
			ПроектнаяЗадача = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				ТекЗадача, "ПроектнаяЗадача");
			
			Если ЗначениеЗаполнено(ПроектнаяЗадача) Тогда 
				
				Трудозатраты = Справочники.ПроектныеЗадачи.ПолучитьПлановыеТрудозатратыИсполнителяПроектнойЗадачи(
					ПроектнаяЗадача,
					Исполнитель);
				
				Если Трудозатраты = Неопределено Тогда
						
					СообщениеПользователю = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Исполнитель ""%1"" не найден среди исполнителей проектной задачи ""%2""'"),
						Строка(Исполнитель),
						Строка(ПроектнаяЗадача));
						
					Если Не ЗначениеЗаполнено(Задача) Тогда
						СообщениеПользователю = СообщениеПользователю + ". " + Строка(ТекЗадача);
					КонецЕсли;	
						
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(	
						СообщениеПользователю,
						,
						"Исполнитель",
						,
						Отказ);
				КонецЕсли;	
				
			ИначеЕсли ЗначениеЗаполнено(Проект)	Тогда 
				
				ИсполнительНайден = РаботаСПроектами.НайтиИсполнителяРольВКомандеПроекта(
						Проект,
						Исполнитель);
				
				Если Не ИсполнительНайден Тогда
							
					СообщениеПользователю = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Исполнитель ""%1"" не найден среди участников проектной команды проекта ""%2""'"),
						Строка(Исполнитель),
						Строка(Проект));
						
					Если Не ЗначениеЗаполнено(Задача) Тогда
						СообщениеПользователю = СообщениеПользователю + ". " + Строка(ТекЗадача);
					КонецЕсли;	
						
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(	
						СообщениеПользователю,
						,
						"Исполнитель",
						,
						Отказ);
				КонецЕсли;
				
			КонецЕсли;	
			
		КонецЦикла;	
			
	КонецЕсли;
	
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ОбновитьСпискиВыбора(ЭтаФорма, ЭлементыДляСохранения(), ЭтаФорма.ИмяФормы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РаботаСБизнесПроцессамиКлиент.УчастникНачалоВыбора(
		Элемент, Исполнитель, СтандартнаяОбработка, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОчистка(Элемент, СтандартнаяОбработка)
	
	Исполнитель = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
		
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДополнениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПолныеРоли");
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбора(Текст, ДополнениеТипа);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДополнениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПолныеРоли");
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбора(Текст, ДополнениеТипа);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Перенаправить(Команда)
	
	ОчиститьСообщения();
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПеренаправитьЗавершение", ЭтотОбъект);
	
	Если ЗначениеЗаполнено(Задача) Тогда
		Если Не ОтсутствияКлиент.ПроверитьОтсутствиеПоЗадаче(ЭтаФорма, ОписаниеОповещения) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренаправитьЗавершение(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(ПараметрыЗакрытия());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЭлементыДляСохранения()
	
	СохраняемыеЭлементы = Новый Структура("Исполнитель", Исполнитель);
	
	Возврат СохранениеВводимыхЗначений.СформироватьТаблицуСохраняемыхЭлементов(СохраняемыеЭлементы);
	
КонецФункции

&НаКлиенте
Функция ПараметрыЗакрытия()
	
	ПереадресацияПользователю = ТипЗнч(Исполнитель) = Тип("СправочникСсылка.Пользователи");
	
	Возврат Новый Структура("Исполнитель,РольИсполнителя,Комментарий",
		?(ПереадресацияПользователю, Исполнитель, Неопределено),
		?(ПереадресацияПользователю, Неопределено, Исполнитель),
		Комментарий);
	
	КонецФункции

&НаСервере
Процедура НастроитьЭлементыФормыДляМобильногоУстройства()
	
	ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Верх;
	Элементы.Переместить(Элементы.ИгнорироватьПредупреждения, ЭтотОбъект, Элементы.Исполнитель);
	
	Элементы.Перенаправить.Картинка = БиблиотекаКартинок.ПереместитьВправо;
	Элементы.Перенаправить.Отображение = ОтображениеКнопки.Картинка;
	
КонецПроцедуры

#КонецОбласти