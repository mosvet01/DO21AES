///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

&НаКлиенте
Перем КлиентскиеПараметры Экспорт;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	ПерсональныеНастройки = ЭлектроннаяПодпись.ПерсональныеНастройки();
	СохранятьСертификатВместеСПодписью = ПерсональныеНастройки.СохранятьСертификатВместеСПодписью;
	СохранятьСертификатВместеСПодписьюИсходноеЗначение = СохранятьСертификатВместеСПодписью;
	
	СохранятьДоверенность = ПерсональныеНастройки.СохранятьДоверенность;
	СохранятьДоверенностьНачальноеЗначение = СохранятьДоверенность;
	
	СохранятьВсеПодписи = Параметры.СохранятьВсеПодписи;
	
	Если ЗначениеЗаполнено(Параметры.ЗаголовокДанных) Тогда
		Элементы.ПредставлениеДанных.Заголовок = Параметры.ЗаголовокДанных;
	Иначе
		Элементы.ПредставлениеДанных.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	КонецЕсли;
	
	ПредставлениеДанных = Параметры.ПредставлениеДанных;
	Элементы.ПредставлениеДанных.Гиперссылка = Параметры.ПредставлениеДанныхОткрывается;
	
	Если Не ЗначениеЗаполнено(ПредставлениеДанных) Тогда
		Элементы.ПредставлениеДанных.Видимость = Ложь;
	КонецЕсли;
	
	Если Не Параметры.ПоказатьКомментарий Тогда
		Элементы.ТаблицаПодписейКомментарий.Видимость = Ложь;
	КонецЕсли;
	
	ЗаполнитьПодписи(Параметры.Объект);
	
	БольшеНеСпрашивать = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если СохранятьВсеПодписи Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставлениеДанныхНажатие(Элемент, СтандартнаяОбработка)
	
	ЭлектроннаяПодписьСлужебныйКлиент.ПредставлениеДанныхНажатие(ЭтотОбъект,
		Элемент, СтандартнаяОбработка, КлиентскиеПараметры.ТекущийСписокПредставлений);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьПодпись(Команда)
	
	Если БольшеНеСпрашивать
		Или (СохранятьСертификатВместеСПодписью <> СохранятьСертификатВместеСПодписьюИсходноеЗначение) 
		Или (СохранятьДоверенность <> СохранятьДоверенностьНачальноеЗначение) Тогда
		СохранитьНастройки(БольшеНеСпрашивать, СохранятьСертификатВместеСПодписью, СохранятьДоверенность);
		ОбновитьПовторноИспользуемыеЗначения();
		Оповестить("Запись_ЛичныеНастройкиЭлектроннойПодписиИШифрования", Новый Структура, "ДействияПриСохраненииСЭП, СохранятьСертификатВместеСПодписью");
	КонецЕсли;
	
	Закрыть(ТаблицаПодписей);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлектроннаяПодписьСлужебный.ОформитьСписокПодписей(ЭтотОбъект, "ТаблицаПодписей");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодписи(Объект)
	
	Если ТипЗнч(Объект) = Тип("Строка") Тогда
		КоллекцияПодписей = ПолучитьИзВременногоХранилища(Объект);
	Иначе
		КоллекцияПодписей = ЭлектроннаяПодпись.УстановленныеПодписи(Объект);
	КонецЕсли;
	
	ДанныеДоверенностей = ДанныеДоверенностейКоллекцииПодписей(КоллекцияПодписей);
	
	Для каждого ВсеСвойстваПодписи Из КоллекцияПодписей Цикл
		НоваяСтрока = ТаблицаПодписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВсеСвойстваПодписи);
		
		НоваяСтрока.АдресПодписи = ПоместитьВоВременноеХранилище(
			ВсеСвойстваПодписи.Подпись, УникальныйИдентификатор);
		
		ДанныеПоСертификату = ЭлектроннаяПодписьСлужебный.ДанныеПоСертификату(ВсеСвойстваПодписи, УникальныйИдентификатор);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеПоСертификату);
		
		ДанныеДоверенности = ДанныеДоверенностей[ВсеСвойстваПодписи.УникальныйИдентификатор];
		Если ДанныеДоверенности <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДоверенности);
		КонецЕсли;
		
		НоваяСтрока.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьНастройки(БольшеНеСпрашивать, СохранятьСертификатВместеСПодписью, СохранятьДоверенность)
	
	ЧастьНастроек = Новый Структура;
	Если БольшеНеСпрашивать Тогда
		ЧастьНастроек.Вставить("ДействияПриСохраненииСЭП", "СохранятьВсеПодписи");
	КонецЕсли;
	ЧастьНастроек.Вставить("СохранятьСертификатВместеСПодписью", СохранятьСертификатВместеСПодписью);
	ЧастьНастроек.Вставить("СохранятьДоверенность", СохранятьДоверенность);
	ЭлектроннаяПодписьСлужебный.СохранитьПерсональныеНастройки(ЧастьНастроек);
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

Функция ДанныеДоверенностейКоллекцииПодписей(КоллекцияПодписей)
	
	ИдентификаторыПодписей = Новый Массив;
	Для Каждого СвойстваПодписи Из КоллекцияПодписей Цикл
		ИдентификаторыПодписей.Добавить(СвойстваПодписи.УникальныйИдентификатор);
	КонецЦикла;
	
	ДанныеДоверенностей = РаботаСЭП.ДанныеДоверенностейПодписей(ИдентификаторыПодписей);
	
	Доверенности = Новый Массив;
	Для Каждого Элемент Из ДанныеДоверенностей Цикл
		ДанныеДоверенности = Элемент.Значение;
		Доверенности.Добавить(ДанныеДоверенности.Доверенность);
	КонецЦикла;
	
	Доверенности = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Доверенности);
	
	ДанныеДляВыгрузки = РаботаСЭП.ДанныеДоверенностейДляВыгрузки(Доверенности, УникальныйИдентификатор);
	
	ДанныеДоверенностейКоллекции = Новый Соответствие;
	
	Для Каждого СвойстваПодписи Из КоллекцияПодписей Цикл
		
		ИдентификаторПопдиси = СвойстваПодписи.УникальныйИдентификатор;
		
		ДанныеДоверенностиКоллекции = Новый Структура;
		ДанныеДоверенностиКоллекции.Вставить("ДоверенностьСсылка", Неопределено);
		ДанныеДоверенностиКоллекции.Вставить("ДоверенностьПредставление", "");
		ДанныеДоверенностиКоллекции.Вставить("АдресДанныхВыгрузкиДоверенности", "");
		
		ДанныеДоверенности = ДанныеДоверенностей[ИдентификаторПопдиси];
		Если ДанныеДоверенности <> Неопределено Тогда
			
			Доверенность = ДанныеДоверенности.Доверенность;
			
			ДанныеДоверенностиКоллекции.ДоверенностьСсылка = Доверенность;
			ДанныеДоверенностиКоллекции.ДоверенностьПредставление = Строка(Доверенность);
			
			ДанныеВыгрузки = ДанныеДляВыгрузки[Доверенность];
			ДанныеДоверенностиКоллекции.АдресДанныхВыгрузкиДоверенности = ПоместитьВоВременноеХранилище(
				ДанныеВыгрузки, УникальныйИдентификатор);
			
		КонецЕсли;
		
		ДанныеДоверенностейКоллекции.Вставить(ИдентификаторПопдиси, ДанныеДоверенностиКоллекции);
		
	КонецЦикла;
	
	Возврат ДанныеДоверенностейКоллекции;
	
КонецФункции

#КонецОбласти
