#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗначениеВДанныеФормы(НастройкаОтправкиИСостояниеПоследнейОтправки(), Организации);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ОбновитьСведенияНастроек", 300);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОрганизации

&НаКлиенте
Процедура ОрганизацииОтметкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
	
	ИзменитьНастройкуПоОрганизации(ТекущиеДанные.Организация, Отметки(ТекущиеДанные));
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Поле.Имя = "ОрганизацииСостояние" Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.Состояние) Тогда
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("ОтборОрганизация", ТекущиеДанные.Организация);
			
			ОткрытьФорму("РегистрСведений.ЖурналПередачиОтчетностиВБанк.ФормаСписка",
				ПараметрыОткрытия, , ТекущиеДанные.Организация);
			
		КонецЕсли;
		
	ИначеЕсли Поле.Имя = "ОрганизацииОСВПоСчетамГиперссылка" Тогда
		НастроитьСчетаПоОрганизации(ТекущиеДанные.Организация, ТекущиеДанные.Транзакции);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьСейчас(Команда)
	
	Если Элементы.Организации.ТекущиеДанные = Неопределено Тогда
		ТекстОповещения = НСтр("ru = 'Не выбрана организация для отправки отчетов в Сбербанк'");
		ПоказатьПредупреждение( , ТекстОповещения);
		Возврат;
	КонецЕсли;
	
	Организация = Элементы.Организации.ТекущиеДанные.Организация;
	
	ЕстьОтчетыДляОправки = Элементы.Организации.ТекущиеДанные.Транзакции
	                   ИЛИ Элементы.Организации.ТекущиеДанные.ОСВПоСчетам;
	
	Если ЕстьОтчетыДляОправки Тогда
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьЗавершениеОтправкиВФоне", ЭтотОбъект);
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Отправка сведений в Сбербанк'");
		
		ДлительнаяОперация = ОтправитьОтчетностьВФоне(Организация);
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		
	Иначе
		ТекстОповещения = НСтр("ru = 'Для организации %1 не выбраны отчеты для отправки в Сбербанк'");
		ТекстОповещения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОповещения, Организация);
		
		ПоказатьПредупреждение( , ТекстОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьСведенияНастроек()
	
	ОбновитьСведенияНастроекНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСведенияНастроекНаСервере()
	
	Отправки = НастройкаОтправкиИСостояниеПоследнейОтправки();
	
	Для Каждого СтрокаПоОрганизации Из Организации Цикл
		СтрокаНастройки = Отправки.Найти(СтрокаПоОрганизации.Организация, "Организация");
		Если СтрокаНастройки <> Неопределено Тогда
			СтрокаПоОрганизации.Транзакции  = СтрокаНастройки.Транзакции;
			СтрокаПоОрганизации.ОСВПоСчетам = СтрокаНастройки.ОСВПоСчетам;
			СтрокаПоОрганизации.Отправлено  = СтрокаНастройки.Отправлено;
			СтрокаПоОрганизации.Состояние   = СтрокаНастройки.Состояние;
			СтрокаПоОрганизации.ОСВПоСчетамГиперссылка = СтрокаНастройки.ОСВПоСчетамГиперссылка;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НастройкаОтправкиИСостояниеПоследнейОтправки()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЖурналПередачиОтчетностиВБанк.Организация КАК Организация,
		|	МАКСИМУМ(ЖурналПередачиОтчетностиВБанк.ДатаОтправки) КАК ДатаОтправки
		|ПОМЕСТИТЬ ВТ_ПоследниеОтправки
		|ИЗ
		|	РегистрСведений.ЖурналПередачиОтчетностиВБанк КАК ЖурналПередачиОтчетностиВБанк
		|
		|СГРУППИРОВАТЬ ПО
		|	ЖурналПередачиОтчетностиВБанк.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПоследниеОтправки.Организация КАК Организация,
		|	ВТ_ПоследниеОтправки.ДатаОтправки КАК ДатаОтправки,
		|	ЖурналПередачиОтчетностиВБанк.Состояние КАК Состояние
		|ПОМЕСТИТЬ ВТ_СостоянияПоследнихОтправок
		|ИЗ
		|	ВТ_ПоследниеОтправки КАК ВТ_ПоследниеОтправки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналПередачиОтчетностиВБанк КАК ЖурналПередачиОтчетностиВБанк
		|		ПО ВТ_ПоследниеОтправки.Организация = ЖурналПередачиОтчетностиВБанк.Организация
		|			И ВТ_ПоследниеОтправки.ДатаОтправки = ЖурналПередачиОтчетностиВБанк.ДатаОтправки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Организации.Ссылка КАК Организация,
		|	ЕСТЬNULL(НастройкиОтправкиОтчетностиВБанк.ОтправлятьОтчеты, ЛОЖЬ) КАК Транзакции,
		|	ЕСТЬNULL(НастройкиОтправкиОтчетностиВБанк.ОтправлятьОСВПоСчетам, ЛОЖЬ) КАК ОСВПоСчетам,
		|	НастройкиОтправкиОтчетностиВБанк.СчетаОСВПоСчетам КАК СчетаОСВПоСчетам,
		|	ВТ_СостоянияПоследнихОтправок.ДатаОтправки КАК Отправлено,
		|	ВТ_СостоянияПоследнихОтправок.Состояние КАК Состояние
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОтправкиОтчетностиВБанк КАК НастройкиОтправкиОтчетностиВБанк
		|		ПО Организации.Ссылка = НастройкиОтправкиОтчетностиВБанк.Организация
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СостоянияПоследнихОтправок КАК ВТ_СостоянияПоследнихОтправок
		|		ПО Организации.Ссылка = ВТ_СостоянияПоследнихОтправок.Организация
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	НастройкиПоОрганизациям = Запрос.Выполнить().Выгрузить();
	
	УстановитьПривилегированныйРежим(Истина);
	
	Отбор = Новый Структура();
	Отбор.Вставить("Метаданные", "ОтправкаОтчетностиВБанк");
	Задания = РегламентныеЗаданияСервер.НайтиЗадания(Отбор);
	
	Для Каждого РегЗадание Из Задания Цикл
		Если РегЗадание.Параметры.Количество() > 0 Тогда
			Организация = РегЗадание.Параметры[0];
			СтрокаНастройки = НастройкиПоОрганизациям.Найти(Организация, "Организация");
			Если СтрокаНастройки <> Неопределено Тогда
				СтрокаНастройки.Транзакции  = (СтрокаНастройки.Транзакции И РегЗадание.Использование);
				СтрокаНастройки.ОСВПоСчетам = (СтрокаНастройки.ОСВПоСчетам И РегЗадание.Использование);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ЗаполнитьПолеСчетовВНастройках(НастройкиПоОрганизациям);
	
	Возврат НастройкиПоОрганизациям;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПолеСчетовВНастройках(НастройкиПоОрганизациям)
	
	НастройкиПоОрганизациям.Колонки.Добавить("ОСВПоСчетамГиперссылка", Новый ОписаниеТипов("Строка"));
	
	Для Каждого СтрокаНастройки Из НастройкиПоОрганизациям Цикл
		СчетаОСВПоСчетам = Неопределено;
		Если СтрокаНастройки.ОСВПоСчетам Тогда
			СчетаОСВПоСчетам = СтрокаНастройки.СчетаОСВПоСчетам.Получить();
		КонецЕсли;
		СтрокаНастройки.ОСВПоСчетамГиперссылка = ТекстГиперссылкиПоСчетам(
			СтрокаНастройки.ОСВПоСчетам, СчетаОСВПоСчетам);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция Отметки(СтрокаНастроек)
	
	Отметки = Новый Структура;
	Отметки.Вставить("Транзакции", СтрокаНастроек.Транзакции);
	Отметки.Вставить("ОСВПоСчетам", СтрокаНастроек.ОСВПоСчетам);
	
	Возврат Отметки;
	
КонецФункции

&НаСервере
Процедура ИзменитьНастройкуПоОрганизации(Организация, Отметки)
	
	ЗаписьНастройки = РегистрыСведений.НастройкиОтправкиОтчетностиВБанк.СоздатьМенеджерЗаписи();
	ЗаписьНастройки.Организация = Организация;
	ЗаписьНастройки.Прочитать();
	
	ЗаписьНастройки.Организация = Организация;
	ЗаписьНастройки.ОтправлятьОтчеты = Отметки.Транзакции;
	ЗаписьНастройки.ОтправлятьОСВПоСчетам = Отметки.ОСВПоСчетам;
	
	ЗаписьНастройки.Записать();
	
	ОтправлятьОтчеты = Ложь;
	Для Каждого Отметка Из Отметки Цикл
		ОтправлятьОтчеты = ОтправлятьОтчеты ИЛИ Отметка.Значение;
	КонецЦикла;
	
	Если ОтправлятьОтчеты Тогда
		ВключитьЗадание(Организация);
	Иначе
		ВыключитьЗадание(Организация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВключитьЗадание(Организация)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Отбор = Новый Структура();
	Отбор.Вставить("Метаданные", "ОтправкаОтчетностиВБанк");
	Задания = РегламентныеЗаданияСервер.НайтиЗадания(Отбор);
	
	ТребуетсяСоздатьЗадание = Истина;
	
	Если Задания.Количество() > 0 Тогда
		Для Каждого РегЗадание Из Задания Цикл
			Если РегЗадание.Параметры.Количество() > 0 И РегЗадание.Параметры[0] = Организация Тогда
				ТребуетсяСоздатьЗадание = Ложь;
				
				Если НЕ РегЗадание.Использование Тогда
					ПараметрыЗадания = Новый Структура();
					ПараметрыЗадания.Вставить("Использование", Истина);
					РегламентныеЗаданияСервер.ИзменитьЗадание(РегЗадание, ПараметрыЗадания);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТребуетсяСоздатьЗадание Тогда
		ПараметрыЗадания = Новый Структура;
		ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.ОтправкаОтчетностиВБанк);
		
		ПараметрыЗадания.Вставить("Параметры", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация));
		ПараметрыЗадания.Вставить("Расписание", РасписаниеОтправки());
		НаименованиеЗадания = СтрШаблон(НСтр("ru = 'Отправка отчетности в Сбербанк от %1'"), Организация);
		ПараметрыЗадания.Вставить("Наименование", НаименованиеЗадания);
		
		ПараметрыЗадания.Вставить("ИнтервалПовтораПриАварийномЗавершении",    1200);
		ПараметрыЗадания.Вставить("КоличествоПовторовПриАварийномЗавершении", 3);
		ПараметрыЗадания.Вставить("Использование", Истина);
		
		РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ВыключитьЗадание(Организация)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Отбор = Новый Структура();
	Отбор.Вставить("Метаданные", "ОтправкаОтчетностиВБанк");
	Задания = РегламентныеЗаданияСервер.НайтиЗадания(Отбор);
	
	Для Каждого РегЗадание Из Задания Цикл
		Если РегЗадание.Параметры.Количество() > 0 И РегЗадание.Параметры[0] = Организация Тогда
			РегламентныеЗаданияСервер.УдалитьЗадание(РегЗадание);
		КонецЕсли;
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Функция РасписаниеОтправки()
	
	ГСЧ = Новый ГенераторСлучайныхЧисел(ТекущаяУниверсальнаяДатаВМиллисекундах());
	
	Расписание = Новый РасписаниеРегламентногоЗадания;
	Расписание.ПериодПовтораДней = 1;
	Расписание.ПериодПовтораВТечениеДня = 0;
	Расписание.ВремяНачала = '00010101000000' + ГСЧ.СлучайноеЧисло(32400, 61200); // с 9:00 до 17:00
	
	Возврат Расписание;
	
КонецФункции

&НаСервере
Функция ОтправитьОтчетностьВФоне(Организация)
	
	НаименованиеЗадания = НСтр("ru = 'Отправка сведений в Сбербанк'");
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияПроцедуры();
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	РезультатЗапуска = ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения,
		"ОтчетностьВБанкиСлужебный.ОтправитьОтчетностьВБанкПринудительно",
		Организация);
	
	Возврат РезультатЗапуска;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьЗавершениеОтправкиВФоне(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьСведенияНастроекНаСервере();
	
	Организация = Элементы.Организации.ТекущиеДанные.Организация;
	
	ТекстСообщения = НСтр("ru = 'Отчеты по организации %1 отправлены в Сбербанк'");
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Организация);
	
	СообщениеПользователю = Новый СообщениеПользователю;
	СообщениеПользователю.Текст = ТекстСообщения;
	СообщениеПользователю.Сообщить();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьСчетаПоОрганизации(Организация, ОтправлятьТранзакции)
	
	НастройкиСчетов = НастройкиСчетовПоОрганизации(Организация);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НастройкиСчетов", НастройкиСчетов);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Организация", Организация);
	ДополнительныеПараметры.Вставить("ОтправлятьТранзакции", ОтправлятьТранзакции);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьНастройкуСчетовОСВ",
		ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("РегистрСведений.НастройкиОтправкиОтчетностиВБанк.Форма.НастройкаСпискаСчетов",
		ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НастройкиСчетовПоОрганизации(Организация)
	
	СчетаПоОрганизации = РегистрыСведений.НастройкиОтправкиОтчетностиВБанк.НовыйСписокСчетовДляНастройки();
	ДоступныеСчета = ОтчетностьВБанкиСлужебный.СчетаОСВПоСчетам();
	
	Для Каждого Счет Из ДоступныеСчета Цикл
		СтрокаСчета = СчетаПоОрганизации.Добавить();
		СтрокаСчета.Включен = Ложь;
		СтрокаСчета.Счет = Счет;
		СтрокаСчета.Наименование = Счет.Код + " " + Счет.Наименование;
	КонецЦикла;
	
	ЗаписьНастройки = РегистрыСведений.НастройкиОтправкиОтчетностиВБанк.СоздатьМенеджерЗаписи();
	ЗаписьНастройки.Организация = Организация;
	ЗаписьНастройки.Прочитать();
	
	ОтправлятьОСВПоСчетам = ЗаписьНастройки.ОтправлятьОСВПоСчетам;
	ОтправляемыеСчета = ЗаписьНастройки.СчетаОСВПоСчетам.Получить();
	
	Если ОтправлятьОСВПоСчетам Тогда
		Если ОтправляемыеСчета = Неопределено ИЛИ ОтправляемыеСчета.Количество() = 0 Тогда
			Для Каждого Счет Из СчетаПоОрганизации Цикл
				Счет.Включен = Истина;
			КонецЦикла;
		Иначе
			Для Каждого Счет Из ОтправляемыеСчета Цикл
				СтрокаСчета = СчетаПоОрганизации.Найти(Счет, "Счет");
				Если СтрокаСчета <> Неопределено Тогда
					СтрокаСчета.Включен = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(СчетаПоОрганизации);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьНастройкуСчетовОСВ(РезультатНастройки, ДополнительныеПараметры) Экспорт
	
	Если РезультатНастройки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Организация = ДополнительныеПараметры.Организация;
	ОтправлятьТранзакции = ДополнительныеПараметры.ОтправлятьТранзакции;
	
	ИзменитьНастройкуСчетовОСВ(РезультатНастройки, Организация, ОтправлятьТранзакции);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьНастройкуСчетовОСВ(ВыбранныеСчета, Организация, ОтправлятьТранзакции)
	
	ОтправляемыеСчета = Новый Массив;
	Для Каждого ВыбранныйСчет Из ВыбранныеСчета Цикл
		Если ВыбранныйСчет.Включен Тогда
			ОтправляемыеСчета.Добавить(ВыбранныйСчет.Счет);
		КонецЕсли;
	КонецЦикла;
	ОтправлятьОСВПоСчетам = ОтправляемыеСчета.Количество() <> 0;
	
	ЗаписьНастройки = РегистрыСведений.НастройкиОтправкиОтчетностиВБанк.СоздатьМенеджерЗаписи();
	ЗаписьНастройки.Организация = Организация;
	ЗаписьНастройки.Прочитать();
	
	ЗаписьНастройки.Организация = Организация;
	ЗаписьНастройки.ОтправлятьОСВПоСчетам = ОтправлятьОСВПоСчетам;
	ЗаписьНастройки.СчетаОСВПоСчетам = Новый ХранилищеЗначения(ОтправляемыеСчета);
	
	ЗаписьНастройки.Записать();
	
	ОтправлятьОтчеты = ОтправлятьТранзакции ИЛИ ОтправлятьОСВПоСчетам;
	
	Если ОтправлятьОтчеты Тогда
		ВключитьЗадание(Организация);
	Иначе
		ВыключитьЗадание(Организация);
	КонецЕсли;
	
	ОбновитьСведенияНастроекНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ТекстГиперссылкиПоСчетам(СчетаОтправляются, СчетаОСВПоСчетам)
	
	Если СчетаОтправляются Тогда
		ТекстГиперссылки = "Все счета";
		
		Если СчетаОСВПоСчетам = Неопределено Тогда
			СчетаОСВПоСчетам = ОтчетностьВБанкиСлужебный.СчетаОСВПоСчетам();
		КонецЕсли;
		
		КоличествоКодовСчетов = Мин(СчетаОСВПоСчетам.Количество(), 3);
		
		ОсновныеСчета = "";
		Для Инд = 1 По КоличествоКодовСчетов Цикл
			ОсновныеСчета = ОсновныеСчета + ", " + СчетаОСВПоСчетам[Инд - 1].Код;
		КонецЦикла;
		ОсновныеСчета = Сред(ОсновныеСчета, 2);
		
		Если КоличествоКодовСчетов = 1 Тогда
			НачалоНадписи = НСтр("ru = 'Счет '");
		Иначе
			НачалоНадписи = НСтр("ru = 'Счета '");
		КонецЕсли;
		
		СвернутоСчетов = СчетаОСВПоСчетам.Количество() - КоличествоКодовСчетов;
		
		СвернутыеСчета = "";
		Если СвернутоСчетов > 0 Тогда
			СвернутыеСчета = НСтр("ru = ' и еще %1 счетов'");
			ПоследняяЦифра = СвернутоСчетов % 10;
			Если ПоследняяЦифра = 1 Тогда
				СвернутыеСчета = НСтр("ru = ' и еще %1 счет'");
			ИначеЕсли ПоследняяЦифра = 2 ИЛИ ПоследняяЦифра = 3 ИЛИ ПоследняяЦифра = 4 Тогда
				СвернутыеСчета = НСтр("ru = ' и еще %1 счета'");
			КонецЕсли;
			СвернутыеСчета = СтрШаблон(СвернутыеСчета, Формат(СвернутоСчетов, "ЧН=; ЧГ=0"));
		КонецЕсли;
		
		ТекстГиперссылки = НачалоНадписи + ОсновныеСчета + СвернутыеСчета;
		
	Иначе
		ТекстГиперссылки = "Не отправляется";
		
	КонецЕсли;
	
	Возврат ТекстГиперссылки;
	
КонецФункции

#КонецОбласти
