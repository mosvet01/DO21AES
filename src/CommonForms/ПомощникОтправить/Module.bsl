
&НаКлиенте
Перем ОписаниеВариантов;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПомощникНаСервере = ИнициализироватьПомощникаВФорме(
		Параметры.ОбъектыОтправки,
		Параметры.РежимРаботы,
		Параметры.ВозможныеВарианты);
	ПомощникОтправить.ЗаполнитьДеревоВариантовОтправки(ПомощникНаСервере);
	ПомощникОтправить.ПроверитьВозможностьОтправки(ПомощникНаСервере);
	
	ЗаполнитьФормуПоДаннымПомощника(ПомощникНаСервере);
	
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		НастроитьЭлементыФормыДляМобильногоУстройства();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗакрытьФормуПомощникаОтправки" И Источник = ЭтаФорма Тогда
		ЗначениеЗакрытия = Неопределено;
		Если ЗначениеЗаполнено(Параметр) Тогда
			ЗначениеЗакрытия = Параметр;
		КонецЕсли;
		Закрыть(ЗначениеЗакрытия);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОписаниеВариантаПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	ПомощникОтправитьКлиент.ПриНажатииНаОписаниеВарианта(
		Элемент, ДанныеСобытия, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ВариантыОтправки

&НаКлиенте
Процедура ВариантыОтправкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработатьВыборВарианта();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыОтправкиПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ВариантыОтправки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущийВариант = ТекущиеДанные.Вариант;
	ТекущийВариантНедоступен = ТекущиеДанные.Недоступен;
	
	ПодключитьОбработчикОжидания("ОбновитьОписаниеВарианта", 0.2, Истина);
	
	ПодключитьОбработчикОжидания("ОбновитьДоступностьКомандыФормаГотово", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыОтправкиПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	Если Не ЗначениеЗаполнено(ТекущийВариант)
		Или ТипЗнч(ТекущийВариант) = Тип("Строка") Тогда
		
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекущийВариант);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	ОбработатьВыборВарианта();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Выполняет инициализацию помощника в форме.
//
// Параметры:
//  Объекты - Массив - объекты отправки.
//  ДопустимыеВидыВариантов - Массив - допустимые виды отправки.
//  РежимРаботы - Строка - режим работы помощника.
//  ВозможныеВарианты - Массив - список вариантов или их типов.
//
// Возвращаемое значение:
//  Структура - см. ПомощникОтправить.Помощник()
//
&НаСервере
Функция ИнициализироватьПомощникаВФорме(Объекты, РежимРаботы, ВозможныеВарианты)
	
	ПомощникНаСервере = ПомощникОтправить.Помощник();
	ПомощникОтправить.УстановитьРежимРаботы(ПомощникНаСервере, РежимРаботы);
	ПомощникОтправить.ЗаполнитьОбъектыОтправки(ПомощникНаСервере, Объекты);
	ПомощникОтправить.ЗаполнитьВозможныеВарианты(ПомощникНаСервере, ВозможныеВарианты);
	
	Помощник = Новый ХранилищеЗначения(ПомощникНаСервере);
	
	Возврат ПомощникНаСервере;
	
КонецФункции

// Заполняем форму по данным помощника.
//
// Параметры:
//  ПомощникНаСервере - Структура - см. ПомощникОтправить.Помощник()
//
&НаСервере
Процедура ЗаполнитьФормуПоДаннымПомощника(ПомощникНаСервере) Экспорт
	
	// Заполняем заголовоки
	Заголовок = ПомощникОтправить.ЗаголовокПомощника(ПомощникНаСервере);
	Элементы.ФормаГотово.Заголовок = ПомощникОтправить.ЗаголовокКомандыВыбораВариантаПомощника(
		ПомощникНаСервере);
	
	// Заполняем дерево варианто.
	ЭлементыВариантов = ВариантыОтправки.ПолучитьЭлементы();
	ЭлементыВариантов.Очистить();
	
	ДеревоВариантовОтправки = ПомощникОтправить.ДеревоВариантовОтправки(ПомощникНаСервере);
	НедоступныеВарианты = ПомощникОтправить.НедоступныеВарианты(ПомощникНаСервере);
	
	СтрокиКОбработке = Новый Массив;
	Для Каждого СтрокаДерева Из ДеревоВариантовОтправки.Строки Цикл
		СтрокиКОбработке.Добавить(СтрокаДерева);
	КонецЦикла;
	
	СоотвествиеСтрокВариантов = Новый Соответствие;
	// Ключ - строка дерева вариантов
	// Значение - строка вариантов отправки.
	
	ИДСтрокиТекущегоВарианта = Неопределено;
	
	Пока ЗначениеЗаполнено(СтрокиКОбработке) Цикл
		
		СтрокаВДереве = СтрокиКОбработке[0];
		
		ЭлементРодитель = СоотвествиеСтрокВариантов[СтрокаВДереве.Родитель];
		Если ЭлементРодитель = Неопределено Тогда
			ЭлементРодитель = ВариантыОтправки;
		КонецЕсли;
			
		СтрокаВариантаОтправки = ЭлементРодитель.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаВариантаОтправки, СтрокаВДереве);
		
		СтрокаВариантаОтправки.Недоступен = НедоступныеВарианты[СтрокаВариантаОтправки.Вариант];
		
		Если ИДСтрокиТекущегоВарианта = Неопределено
			И СтрокаВариантаОтправки.Вариант = ТекущийВариант Тогда
			
			ИДСтрокиТекущегоВарианта = СтрокаВариантаОтправки.ПолучитьИдентификатор();
		КонецЕсли;
		
		СоотвествиеСтрокВариантов[СтрокаВДереве] = СтрокаВариантаОтправки;
		
		Для Каждого ПодчиненнаяСтрокаДерева Из СтрокаВДереве.Строки Цикл
			СтрокиКОбработке.Добавить(ПодчиненнаяСтрокаДерева);
		КонецЦикла;
		
		СтрокиКОбработке.Удалить(0);
		
	КонецЦикла;
	
	Если ИДСтрокиТекущегоВарианта <> Неопределено Тогда
		Элементы.ВариантыОтправки.ТекущаяСтрока = ИДСтрокиТекущегоВарианта;
	КонецЕсли;
	
КонецПроцедуры

// Обновляет описание варианта.
//
&НаКлиенте
Процедура ОбновитьОписаниеВарианта()
	
	ОписаниеВарианта = "";
	
	ТекущиеДанные = Элементы.ВариантыОтправки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ОписаниеВариантов = Неопределено Тогда
		ОписаниеВариантов = Новый Соответствие;
	КонецЕсли;
	
	ОписаниеВарианта = ОписаниеВариантов[ТекущиеДанные.Вариант];
	
	Если Не ЗначениеЗаполнено(ОписаниеВарианта) Тогда
		ОписаниеВарианта = ОписаниеВарианта(ТекущиеДанные.Вариант);
		ОписаниеВариантов[ТекущиеДанные.Вариант] = ОписаниеВарианта;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает описание варианта.
//
// Параметры:
//  Вариант - Произвольный - вариант
//
// Возвращаемое значение:
//  Строка
//
&НаСервереБезКонтекста
Функция ОписаниеВарианта(Знач Вариант) Экспорт
	
	Возврат ПомощникОтправить.ОписаниеВарианта(Вариант);
	
КонецФункции

// Обновляет доступность команды ФормаГотово.
//
&НаКлиенте
Процедура ОбновитьДоступностьКомандыФормаГотово() Экспорт
	
	ТекущиеДанные = Элементы.ВариантыОтправки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Элементы.ФормаГотово.Доступность = Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.ФормаГотово.Доступность = Не ТекущиеДанные.Недоступен;
	
КонецПроцедуры

// Инициирует обработку выбора варианта отправки.
//
&НаКлиенте
Процедура ОбработатьВыборВарианта()
	
	Если Не ЗначениеЗаполнено(ТекущийВариант) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущийВариантНедоступен Тогда
		Возврат;
	КонецЕсли;
	
	ПомощникОтправитьКлиент.ОбработатьВыборВарианта(
		ТекущийВариант, ПараметрыВарианта(ТекущийВариант, Помощник), ЭтаФорма);
	
КонецПроцедуры

// Возвращает параметры варианта.
//
// Параметры:
//  Вариант - Произвольный - вариант
//  Помощник - ХранилищеЗначений - помощник в форме.
//
// Возвращаемое значение:
//   Структура - см. ПомощникОтправить.ПараметрыВарианта
//
&НаСервереБезКонтекста
Функция ПараметрыВарианта(Знач Вариант, Знач Помощник) Экспорт
	
	ПомощникНаСервере = Помощник.Получить();
	
	Возврат ПомощникОтправить.ПараметрыВарианта(Вариант, ПомощникНаСервере);
	
КонецФункции

&НаСервере
Процедура НастроитьЭлементыФормыДляМобильногоУстройства()
	
	ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Верх;
	Элементы.ГруппаВариантыОтправкиИОписание.Группировка =
		ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяЕслиВозможно;
	Элементы.ОписаниеВарианта.Высота = 5;
	Элементы.ОписаниеВарианта.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	Элементы.ОписаниеВарианта.Заголовок = "Описание";
	
	
КонецПроцедуры

#КонецОбласти